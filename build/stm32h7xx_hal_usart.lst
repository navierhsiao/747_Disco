ARM GAS  /tmp/ccUeuQwq.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"stm32h7xx_hal_usart.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.HAL_USART_Init,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_USART_Init
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	HAL_USART_Init:
  26              	.LFB331:
  27              		.file 1 "./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c"
   1:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
   2:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   ******************************************************************************
   3:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @file    stm32h7xx_hal_usart.c
   4:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @author  MCD Application Team
   5:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief   USART HAL module driver.
   6:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *          This file provides firmware functions to manage the following
   7:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *          functionalities of the Universal Synchronous/Asynchronous Receiver Transmitter
   8:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *          Peripheral (USART).
   9:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           + Initialization and de-initialization functions
  10:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           + IO operation functions
  11:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           + Peripheral Control functions
  12:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           + Peripheral State and Error functions
  13:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
  14:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   @verbatim
  15:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
  16:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                         ##### How to use this driver #####
  17:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
  18:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
  19:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       The USART HAL driver can be used as follows:
  20:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  21:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (#) Declare a USART_HandleTypeDef handle structure (eg. USART_HandleTypeDef husart).
  22:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (#) Initialize the USART low level resources by implementing the HAL_USART_MspInit() API:
  23:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (++) Enable the USARTx interface clock.
  24:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (++) USART pins configuration:
  25:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Enable the clock for the USART GPIOs.
  26:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Configure these USART pins as alternate function pull-up.
  27:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (++) NVIC configuration if you need to use interrupt process (HAL_USART_Transmit_IT(),
  28:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                 HAL_USART_Receive_IT() and HAL_USART_TransmitReceive_IT() APIs):
  29:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Configure the USARTx interrupt priority.
  30:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (++) USART interrupts handling:
ARM GAS  /tmp/ccUeuQwq.s 			page 2


  32:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               -@@-   The specific USART interrupts (Transmission complete interrupt,
  33:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                   RXNE interrupt and Error Interrupts) will be managed using the macros
  34:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                   __HAL_USART_ENABLE_IT() and __HAL_USART_DISABLE_IT() inside the transmit and rece
  35:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (++) DMA Configuration if you need to use DMA process (HAL_USART_Transmit_DMA()
  36:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                HAL_USART_Receive_DMA() and HAL_USART_TransmitReceive_DMA() APIs):
  37:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Enable the DMAx interface clock.
  39:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Associate the initialized DMA handle to the USART DMA Tx/Rx handle.
  42:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (+++) Configure the priority and enable the NVIC for the transfer
  43:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                   complete interrupt on the DMA Tx/Rx channel.
  44:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  45:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (#) Program the Baud Rate, Word Length, Stop Bit, Parity, and Mode
  46:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (Receiver/Transmitter) in the husart handle Init structure.
  47:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  48:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (#) Initialize the USART registers by calling the HAL_USART_Init() API:
  49:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (++) This API configures also the low level Hardware GPIO, CLOCK, CORTEX...etc)
  50:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                by calling the customized HAL_USART_MspInit(&husart) API.
  51:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  52:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
  53:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      (@) To configure and enable/disable the USART to wake up the MCU from stop mode, resort to UAR
  54:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_UARTEx_StopModeWakeUpSourceConfig(), HAL_UARTEx_EnableStopMode() and
  55:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_UARTEx_DisableStopMode() in casting the USART handle to UART type UART_HandleTypeDef.
  56:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  57:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     ##### Callback registration #####
  58:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     ==================================
  59:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  60:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
  61:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     The compilation define USE_HAL_USART_REGISTER_CALLBACKS when set to 1
  62:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     allows the user to configure dynamically the driver callbacks.
  63:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  64:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
  65:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Use Function @ref HAL_USART_RegisterCallback() to register a user callback.
  66:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Function @ref HAL_USART_RegisterCallback() allows to register following callbacks:
  67:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  68:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  69:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  70:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  71:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxRxCpltCallback          : Tx Rx Complete Callback.
  72:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) ErrorCallback             : Error Callback.
  73:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  74:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  75:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  76:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) MspInitCallback           : USART MspInit.
  77:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) MspDeInitCallback         : USART MspDeInit.
  78:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  79:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     and a pointer to the user callback function.
  80:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  81:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
  82:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Use function @ref HAL_USART_UnRegisterCallback() to reset a callback to the default
  83:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     weak (surcharged) function.
  84:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     @ref HAL_USART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  85:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     and the Callback ID.
  86:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     This function allows to reset following callbacks:
  87:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  88:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
ARM GAS  /tmp/ccUeuQwq.s 			page 3


  89:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  90:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  91:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxRxCpltCallback          : Tx Rx Complete Callback.
  92:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) ErrorCallback             : Error Callback.
  93:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  94:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  95:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  96:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) MspInitCallback           : USART MspInit.
  97:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (+) MspDeInitCallback         : USART MspDeInit.
  98:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
  99:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     By default, after the @ref HAL_USART_Init() and when the state is HAL_USART_STATE_RESET
 101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     examples @ref HAL_USART_TxCpltCallback(), @ref HAL_USART_RxHalfCpltCallback().
 103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_USART_Init()
 105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     and @ref HAL_USART_DeInit() only when these callbacks are null (not registered beforehand).
 106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_USART_Init() and @ref HAL_USART_DeInit(
 107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Callbacks can be registered/unregistered in HAL_USART_STATE_READY state only.
 111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     in HAL_USART_STATE_READY or HAL_USART_STATE_RESET state, thus registered (user)
 113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     using @ref HAL_USART_RegisterCallback() before calling @ref HAL_USART_DeInit()
 116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     or @ref HAL_USART_Init() function.
 117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     When The compilation define USE_HAL_USART_REGISTER_CALLBACKS is set to 0 or
 120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     not defined, the callback registration feature is not available
 121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     and weak (surcharged) callbacks are used.
 122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   @endverbatim
 125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   ******************************************************************************
 126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @attention
 127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
 128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * All rights reserved.</center></h2>
 130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
 131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * the "License"; You may not use this file except in compliance with the
 133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * License. You may obtain a copy of the License at:
 134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
 136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   ******************************************************************************
 137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Includes ------------------------------------------------------------------*/
 140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #include "stm32h7xx_hal.h"
 141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @addtogroup STM32H7xx_HAL_Driver
 143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 4


 146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART USART
 147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief HAL USART Synchronous module driver
 148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #ifdef HAL_USART_MODULE_ENABLED
 152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Private typedef -----------------------------------------------------------*/
 154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Private define ------------------------------------------------------------*/
 155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Private_Constants USART Private Constants
 156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_DUMMY_DATA          ((uint16_t) 0xFFFF)           /*!< USART transmitted dummy data  
 159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_TEACK_REACK_TIMEOUT             1000U             /*!< USART TX or RX enable acknowle
 160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_CR1_FIELDS          ((uint32_t)(USART_CR1_M |  USART_CR1_PCE | USART_CR1_PS    | \
 161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                               USART_CR1_TE | USART_CR1_RE  | USART_CR1_OVER8 | \
 162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                               USART_CR1_FIFOEN ))                                  
 163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_CR2_FIELDS          ((uint32_t)(USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_CLKEN | \
 165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                               USART_CR2_LBCL | USART_CR2_STOP | USART_CR2_SLVEN | \
 166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                               USART_CR2_DIS_NSS))                                  
 167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_CR3_FIELDS          ((uint32_t)(USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))             
 169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_BRR_MIN    0x10U        /* USART BRR minimum authorized value */
 171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #define USART_BRR_MAX    0xFFFFU      /* USART BRR maximum authorized value */
 172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
 174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Private macros ------------------------------------------------------------*/
 177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Private variables ---------------------------------------------------------*/
 178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Private function prototypes -----------------------------------------------*/
 179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @addtogroup USART_Private_Functions
 180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** void USART_InitCallbacksToDefault(USART_HandleTypeDef *husart);
 184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_EndTransfer(USART_HandleTypeDef *husart);
 186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma);
 191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
 195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                       uint32_t Tickstart, uint32_t Timeout);
 196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_SetConfig(USART_HandleTypeDef *husart);
 197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_CheckIdleState(USART_HandleTypeDef *husart);
 198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_8BIT(USART_HandleTypeDef *husart);
 199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_16BIT(USART_HandleTypeDef *husart);
 200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_8BIT_FIFOEN(USART_HandleTypeDef *husart);
 201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_16BIT_FIFOEN(USART_HandleTypeDef *husart);
 202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_EndTransmit_IT(USART_HandleTypeDef *husart);
ARM GAS  /tmp/ccUeuQwq.s 			page 5


 203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_8BIT(USART_HandleTypeDef *husart);
 204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_16BIT(USART_HandleTypeDef *husart);
 205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_8BIT_FIFOEN(USART_HandleTypeDef *husart);
 206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_16BIT_FIFOEN(USART_HandleTypeDef *husart);
 207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
 211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /* Exported functions --------------------------------------------------------*/
 214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Exported_Functions USART Exported Functions
 216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group1 Initialization and de-initialization functions
 220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief    Initialization and Configuration functions
 221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
 222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @verbatim
 223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
 224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             ##### Initialization and Configuration functions #####
 225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
 226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     This subsection provides a set of functions allowing to initialize the USART
 228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     in asynchronous and in synchronous modes.
 229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Baud Rate
 231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Word Length
 232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Stop Bit
 233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              in the data register is transmitted but is changed by the parity bit.
 235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) USART polarity
 236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) USART phase
 237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) USART LastBit
 238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Receiver/transmitter modes
 239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     The HAL_USART_Init() function follows the USART  synchronous configuration
 242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     procedure (details for the procedure are available in reference manual).
 243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @endverbatim
 245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   8-bit or 9-bit), the possible USART formats are listed in the
 248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   following table.
 249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     Table 1. USART frame format.
 251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     +-----------------------------------------------------------------------+
 252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |  M1 bit |  M0 bit |  PCE bit  |            USART frame                |
 253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
 254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
 256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
 258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
ARM GAS  /tmp/ccUeuQwq.s 			page 6


 260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
 262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |---------|---------|-----------|---------------------------------------|
 264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     +-----------------------------------------------------------------------+
 266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Initialize the USART mode according to the specified
 272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         parameters in the USART_InitTypeDef and initialize the associated handle.
 273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
 274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Init(USART_HandleTypeDef *husart)
 277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
  28              		.loc 1 277 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check the USART handle allocation */
 279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart == NULL)
  44              		.loc 1 279 6
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_ERROR;
  48              		.loc 1 281 12
  49 000e 0123     		movs	r3, #1
  50 0010 3CE0     		b	.L3
  51              	.L2:
 282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check the parameters */
 285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_RESET)
  52              		.loc 1 287 13
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F85930 		ldrb	r3, [r3, #89]
  55 0018 DBB2     		uxtb	r3, r3
  56              		.loc 1 287 6
ARM GAS  /tmp/ccUeuQwq.s 			page 7


  57 001a 002B     		cmp	r3, #0
  58 001c 06D1     		bne	.L4
 288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Allocate lock resource and initialize it */
 290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->Lock = HAL_UNLOCKED;
  59              		.loc 1 290 18
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 0022     		movs	r2, #0
  62 0022 83F85820 		strb	r2, [r3, #88]
 291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_InitCallbacksToDefault(husart);
 294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->MspInitCallback == NULL)
 296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->MspInitCallback = HAL_USART_MspInit;
 298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Init the low level hardware */
 301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->MspInitCallback(husart);
 302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
 303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USART_MspInit(husart);
  63              		.loc 1 304 5
  64 0026 7868     		ldr	r0, [r7, #4]
  65 0028 FFF7FEFF 		bl	HAL_USART_MspInit
  66              	.L4:
 305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
  67              		.loc 1 308 17
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 0222     		movs	r2, #2
  70 0030 83F85920 		strb	r2, [r3, #89]
 309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the Peripheral */
 311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_DISABLE(husart);
  71              		.loc 1 311 3
  72 0034 7B68     		ldr	r3, [r7, #4]
  73 0036 1B68     		ldr	r3, [r3]
  74 0038 1A68     		ldr	r2, [r3]
  75 003a 7B68     		ldr	r3, [r7, #4]
  76 003c 1B68     		ldr	r3, [r3]
  77 003e 22F00102 		bic	r2, r2, #1
  78 0042 1A60     		str	r2, [r3]
 312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Set the Usart Communication parameters */
 314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (USART_SetConfig(husart) == HAL_ERROR)
  79              		.loc 1 314 7
  80 0044 7868     		ldr	r0, [r7, #4]
  81 0046 FFF7FEFF 		bl	USART_SetConfig
  82 004a 0346     		mov	r3, r0
  83              		.loc 1 314 6
  84 004c 012B     		cmp	r3, #1
  85 004e 01D1     		bne	.L5
 315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
ARM GAS  /tmp/ccUeuQwq.s 			page 8


 316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_ERROR;
  86              		.loc 1 316 12
  87 0050 0123     		movs	r3, #1
  88 0052 1BE0     		b	.L3
  89              	.L5:
 317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* In Synchronous mode, the following bits must be kept cleared:
 320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   - LINEN bit in the USART_CR2 register
 321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   - HDSEL, SCEN and IREN bits in the USART_CR3 register.
 322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->Instance->CR2 &= ~USART_CR2_LINEN;
  90              		.loc 1 323 9
  91 0054 7B68     		ldr	r3, [r7, #4]
  92 0056 1B68     		ldr	r3, [r3]
  93              		.loc 1 323 25
  94 0058 5A68     		ldr	r2, [r3, #4]
  95              		.loc 1 323 9
  96 005a 7B68     		ldr	r3, [r7, #4]
  97 005c 1B68     		ldr	r3, [r3]
  98              		.loc 1 323 25
  99 005e 22F48042 		bic	r2, r2, #16384
 100 0062 5A60     		str	r2, [r3, #4]
 324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->Instance->CR3 &= ~(USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN);
 101              		.loc 1 324 9
 102 0064 7B68     		ldr	r3, [r7, #4]
 103 0066 1B68     		ldr	r3, [r3]
 104              		.loc 1 324 25
 105 0068 9A68     		ldr	r2, [r3, #8]
 106              		.loc 1 324 9
 107 006a 7B68     		ldr	r3, [r7, #4]
 108 006c 1B68     		ldr	r3, [r3]
 109              		.loc 1 324 25
 110 006e 22F02A02 		bic	r2, r2, #42
 111 0072 9A60     		str	r2, [r3, #8]
 325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Enable the Peripheral */
 327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_ENABLE(husart);
 112              		.loc 1 327 3
 113 0074 7B68     		ldr	r3, [r7, #4]
 114 0076 1B68     		ldr	r3, [r3]
 115 0078 1A68     		ldr	r2, [r3]
 116 007a 7B68     		ldr	r3, [r7, #4]
 117 007c 1B68     		ldr	r3, [r3]
 118 007e 42F00102 		orr	r2, r2, #1
 119 0082 1A60     		str	r2, [r3]
 328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* TEACK and/or REACK to check before moving husart->State to Ready */
 330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return (USART_CheckIdleState(husart));
 120              		.loc 1 330 11
 121 0084 7868     		ldr	r0, [r7, #4]
 122 0086 FFF7FEFF 		bl	USART_CheckIdleState
 123 008a 0346     		mov	r3, r0
 124              	.L3:
 331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 125              		.loc 1 331 1
 126 008c 1846     		mov	r0, r3
ARM GAS  /tmp/ccUeuQwq.s 			page 9


 127 008e 0837     		adds	r7, r7, #8
 128              	.LCFI3:
 129              		.cfi_def_cfa_offset 8
 130 0090 BD46     		mov	sp, r7
 131              	.LCFI4:
 132              		.cfi_def_cfa_register 13
 133              		@ sp needed
 134 0092 80BD     		pop	{r7, pc}
 135              		.cfi_endproc
 136              	.LFE331:
 138              		.section	.text.HAL_USART_DeInit,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_USART_DeInit
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv5-d16
 146              	HAL_USART_DeInit:
 147              	.LFB332:
 332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DeInitialize the USART peripheral.
 335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
 336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DeInit(USART_HandleTypeDef *husart)
 339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 148              		.loc 1 339 1
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI7:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
 340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check the USART handle allocation */
 341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart == NULL)
 164              		.loc 1 341 6
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 002B     		cmp	r3, #0
 167 000c 01D1     		bne	.L7
 342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_ERROR;
 168              		.loc 1 343 12
 169 000e 0123     		movs	r3, #1
 170 0010 1EE0     		b	.L8
 171              	.L7:
 344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 10


 346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check the parameters */
 347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_INSTANCE(husart->Instance));
 348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_BUSY;
 172              		.loc 1 349 17
 173 0012 7B68     		ldr	r3, [r7, #4]
 174 0014 0222     		movs	r2, #2
 175 0016 83F85920 		strb	r2, [r3, #89]
 350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->Instance->CR1 = 0x0U;
 176              		.loc 1 351 9
 177 001a 7B68     		ldr	r3, [r7, #4]
 178 001c 1B68     		ldr	r3, [r3]
 179              		.loc 1 351 25
 180 001e 0022     		movs	r2, #0
 181 0020 1A60     		str	r2, [r3]
 352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->Instance->CR2 = 0x0U;
 182              		.loc 1 352 9
 183 0022 7B68     		ldr	r3, [r7, #4]
 184 0024 1B68     		ldr	r3, [r3]
 185              		.loc 1 352 25
 186 0026 0022     		movs	r2, #0
 187 0028 5A60     		str	r2, [r3, #4]
 353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->Instance->CR3 = 0x0U;
 188              		.loc 1 353 9
 189 002a 7B68     		ldr	r3, [r7, #4]
 190 002c 1B68     		ldr	r3, [r3]
 191              		.loc 1 353 25
 192 002e 0022     		movs	r2, #0
 193 0030 9A60     		str	r2, [r3, #8]
 354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->MspDeInitCallback == NULL)
 357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->MspDeInitCallback = HAL_USART_MspDeInit;
 359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DeInit the low level hardware */
 361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->MspDeInitCallback(husart);
 362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
 363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DeInit the low level hardware */
 364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_MspDeInit(husart);
 194              		.loc 1 364 3
 195 0032 7868     		ldr	r0, [r7, #4]
 196 0034 FFF7FEFF 		bl	HAL_USART_MspDeInit
 365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 197              		.loc 1 367 21
 198 0038 7B68     		ldr	r3, [r7, #4]
 199 003a 0022     		movs	r2, #0
 200 003c DA65     		str	r2, [r3, #92]
 368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_RESET;
 201              		.loc 1 368 17
 202 003e 7B68     		ldr	r3, [r7, #4]
 203 0040 0022     		movs	r2, #0
 204 0042 83F85920 		strb	r2, [r3, #89]
 369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 11


 370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Unlock */
 371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 205              		.loc 1 371 3
 206 0046 7B68     		ldr	r3, [r7, #4]
 207 0048 0022     		movs	r2, #0
 208 004a 83F85820 		strb	r2, [r3, #88]
 372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 209              		.loc 1 373 10
 210 004e 0023     		movs	r3, #0
 211              	.L8:
 374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 212              		.loc 1 374 1
 213 0050 1846     		mov	r0, r3
 214 0052 0837     		adds	r7, r7, #8
 215              	.LCFI8:
 216              		.cfi_def_cfa_offset 8
 217 0054 BD46     		mov	sp, r7
 218              	.LCFI9:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 0056 80BD     		pop	{r7, pc}
 222              		.cfi_endproc
 223              	.LFE332:
 225              		.section	.text.HAL_USART_MspInit,"ax",%progbits
 226              		.align	1
 227              		.weak	HAL_USART_MspInit
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 231              		.fpu fpv5-d16
 233              	HAL_USART_MspInit:
 234              	.LFB333:
 375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Initialize the USART MSP.
 378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
 379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
 380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_MspInit(USART_HandleTypeDef *husart)
 382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 235              		.loc 1 382 1
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 8
 238              		@ frame_needed = 1, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240 0000 80B4     		push	{r7}
 241              	.LCFI10:
 242              		.cfi_def_cfa_offset 4
 243              		.cfi_offset 7, -4
 244 0002 83B0     		sub	sp, sp, #12
 245              	.LCFI11:
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              	.LCFI12:
 249              		.cfi_def_cfa_register 7
 250 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 12


 383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
 384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
 385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_MspInit can be implemented in the user file
 388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
 389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 251              		.loc 1 389 1
 252 0008 00BF     		nop
 253 000a 0C37     		adds	r7, r7, #12
 254              	.LCFI13:
 255              		.cfi_def_cfa_offset 4
 256 000c BD46     		mov	sp, r7
 257              	.LCFI14:
 258              		.cfi_def_cfa_register 13
 259              		@ sp needed
 260 000e 5DF8047B 		ldr	r7, [sp], #4
 261              	.LCFI15:
 262              		.cfi_restore 7
 263              		.cfi_def_cfa_offset 0
 264 0012 7047     		bx	lr
 265              		.cfi_endproc
 266              	.LFE333:
 268              		.section	.text.HAL_USART_MspDeInit,"ax",%progbits
 269              		.align	1
 270              		.weak	HAL_USART_MspDeInit
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv5-d16
 276              	HAL_USART_MspDeInit:
 277              	.LFB334:
 390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DeInitialize the USART MSP.
 393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
 394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
 395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_MspDeInit(USART_HandleTypeDef *husart)
 397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 278              		.loc 1 397 1
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283 0000 80B4     		push	{r7}
 284              	.LCFI16:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 7, -4
 287 0002 83B0     		sub	sp, sp, #12
 288              	.LCFI17:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI18:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccUeuQwq.s 			page 13


 399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
 400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_MspDeInit can be implemented in the user file
 403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
 404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 294              		.loc 1 404 1
 295 0008 00BF     		nop
 296 000a 0C37     		adds	r7, r7, #12
 297              	.LCFI19:
 298              		.cfi_def_cfa_offset 4
 299 000c BD46     		mov	sp, r7
 300              	.LCFI20:
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 000e 5DF8047B 		ldr	r7, [sp], #4
 304              	.LCFI21:
 305              		.cfi_restore 7
 306              		.cfi_def_cfa_offset 0
 307 0012 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE334:
 311              		.section	.text.HAL_USART_Transmit,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_USART_Transmit
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv5-d16
 319              	HAL_USART_Transmit:
 320              	.LFB335:
 405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
 407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Register a User USART Callback
 409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         To be used instead of the weak predefined callback
 410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart usart handle
 411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  CallbackID ID of the callback to be registered
 412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         This parameter can be one of the following values:
 413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_RX_COMPLETE_CB_ID Rx Complete Callback ID
 418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_ERROR_CB_ID Error Callback ID
 419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPINIT_CB_ID MspInit Callback ID
 423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPDEINIT_CB_ID MspDeInit Callback ID
 424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pCallback pointer to the Callback function
 425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** +  */
 427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_RegisterCallback(USART_HandleTypeDef *husart, HAL_USART_CallbackIDTypeD
 428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                              pUSART_CallbackTypeDef pCallback)
 429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccUeuQwq.s 			page 14


 431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (pCallback == NULL)
 433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Update the error code */
 435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_ERROR;
 438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process locked */
 440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_LOCK(husart);
 441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     switch (CallbackID)
 445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_HALFCOMPLETE_CB_ID :
 447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxHalfCpltCallback = pCallback;
 448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_COMPLETE_CB_ID :
 451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxCpltCallback = pCallback;
 452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_HALFCOMPLETE_CB_ID :
 455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxHalfCpltCallback = pCallback;
 456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_COMPLETE_CB_ID :
 459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxCpltCallback = pCallback;
 460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_RX_COMPLETE_CB_ID :
 463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxRxCpltCallback = pCallback;
 464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_ERROR_CB_ID :
 467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCallback = pCallback;
 468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_ABORT_COMPLETE_CB_ID :
 471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->AbortCpltCallback = pCallback;
 472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_FIFO_FULL_CB_ID :
 475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxFifoFullCallback = pCallback;
 476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_FIFO_EMPTY_CB_ID :
 479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxFifoEmptyCallback = pCallback;
 480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspInitCallback = pCallback;
 484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspDeInitCallback = pCallback;
ARM GAS  /tmp/ccUeuQwq.s 			page 15


 488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       default :
 491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Update the error code */
 492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Return error status */
 495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status =  HAL_ERROR;
 496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else if (husart->State == HAL_USART_STATE_RESET)
 500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     switch (CallbackID)
 502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspInitCallback = pCallback;
 505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspDeInitCallback = pCallback;
 509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       default :
 512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Update the error code */
 513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Return error status */
 516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status =  HAL_ERROR;
 517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
 521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Update the error code */
 523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Return error status */
 526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     status =  HAL_ERROR;
 527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Release Lock */
 530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return status;
 533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Unregister an USART Callback
 537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         USART callaback is redirected to the weak predefined callback
 538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart usart handle
 539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  CallbackID ID of the callback to be unregistered
 540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         This parameter can be one of the following values:
 541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_COMPLETE_CB_ID Rx Complete Callback ID
ARM GAS  /tmp/ccUeuQwq.s 			page 16


 545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_RX_COMPLETE_CB_ID Rx Complete Callback ID
 546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_ERROR_CB_ID Error Callback ID
 547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPINIT_CB_ID MspInit Callback ID
 551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           @arg @ref HAL_USART_MSPDEINIT_CB_ID MspDeInit Callback ID
 552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_UnRegisterCallback(USART_HandleTypeDef *husart, HAL_USART_CallbackIDTyp
 555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
 557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process locked */
 559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_LOCK(husart);
 560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (HAL_USART_STATE_READY == husart->State)
 562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     switch (CallbackID)
 564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_HALFCOMPLETE_CB_ID :
 566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxHalfCpltCallback = HAL_USART_TxHalfCpltCallback;               /* Legacy weak  Tx
 567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_COMPLETE_CB_ID :
 570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxCpltCallback = HAL_USART_TxCpltCallback;                       /* Legacy weak TxC
 571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_HALFCOMPLETE_CB_ID :
 574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxHalfCpltCallback = HAL_USART_RxHalfCpltCallback;               /* Legacy weak RxH
 575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_COMPLETE_CB_ID :
 578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxCpltCallback = HAL_USART_RxCpltCallback;                       /* Legacy weak RxC
 579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_RX_COMPLETE_CB_ID :
 582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxRxCpltCallback = HAL_USART_TxRxCpltCallback;                   /* Legacy weak TxR
 583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_ERROR_CB_ID :
 586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCallback = HAL_USART_ErrorCallback;                         /* Legacy weak Err
 587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_ABORT_COMPLETE_CB_ID :
 590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->AbortCpltCallback = HAL_USART_AbortCpltCallback;                 /* Legacy weak Abo
 591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_RX_FIFO_FULL_CB_ID :
 594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxFifoFullCallback = HAL_USARTEx_RxFifoFullCallback;             /* Legacy weak RxF
 595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_TX_FIFO_EMPTY_CB_ID :
 598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxFifoEmptyCallback = HAL_USARTEx_TxFifoEmptyCallback;           /* Legacy weak TxF
 599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
ARM GAS  /tmp/ccUeuQwq.s 			page 17


 602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspInitCallback = HAL_USART_MspInit;                             /* Legacy weak Msp
 603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspDeInitCallback = HAL_USART_MspDeInit;                         /* Legacy weak Msp
 607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       default :
 610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Update the error code */
 611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Return error status */
 614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status =  HAL_ERROR;
 615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else if (HAL_USART_STATE_RESET == husart->State)
 619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     switch (CallbackID)
 621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPINIT_CB_ID :
 623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspInitCallback = HAL_USART_MspInit;
 624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       case HAL_USART_MSPDEINIT_CB_ID :
 627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->MspDeInitCallback = HAL_USART_MspDeInit;
 628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       default :
 631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Update the error code */
 632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Return error status */
 635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status =  HAL_ERROR;
 636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break;
 637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
 640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Update the error code */
 642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode |= HAL_USART_ERROR_INVALID_CALLBACK;
 643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Return error status */
 645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     status =  HAL_ERROR;
 646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Release Lock */
 649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return status;
 652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
 658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
ARM GAS  /tmp/ccUeuQwq.s 			page 18


 659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group2 IO operation functions
 661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief   USART Transmit and Receive functions
 662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
 663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @verbatim
 664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
 665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                       ##### IO operation functions #####
 666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****  ===============================================================================
 667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART synchronous
 668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     data transfers.
 669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..] The USART supports master mode only: it cannot receive or send data related to an input
 671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          clock (SCLK is always an output).
 672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
 674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) There are two modes of transfer:
 676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Blocking mode: The communication is performed in polling mode.
 677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              The HAL status of all data processing is returned by the same function
 678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              after finishing transfer.
 679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) No-Blocking mode: The communication is performed using Interrupts
 680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              or DMA, These API's return the HAL status.
 681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              The end of the data processing will be indicated through the
 682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              dedicated USART IRQ when using Interrupt mode or the DMA IRQ when
 683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              using DMA mode.
 684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              The HAL_USART_TxCpltCallback(), HAL_USART_RxCpltCallback() and HAL_USART_TxRxCpltCallb
 685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              will be executed respectively at the end of the transmit or Receive process
 686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              The HAL_USART_ErrorCallback()user callback will be executed when a communication error
 687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) Blocking mode API's are :
 689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Transmit() in simplex mode
 690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Receive() in full duplex receive only
 691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive() in full duplex mode
 692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Transmit_IT() in simplex mode
 695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Receive_IT() in full duplex receive only
 696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_IT() in full duplex mode
 697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_IRQHandler()
 698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) No-Blocking mode API's  with DMA are :
 700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Transmit_DMA() in simplex mode
 701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Receive_DMA() in full duplex receive only
 702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TransmitReceive_DMA() in full duplex mode
 703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_DMAPause()
 704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_DMAResume()
 705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_DMAStop()
 706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TxCpltCallback()
 709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_RxCpltCallback()
 710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TxHalfCpltCallback()
 711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_RxHalfCpltCallback()
 712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_ErrorCallback()
 713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_TxRxCpltCallback()
 714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
ARM GAS  /tmp/ccUeuQwq.s 			page 19


 716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Abort()
 717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_Abort_IT()
 718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) For Abort services based on interrupts (HAL_USART_Abort_IT), a Abort Complete Callbacks is 
 720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) HAL_USART_AbortCpltCallback()
 721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         Errors are handled as follows :
 724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Error is considered as Recoverable and non blocking : Transfer could go till end, but 
 725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              to be evaluated by user : this concerns Frame Error,
 726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              Parity Error or Noise Error in Interrupt mode reception .
 727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              Received character is then retrieved and stored in Rx buffer, Error code is set to all
 728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              error type, and HAL_USART_ErrorCallback() user callback is executed.
 729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              Transfer is kept ongoing on USART side.
 730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              If user wants to abort it, Abort services should be called by user.
 731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (++) Error is considered as Blocking : Transfer could not be completed properly and is abor
 732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              Error code is set to allow user to identify error type,
 734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              and HAL_USART_ErrorCallback() user callback is executed.
 735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @endverbatim
 737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
 738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex send an amount of data in blocking mode.
 742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
 743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
 744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 provided through pTxData.
 745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
 746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData Pointer to data buffer (u8 or u16 data elements).
 747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size Amount of data elements (u8 or u16) to be sent.
 748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Timeout Timeout duration.
 749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Size, 
 752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 321              		.loc 1 752 1
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 32
 324              		@ frame_needed = 1, uses_anonymous_args = 0
 325 0000 80B5     		push	{r7, lr}
 326              	.LCFI22:
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 8AB0     		sub	sp, sp, #40
 331              	.LCFI23:
 332              		.cfi_def_cfa_offset 48
 333 0004 02AF     		add	r7, sp, #8
 334              	.LCFI24:
 335              		.cfi_def_cfa 7, 40
 336 0006 F860     		str	r0, [r7, #12]
 337 0008 B960     		str	r1, [r7, #8]
 338 000a 3B60     		str	r3, [r7]
 339 000c 1346     		mov	r3, r2	@ movhi
 340 000e FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  /tmp/ccUeuQwq.s 			page 20


 753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint8_t  *ptxdata8bits;
 754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *ptxdata16bits;
 755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t tickstart;
 756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 341              		.loc 1 757 13
 342 0010 FB68     		ldr	r3, [r7, #12]
 343 0012 93F85930 		ldrb	r3, [r3, #89]
 344 0016 DBB2     		uxtb	r3, r3
 345              		.loc 1 757 6
 346 0018 012B     		cmp	r3, #1
 347 001a 40F09580 		bne	.L12
 758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0U))
 348              		.loc 1 759 8
 349 001e BB68     		ldr	r3, [r7, #8]
 350 0020 002B     		cmp	r3, #0
 351 0022 02D0     		beq	.L13
 352              		.loc 1 759 27 discriminator 1
 353 0024 FB88     		ldrh	r3, [r7, #6]
 354 0026 002B     		cmp	r3, #0
 355 0028 01D1     		bne	.L14
 356              	.L13:
 760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return  HAL_ERROR;
 357              		.loc 1 761 15
 358 002a 0123     		movs	r3, #1
 359 002c 8DE0     		b	.L15
 360              	.L14:
 762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
 765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 361              		.loc 1 765 5
 362 002e FB68     		ldr	r3, [r7, #12]
 363 0030 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 364 0034 012B     		cmp	r3, #1
 365 0036 01D1     		bne	.L16
 366              		.loc 1 765 5 is_stmt 0 discriminator 1
 367 0038 0223     		movs	r3, #2
 368 003a 86E0     		b	.L15
 369              	.L16:
 370              		.loc 1 765 5 discriminator 2
 371 003c FB68     		ldr	r3, [r7, #12]
 372 003e 0122     		movs	r2, #1
 373 0040 83F85820 		strb	r2, [r3, #88]
 766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 374              		.loc 1 767 23 is_stmt 1 discriminator 2
 375 0044 FB68     		ldr	r3, [r7, #12]
 376 0046 0022     		movs	r2, #0
 377 0048 DA65     		str	r2, [r3, #92]
 768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 378              		.loc 1 768 19 discriminator 2
 379 004a FB68     		ldr	r3, [r7, #12]
 380 004c 1222     		movs	r2, #18
 381 004e 83F85920 		strb	r2, [r3, #89]
ARM GAS  /tmp/ccUeuQwq.s 			page 21


 769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Init tickstart for timeout management */
 771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     tickstart = HAL_GetTick();
 382              		.loc 1 771 17 discriminator 2
 383 0052 FFF7FEFF 		bl	HAL_GetTick
 384 0056 7861     		str	r0, [r7, #20]
 772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 385              		.loc 1 773 24 discriminator 2
 386 0058 FB68     		ldr	r3, [r7, #12]
 387 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 388 005c 9A85     		strh	r2, [r3, #44]	@ movhi
 774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = Size;
 389              		.loc 1 774 25 discriminator 2
 390 005e FB68     		ldr	r3, [r7, #12]
 391 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 392 0062 DA85     		strh	r2, [r3, #46]	@ movhi
 775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pTxData needs to be handled as a uint16_t pointer */
 777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 393              		.loc 1 777 22 discriminator 2
 394 0064 FB68     		ldr	r3, [r7, #12]
 395 0066 9B68     		ldr	r3, [r3, #8]
 396              		.loc 1 777 8 discriminator 2
 397 0068 B3F5805F 		cmp	r3, #4096
 398 006c 08D1     		bne	.L17
 399              		.loc 1 777 74 discriminator 1
 400 006e FB68     		ldr	r3, [r7, #12]
 401 0070 1B69     		ldr	r3, [r3, #16]
 402              		.loc 1 777 58 discriminator 1
 403 0072 002B     		cmp	r3, #0
 404 0074 04D1     		bne	.L17
 778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata8bits  = NULL;
 405              		.loc 1 779 21
 406 0076 0023     		movs	r3, #0
 407 0078 FB61     		str	r3, [r7, #28]
 780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata16bits = (uint16_t *) pTxData;
 408              		.loc 1 780 21
 409 007a BB68     		ldr	r3, [r7, #8]
 410 007c BB61     		str	r3, [r7, #24]
 411 007e 03E0     		b	.L18
 412              	.L17:
 781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
 783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata8bits  = pTxData;
 413              		.loc 1 784 21
 414 0080 BB68     		ldr	r3, [r7, #8]
 415 0082 FB61     		str	r3, [r7, #28]
 785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata16bits = NULL;
 416              		.loc 1 785 21
 417 0084 0023     		movs	r3, #0
 418 0086 BB61     		str	r3, [r7, #24]
 419              	.L18:
 786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 22


 788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Check the remaining data to be sent */
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     while (husart->TxXferCount > 0U)
 420              		.loc 1 789 11
 421 0088 2AE0     		b	.L19
 422              	.L23:
 790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK
 423              		.loc 1 791 11
 424 008a 3B68     		ldr	r3, [r7]
 425 008c 0093     		str	r3, [sp]
 426 008e 7B69     		ldr	r3, [r7, #20]
 427 0090 0022     		movs	r2, #0
 428 0092 8021     		movs	r1, #128
 429 0094 F868     		ldr	r0, [r7, #12]
 430 0096 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 431 009a 0346     		mov	r3, r0
 432              		.loc 1 791 10
 433 009c 002B     		cmp	r3, #0
 434 009e 01D0     		beq	.L20
 792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 435              		.loc 1 793 16
 436 00a0 0323     		movs	r3, #3
 437 00a2 52E0     		b	.L15
 438              	.L20:
 794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (ptxdata8bits == NULL)
 439              		.loc 1 795 10
 440 00a4 FB69     		ldr	r3, [r7, #28]
 441 00a6 002B     		cmp	r3, #0
 442 00a8 0BD1     		bne	.L21
 796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint16_t)(*ptxdata16bits & 0x01FFU);
 443              		.loc 1 797 44
 444 00aa BB69     		ldr	r3, [r7, #24]
 445 00ac 1B88     		ldrh	r3, [r3]
 446              		.loc 1 797 33
 447 00ae 1A46     		mov	r2, r3
 448              		.loc 1 797 15
 449 00b0 FB68     		ldr	r3, [r7, #12]
 450 00b2 1B68     		ldr	r3, [r3]
 451              		.loc 1 797 33
 452 00b4 C2F30802 		ubfx	r2, r2, #0, #9
 453              		.loc 1 797 31
 454 00b8 9A62     		str	r2, [r3, #40]
 798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         ptxdata16bits++;
 455              		.loc 1 798 22
 456 00ba BB69     		ldr	r3, [r7, #24]
 457 00bc 0233     		adds	r3, r3, #2
 458 00be BB61     		str	r3, [r7, #24]
 459 00c0 07E0     		b	.L22
 460              	.L21:
 799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
 801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint8_t)(*ptxdata8bits & 0xFFU);
 461              		.loc 1 802 43
ARM GAS  /tmp/ccUeuQwq.s 			page 23


 462 00c2 FB69     		ldr	r3, [r7, #28]
 463 00c4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 464              		.loc 1 802 15
 465 00c6 FB68     		ldr	r3, [r7, #12]
 466 00c8 1B68     		ldr	r3, [r3]
 467              		.loc 1 802 31
 468 00ca 9A62     		str	r2, [r3, #40]
 803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         ptxdata8bits++;
 469              		.loc 1 803 21
 470 00cc FB69     		ldr	r3, [r7, #28]
 471 00ce 0133     		adds	r3, r3, #1
 472 00d0 FB61     		str	r3, [r7, #28]
 473              	.L22:
 804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
 474              		.loc 1 806 13
 475 00d2 FB68     		ldr	r3, [r7, #12]
 476 00d4 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 477 00d6 9BB2     		uxth	r3, r3
 478              		.loc 1 806 26
 479 00d8 013B     		subs	r3, r3, #1
 480 00da 9AB2     		uxth	r2, r3
 481 00dc FB68     		ldr	r3, [r7, #12]
 482 00de DA85     		strh	r2, [r3, #46]	@ movhi
 483              	.L19:
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 484              		.loc 1 789 18
 485 00e0 FB68     		ldr	r3, [r7, #12]
 486 00e2 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 487 00e4 9BB2     		uxth	r3, r3
 789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 488              		.loc 1 789 11
 489 00e6 002B     		cmp	r3, #0
 490 00e8 CFD1     		bne	.L23
 807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 491              		.loc 1 809 9
 492 00ea 3B68     		ldr	r3, [r7]
 493 00ec 0093     		str	r3, [sp]
 494 00ee 7B69     		ldr	r3, [r7, #20]
 495 00f0 0022     		movs	r2, #0
 496 00f2 4021     		movs	r1, #64
 497 00f4 F868     		ldr	r0, [r7, #12]
 498 00f6 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 499 00fa 0346     		mov	r3, r0
 500              		.loc 1 809 8
 501 00fc 002B     		cmp	r3, #0
 502 00fe 01D0     		beq	.L24
 810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_TIMEOUT;
 503              		.loc 1 811 14
 504 0100 0323     		movs	r3, #3
 505 0102 22E0     		b	.L15
 506              	.L24:
 812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 24


 813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear Transmission Complete Flag */
 815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_TCF);
 507              		.loc 1 815 5
 508 0104 FB68     		ldr	r3, [r7, #12]
 509 0106 1B68     		ldr	r3, [r3]
 510 0108 4022     		movs	r2, #64
 511 010a 1A62     		str	r2, [r3, #32]
 816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear overrun flag and discard the received data */
 818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
 512              		.loc 1 818 5
 513 010c FB68     		ldr	r3, [r7, #12]
 514 010e 1B68     		ldr	r3, [r3]
 515 0110 0822     		movs	r2, #8
 516 0112 1A62     		str	r2, [r3, #32]
 819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 517              		.loc 1 819 5
 518 0114 FB68     		ldr	r3, [r7, #12]
 519 0116 1B68     		ldr	r3, [r3]
 520 0118 9A69     		ldr	r2, [r3, #24]
 521 011a FB68     		ldr	r3, [r7, #12]
 522 011c 1B68     		ldr	r3, [r3]
 523 011e 42F00802 		orr	r2, r2, #8
 524 0122 9A61     		str	r2, [r3, #24]
 820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 525              		.loc 1 820 5
 526 0124 FB68     		ldr	r3, [r7, #12]
 527 0126 1B68     		ldr	r3, [r3]
 528 0128 9A69     		ldr	r2, [r3, #24]
 529 012a FB68     		ldr	r3, [r7, #12]
 530 012c 1B68     		ldr	r3, [r3]
 531 012e 42F01002 		orr	r2, r2, #16
 532 0132 9A61     		str	r2, [r3, #24]
 821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* At end of Tx process, restore husart->State to Ready */
 823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 533              		.loc 1 823 19
 534 0134 FB68     		ldr	r3, [r7, #12]
 535 0136 0122     		movs	r2, #1
 536 0138 83F85920 		strb	r2, [r3, #89]
 824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Unlocked */
 826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 537              		.loc 1 826 5
 538 013c FB68     		ldr	r3, [r7, #12]
 539 013e 0022     		movs	r2, #0
 540 0140 83F85820 		strb	r2, [r3, #88]
 827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 541              		.loc 1 828 12
 542 0144 0023     		movs	r3, #0
 543 0146 00E0     		b	.L15
 544              	.L12:
 829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
 831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
ARM GAS  /tmp/ccUeuQwq.s 			page 25


 832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 545              		.loc 1 832 12
 546 0148 0223     		movs	r3, #2
 547              	.L15:
 833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 548              		.loc 1 834 1
 549 014a 1846     		mov	r0, r3
 550 014c 2037     		adds	r7, r7, #32
 551              	.LCFI25:
 552              		.cfi_def_cfa_offset 8
 553 014e BD46     		mov	sp, r7
 554              	.LCFI26:
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 0150 80BD     		pop	{r7, pc}
 558              		.cfi_endproc
 559              	.LFE335:
 561              		.section	.text.HAL_USART_Receive,"ax",%progbits
 562              		.align	1
 563              		.global	HAL_USART_Receive
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu fpv5-d16
 569              	HAL_USART_Receive:
 570              	.LFB336:
 835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Receive an amount of data in blocking mode.
 838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   To receive synchronous data, dummy data are simultaneously transmitted.
 839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
 840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
 841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pRxData.
 842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
 843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param pRxData Pointer to data buffer (u8 or u16 data elements).
 844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param Size Amount of data elements (u8 or u16) to be received.
 845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param Timeout Timeout duration.
 846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size, u
 849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 571              		.loc 1 849 1
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 32
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              	.LCFI27:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 8AB0     		sub	sp, sp, #40
 581              	.LCFI28:
 582              		.cfi_def_cfa_offset 48
 583 0004 02AF     		add	r7, sp, #8
 584              	.LCFI29:
 585              		.cfi_def_cfa 7, 40
ARM GAS  /tmp/ccUeuQwq.s 			page 26


 586 0006 F860     		str	r0, [r7, #12]
 587 0008 B960     		str	r1, [r7, #8]
 588 000a 3B60     		str	r3, [r7]
 589 000c 1346     		mov	r3, r2	@ movhi
 590 000e FB80     		strh	r3, [r7, #6]	@ movhi
 850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint8_t  *prxdata8bits;
 851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *prxdata16bits;
 852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask;
 853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t tickstart;
 854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 591              		.loc 1 855 13
 592 0010 FB68     		ldr	r3, [r7, #12]
 593 0012 93F85930 		ldrb	r3, [r3, #89]
 594 0016 DBB2     		uxtb	r3, r3
 595              		.loc 1 855 6
 596 0018 012B     		cmp	r3, #1
 597 001a 40F0D580 		bne	.L26
 856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0U))
 598              		.loc 1 857 8
 599 001e BB68     		ldr	r3, [r7, #8]
 600 0020 002B     		cmp	r3, #0
 601 0022 02D0     		beq	.L27
 602              		.loc 1 857 27 discriminator 1
 603 0024 FB88     		ldrh	r3, [r7, #6]
 604 0026 002B     		cmp	r3, #0
 605 0028 01D1     		bne	.L28
 606              	.L27:
 858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return  HAL_ERROR;
 607              		.loc 1 859 15
 608 002a 0123     		movs	r3, #1
 609 002c CDE0     		b	.L29
 610              	.L28:
 860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
 863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 611              		.loc 1 863 5
 612 002e FB68     		ldr	r3, [r7, #12]
 613 0030 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 614 0034 012B     		cmp	r3, #1
 615 0036 01D1     		bne	.L30
 616              		.loc 1 863 5 is_stmt 0 discriminator 1
 617 0038 0223     		movs	r3, #2
 618 003a C6E0     		b	.L29
 619              	.L30:
 620              		.loc 1 863 5 discriminator 2
 621 003c FB68     		ldr	r3, [r7, #12]
 622 003e 0122     		movs	r2, #1
 623 0040 83F85820 		strb	r2, [r3, #88]
 864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 624              		.loc 1 865 23 is_stmt 1 discriminator 2
 625 0044 FB68     		ldr	r3, [r7, #12]
 626 0046 0022     		movs	r2, #0
ARM GAS  /tmp/ccUeuQwq.s 			page 27


 627 0048 DA65     		str	r2, [r3, #92]
 866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 628              		.loc 1 866 19 discriminator 2
 629 004a FB68     		ldr	r3, [r7, #12]
 630 004c 2222     		movs	r2, #34
 631 004e 83F85920 		strb	r2, [r3, #89]
 867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Init tickstart for timeout management */
 869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     tickstart = HAL_GetTick();
 632              		.loc 1 869 17 discriminator 2
 633 0052 FFF7FEFF 		bl	HAL_GetTick
 634 0056 7861     		str	r0, [r7, #20]
 870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize = Size;
 635              		.loc 1 871 24 discriminator 2
 636 0058 FB68     		ldr	r3, [r7, #12]
 637 005a FA88     		ldrh	r2, [r7, #6]	@ movhi
 638 005c 9A86     		strh	r2, [r3, #52]	@ movhi
 872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = Size;
 639              		.loc 1 872 25 discriminator 2
 640 005e FB68     		ldr	r3, [r7, #12]
 641 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 642 0062 DA86     		strh	r2, [r3, #54]	@ movhi
 873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
 875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 643              		.loc 1 875 5 discriminator 2
 644 0064 FB68     		ldr	r3, [r7, #12]
 645 0066 9B68     		ldr	r3, [r3, #8]
 646 0068 B3F5805F 		cmp	r3, #4096
 647 006c 0CD1     		bne	.L31
 648              		.loc 1 875 5 is_stmt 0 discriminator 1
 649 006e FB68     		ldr	r3, [r7, #12]
 650 0070 1B69     		ldr	r3, [r3, #16]
 651 0072 002B     		cmp	r3, #0
 652 0074 04D1     		bne	.L32
 653              		.loc 1 875 5 discriminator 3
 654 0076 FB68     		ldr	r3, [r7, #12]
 655 0078 40F2FF12 		movw	r2, #511
 656 007c 1A87     		strh	r2, [r3, #56]	@ movhi
 657 007e 27E0     		b	.L33
 658              	.L32:
 659              		.loc 1 875 5 discriminator 4
 660 0080 FB68     		ldr	r3, [r7, #12]
 661 0082 FF22     		movs	r2, #255
 662 0084 1A87     		strh	r2, [r3, #56]	@ movhi
 663 0086 23E0     		b	.L33
 664              	.L31:
 665              		.loc 1 875 5 discriminator 2
 666 0088 FB68     		ldr	r3, [r7, #12]
 667 008a 9B68     		ldr	r3, [r3, #8]
 668 008c 002B     		cmp	r3, #0
 669 008e 0BD1     		bne	.L34
 670              		.loc 1 875 5 discriminator 5
 671 0090 FB68     		ldr	r3, [r7, #12]
 672 0092 1B69     		ldr	r3, [r3, #16]
 673 0094 002B     		cmp	r3, #0
ARM GAS  /tmp/ccUeuQwq.s 			page 28


 674 0096 03D1     		bne	.L35
 675              		.loc 1 875 5 discriminator 7
 676 0098 FB68     		ldr	r3, [r7, #12]
 677 009a FF22     		movs	r2, #255
 678 009c 1A87     		strh	r2, [r3, #56]	@ movhi
 679 009e 17E0     		b	.L33
 680              	.L35:
 681              		.loc 1 875 5 discriminator 8
 682 00a0 FB68     		ldr	r3, [r7, #12]
 683 00a2 7F22     		movs	r2, #127
 684 00a4 1A87     		strh	r2, [r3, #56]	@ movhi
 685 00a6 13E0     		b	.L33
 686              	.L34:
 687              		.loc 1 875 5 discriminator 6
 688 00a8 FB68     		ldr	r3, [r7, #12]
 689 00aa 9B68     		ldr	r3, [r3, #8]
 690 00ac B3F1805F 		cmp	r3, #268435456
 691 00b0 0BD1     		bne	.L36
 692              		.loc 1 875 5 discriminator 9
 693 00b2 FB68     		ldr	r3, [r7, #12]
 694 00b4 1B69     		ldr	r3, [r3, #16]
 695 00b6 002B     		cmp	r3, #0
 696 00b8 03D1     		bne	.L37
 697              		.loc 1 875 5 discriminator 11
 698 00ba FB68     		ldr	r3, [r7, #12]
 699 00bc 7F22     		movs	r2, #127
 700 00be 1A87     		strh	r2, [r3, #56]	@ movhi
 701 00c0 06E0     		b	.L33
 702              	.L37:
 703              		.loc 1 875 5 discriminator 12
 704 00c2 FB68     		ldr	r3, [r7, #12]
 705 00c4 3F22     		movs	r2, #63
 706 00c6 1A87     		strh	r2, [r3, #56]	@ movhi
 707 00c8 02E0     		b	.L33
 708              	.L36:
 709              		.loc 1 875 5 discriminator 10
 710 00ca FB68     		ldr	r3, [r7, #12]
 711 00cc 0022     		movs	r2, #0
 712 00ce 1A87     		strh	r2, [r3, #56]	@ movhi
 713              	.L33:
 876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     uhMask = husart->Mask;
 714              		.loc 1 876 12 is_stmt 1
 715 00d0 FB68     		ldr	r3, [r7, #12]
 716 00d2 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 717 00d4 7B82     		strh	r3, [r7, #18]	@ movhi
 877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 718              		.loc 1 879 22
 719 00d6 FB68     		ldr	r3, [r7, #12]
 720 00d8 9B68     		ldr	r3, [r3, #8]
 721              		.loc 1 879 8
 722 00da B3F5805F 		cmp	r3, #4096
 723 00de 08D1     		bne	.L38
 724              		.loc 1 879 74 discriminator 1
 725 00e0 FB68     		ldr	r3, [r7, #12]
 726 00e2 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccUeuQwq.s 			page 29


 727              		.loc 1 879 58 discriminator 1
 728 00e4 002B     		cmp	r3, #0
 729 00e6 04D1     		bne	.L38
 880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata8bits  = NULL;
 730              		.loc 1 881 21
 731 00e8 0023     		movs	r3, #0
 732 00ea FB61     		str	r3, [r7, #28]
 882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata16bits = (uint16_t *) pRxData;
 733              		.loc 1 882 21
 734 00ec BB68     		ldr	r3, [r7, #8]
 735 00ee BB61     		str	r3, [r7, #24]
 736 00f0 03E0     		b	.L39
 737              	.L38:
 883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
 885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata8bits  = pRxData;
 738              		.loc 1 886 21
 739 00f2 BB68     		ldr	r3, [r7, #8]
 740 00f4 FB61     		str	r3, [r7, #28]
 887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata16bits = NULL;
 741              		.loc 1 887 21
 742 00f6 0023     		movs	r3, #0
 743 00f8 BB61     		str	r3, [r7, #24]
 744              	.L39:
 888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* as long as data have to be received */
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     while (husart->RxXferCount > 0U)
 745              		.loc 1 891 11
 746 00fa 45E0     		b	.L40
 747              	.L46:
 892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->SlaveMode == USART_SLAVEMODE_DISABLE)
 748              		.loc 1 893 17
 749 00fc FB68     		ldr	r3, [r7, #12]
 750 00fe 1B6C     		ldr	r3, [r3, #64]
 751              		.loc 1 893 10
 752 0100 002B     		cmp	r3, #0
 753 0102 10D1     		bne	.L41
 894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Wait until TXE flag is set to send dummy byte in order to generate the
 896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         * clock for the slave to send data.
 897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         * Whatever the frame length (7, 8 or 9-bit long), the same dummy value
 898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         * can be written for all the cases. */
 899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 754              		.loc 1 899 13
 755 0104 3B68     		ldr	r3, [r7]
 756 0106 0093     		str	r3, [sp]
 757 0108 7B69     		ldr	r3, [r7, #20]
 758 010a 0022     		movs	r2, #0
 759 010c 8021     		movs	r1, #128
 760 010e F868     		ldr	r0, [r7, #12]
 761 0110 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 762 0114 0346     		mov	r3, r0
 763              		.loc 1 899 12
ARM GAS  /tmp/ccUeuQwq.s 			page 30


 764 0116 002B     		cmp	r3, #0
 765 0118 01D0     		beq	.L42
 900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           return HAL_TIMEOUT;
 766              		.loc 1 901 18
 767 011a 0323     		movs	r3, #3
 768 011c 55E0     		b	.L29
 769              	.L42:
 902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
 903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x0FF);
 770              		.loc 1 903 15
 771 011e FB68     		ldr	r3, [r7, #12]
 772 0120 1B68     		ldr	r3, [r3]
 773              		.loc 1 903 31
 774 0122 FF22     		movs	r2, #255
 775 0124 9A62     		str	r2, [r3, #40]
 776              	.L41:
 904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Wait for RXNE Flag */
 907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_O
 777              		.loc 1 907 11
 778 0126 3B68     		ldr	r3, [r7]
 779 0128 0093     		str	r3, [sp]
 780 012a 7B69     		ldr	r3, [r7, #20]
 781 012c 0022     		movs	r2, #0
 782 012e 2021     		movs	r1, #32
 783 0130 F868     		ldr	r0, [r7, #12]
 784 0132 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 785 0136 0346     		mov	r3, r0
 786              		.loc 1 907 10
 787 0138 002B     		cmp	r3, #0
 788 013a 01D0     		beq	.L43
 908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 789              		.loc 1 909 16
 790 013c 0323     		movs	r3, #3
 791 013e 44E0     		b	.L29
 792              	.L43:
 910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (prxdata8bits == NULL)
 793              		.loc 1 912 10
 794 0140 FB69     		ldr	r3, [r7, #28]
 795 0142 002B     		cmp	r3, #0
 796 0144 0CD1     		bne	.L44
 913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         *prxdata16bits = (uint16_t)(husart->Instance->RDR & uhMask);
 797              		.loc 1 914 43
 798 0146 FB68     		ldr	r3, [r7, #12]
 799 0148 1B68     		ldr	r3, [r3]
 800              		.loc 1 914 53
 801 014a 5B6A     		ldr	r3, [r3, #36]
 802              		.loc 1 914 26
 803 014c 9AB2     		uxth	r2, r3
 804 014e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 805 0150 1340     		ands	r3, r3, r2
ARM GAS  /tmp/ccUeuQwq.s 			page 31


 806 0152 9AB2     		uxth	r2, r3
 807              		.loc 1 914 24
 808 0154 BB69     		ldr	r3, [r7, #24]
 809 0156 1A80     		strh	r2, [r3]	@ movhi
 915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         prxdata16bits++;
 810              		.loc 1 915 22
 811 0158 BB69     		ldr	r3, [r7, #24]
 812 015a 0233     		adds	r3, r3, #2
 813 015c BB61     		str	r3, [r7, #24]
 814 015e 0CE0     		b	.L45
 815              	.L44:
 916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
 918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         *prxdata8bits = (uint8_t)(husart->Instance->RDR & (uint8_t)(uhMask & 0xFFU));
 816              		.loc 1 919 41
 817 0160 FB68     		ldr	r3, [r7, #12]
 818 0162 1B68     		ldr	r3, [r3]
 819              		.loc 1 919 51
 820 0164 5B6A     		ldr	r3, [r3, #36]
 821              		.loc 1 919 25
 822 0166 DAB2     		uxtb	r2, r3
 823              		.loc 1 919 59
 824 0168 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 825 016a DBB2     		uxtb	r3, r3
 826              		.loc 1 919 25
 827 016c 1340     		ands	r3, r3, r2
 828 016e DAB2     		uxtb	r2, r3
 829              		.loc 1 919 23
 830 0170 FB69     		ldr	r3, [r7, #28]
 831 0172 1A70     		strb	r2, [r3]
 920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         prxdata8bits++;
 832              		.loc 1 920 21
 833 0174 FB69     		ldr	r3, [r7, #28]
 834 0176 0133     		adds	r3, r3, #1
 835 0178 FB61     		str	r3, [r7, #28]
 836              	.L45:
 921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxXferCount--;
 837              		.loc 1 923 13
 838 017a FB68     		ldr	r3, [r7, #12]
 839 017c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 840 017e 9BB2     		uxth	r3, r3
 841              		.loc 1 923 26
 842 0180 013B     		subs	r3, r3, #1
 843 0182 9AB2     		uxth	r2, r3
 844 0184 FB68     		ldr	r3, [r7, #12]
 845 0186 DA86     		strh	r2, [r3, #54]	@ movhi
 846              	.L40:
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 847              		.loc 1 891 18
 848 0188 FB68     		ldr	r3, [r7, #12]
 849 018a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 850 018c 9BB2     		uxth	r3, r3
 891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 851              		.loc 1 891 11
ARM GAS  /tmp/ccUeuQwq.s 			page 32


 852 018e 002B     		cmp	r3, #0
 853 0190 B4D1     		bne	.L46
 924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear SPI slave underrun flag and discard transmit data */
 928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->SlaveMode == USART_SLAVEMODE_ENABLE)
 854              		.loc 1 928 15
 855 0192 FB68     		ldr	r3, [r7, #12]
 856 0194 1B6C     		ldr	r3, [r3, #64]
 857              		.loc 1 928 8
 858 0196 012B     		cmp	r3, #1
 859 0198 0CD1     		bne	.L47
 929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_UDRFLAG(husart);
 860              		.loc 1 930 7
 861 019a FB68     		ldr	r3, [r7, #12]
 862 019c 1B68     		ldr	r3, [r3]
 863 019e 4FF40052 		mov	r2, #8192
 864 01a2 1A62     		str	r2, [r3, #32]
 931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 865              		.loc 1 931 7
 866 01a4 FB68     		ldr	r3, [r7, #12]
 867 01a6 1B68     		ldr	r3, [r3]
 868 01a8 9A69     		ldr	r2, [r3, #24]
 869 01aa FB68     		ldr	r3, [r7, #12]
 870 01ac 1B68     		ldr	r3, [r3]
 871 01ae 42F01002 		orr	r2, r2, #16
 872 01b2 9A61     		str	r2, [r3, #24]
 873              	.L47:
 932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* At end of Rx process, restore husart->State to Ready */
 935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 874              		.loc 1 935 19
 875 01b4 FB68     		ldr	r3, [r7, #12]
 876 01b6 0122     		movs	r2, #1
 877 01b8 83F85920 		strb	r2, [r3, #89]
 936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Unlocked */
 938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 878              		.loc 1 938 5
 879 01bc FB68     		ldr	r3, [r7, #12]
 880 01be 0022     		movs	r2, #0
 881 01c0 83F85820 		strb	r2, [r3, #88]
 939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 882              		.loc 1 940 12
 883 01c4 0023     		movs	r3, #0
 884 01c6 00E0     		b	.L29
 885              	.L26:
 941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
 943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 886              		.loc 1 944 12
 887 01c8 0223     		movs	r3, #2
ARM GAS  /tmp/ccUeuQwq.s 			page 33


 888              	.L29:
 945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 889              		.loc 1 946 1
 890 01ca 1846     		mov	r0, r3
 891 01cc 2037     		adds	r7, r7, #32
 892              	.LCFI30:
 893              		.cfi_def_cfa_offset 8
 894 01ce BD46     		mov	sp, r7
 895              	.LCFI31:
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 01d0 80BD     		pop	{r7, pc}
 899              		.cfi_endproc
 900              	.LFE336:
 902              		.section	.text.HAL_USART_TransmitReceive,"ax",%progbits
 903              		.align	1
 904              		.global	HAL_USART_TransmitReceive
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv5-d16
 910              	HAL_USART_TransmitReceive:
 911              	.LFB337:
 947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
 949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Full-Duplex Send and Receive an amount of data in blocking mode.
 950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
 951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
 952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
 953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
 954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData pointer to TX data buffer (u8 or u16 data elements).
 955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pRxData pointer to RX data buffer (u8 or u16 data elements).
 956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be sent (same amount to be received).
 957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Timeout Timeout duration.
 958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
 959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
 960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8_t 
 961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                             uint16_t Size, uint32_t Timeout)
 962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 912              		.loc 1 962 1
 913              		.cfi_startproc
 914              		@ args = 4, pretend = 0, frame = 48
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              	.LCFI32:
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 8EB0     		sub	sp, sp, #56
 922              	.LCFI33:
 923              		.cfi_def_cfa_offset 64
 924 0004 02AF     		add	r7, sp, #8
 925              	.LCFI34:
 926              		.cfi_def_cfa 7, 56
 927 0006 F860     		str	r0, [r7, #12]
 928 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccUeuQwq.s 			page 34


 929 000a 7A60     		str	r2, [r7, #4]
 930 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint8_t  *prxdata8bits;
 964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *prxdata16bits;
 965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint8_t  *ptxdata8bits;
 966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *ptxdata16bits;
 967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask;
 968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t rxdatacount;
 969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t tickstart;
 970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 931              		.loc 1 971 13
 932 000e FB68     		ldr	r3, [r7, #12]
 933 0010 93F85930 		ldrb	r3, [r3, #89]
 934 0014 DBB2     		uxtb	r3, r3
 935              		.loc 1 971 6
 936 0016 012B     		cmp	r3, #1
 937 0018 40F03A81 		bne	.L49
 972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 938              		.loc 1 973 8
 939 001c BB68     		ldr	r3, [r7, #8]
 940 001e 002B     		cmp	r3, #0
 941 0020 05D0     		beq	.L50
 942              		.loc 1 973 27 discriminator 1
 943 0022 7B68     		ldr	r3, [r7, #4]
 944 0024 002B     		cmp	r3, #0
 945 0026 02D0     		beq	.L50
 946              		.loc 1 973 48 discriminator 2
 947 0028 7B88     		ldrh	r3, [r7, #2]
 948 002a 002B     		cmp	r3, #0
 949 002c 01D1     		bne	.L51
 950              	.L50:
 974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return  HAL_ERROR;
 951              		.loc 1 975 15
 952 002e 0123     		movs	r3, #1
 953 0030 2FE1     		b	.L52
 954              	.L51:
 976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
 979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 955              		.loc 1 979 5
 956 0032 FB68     		ldr	r3, [r7, #12]
 957 0034 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 958 0038 012B     		cmp	r3, #1
 959 003a 01D1     		bne	.L53
 960              		.loc 1 979 5 is_stmt 0 discriminator 1
 961 003c 0223     		movs	r3, #2
 962 003e 28E1     		b	.L52
 963              	.L53:
 964              		.loc 1 979 5 discriminator 2
 965 0040 FB68     		ldr	r3, [r7, #12]
 966 0042 0122     		movs	r2, #1
 967 0044 83F85820 		strb	r2, [r3, #88]
 980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 35


 981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 968              		.loc 1 981 23 is_stmt 1 discriminator 2
 969 0048 FB68     		ldr	r3, [r7, #12]
 970 004a 0022     		movs	r2, #0
 971 004c DA65     		str	r2, [r3, #92]
 982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 972              		.loc 1 982 19 discriminator 2
 973 004e FB68     		ldr	r3, [r7, #12]
 974 0050 2222     		movs	r2, #34
 975 0052 83F85920 		strb	r2, [r3, #89]
 983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Init tickstart for timeout management */
 985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     tickstart = HAL_GetTick();
 976              		.loc 1 985 17 discriminator 2
 977 0056 FFF7FEFF 		bl	HAL_GetTick
 978 005a B861     		str	r0, [r7, #24]
 986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize = Size;
 979              		.loc 1 987 24 discriminator 2
 980 005c FB68     		ldr	r3, [r7, #12]
 981 005e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 982 0060 9A86     		strh	r2, [r3, #52]	@ movhi
 988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 983              		.loc 1 988 24 discriminator 2
 984 0062 FB68     		ldr	r3, [r7, #12]
 985 0064 7A88     		ldrh	r2, [r7, #2]	@ movhi
 986 0066 9A85     		strh	r2, [r3, #44]	@ movhi
 989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = Size;
 987              		.loc 1 989 25 discriminator 2
 988 0068 FB68     		ldr	r3, [r7, #12]
 989 006a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 990 006c DA85     		strh	r2, [r3, #46]	@ movhi
 990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = Size;
 991              		.loc 1 990 25 discriminator 2
 992 006e FB68     		ldr	r3, [r7, #12]
 993 0070 7A88     		ldrh	r2, [r7, #2]	@ movhi
 994 0072 DA86     		strh	r2, [r3, #54]	@ movhi
 991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
 993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 995              		.loc 1 993 5 discriminator 2
 996 0074 FB68     		ldr	r3, [r7, #12]
 997 0076 9B68     		ldr	r3, [r3, #8]
 998 0078 B3F5805F 		cmp	r3, #4096
 999 007c 0CD1     		bne	.L54
 1000              		.loc 1 993 5 is_stmt 0 discriminator 1
 1001 007e FB68     		ldr	r3, [r7, #12]
 1002 0080 1B69     		ldr	r3, [r3, #16]
 1003 0082 002B     		cmp	r3, #0
 1004 0084 04D1     		bne	.L55
 1005              		.loc 1 993 5 discriminator 3
 1006 0086 FB68     		ldr	r3, [r7, #12]
 1007 0088 40F2FF12 		movw	r2, #511
 1008 008c 1A87     		strh	r2, [r3, #56]	@ movhi
 1009 008e 27E0     		b	.L56
 1010              	.L55:
 1011              		.loc 1 993 5 discriminator 4
ARM GAS  /tmp/ccUeuQwq.s 			page 36


 1012 0090 FB68     		ldr	r3, [r7, #12]
 1013 0092 FF22     		movs	r2, #255
 1014 0094 1A87     		strh	r2, [r3, #56]	@ movhi
 1015 0096 23E0     		b	.L56
 1016              	.L54:
 1017              		.loc 1 993 5 discriminator 2
 1018 0098 FB68     		ldr	r3, [r7, #12]
 1019 009a 9B68     		ldr	r3, [r3, #8]
 1020 009c 002B     		cmp	r3, #0
 1021 009e 0BD1     		bne	.L57
 1022              		.loc 1 993 5 discriminator 5
 1023 00a0 FB68     		ldr	r3, [r7, #12]
 1024 00a2 1B69     		ldr	r3, [r3, #16]
 1025 00a4 002B     		cmp	r3, #0
 1026 00a6 03D1     		bne	.L58
 1027              		.loc 1 993 5 discriminator 7
 1028 00a8 FB68     		ldr	r3, [r7, #12]
 1029 00aa FF22     		movs	r2, #255
 1030 00ac 1A87     		strh	r2, [r3, #56]	@ movhi
 1031 00ae 17E0     		b	.L56
 1032              	.L58:
 1033              		.loc 1 993 5 discriminator 8
 1034 00b0 FB68     		ldr	r3, [r7, #12]
 1035 00b2 7F22     		movs	r2, #127
 1036 00b4 1A87     		strh	r2, [r3, #56]	@ movhi
 1037 00b6 13E0     		b	.L56
 1038              	.L57:
 1039              		.loc 1 993 5 discriminator 6
 1040 00b8 FB68     		ldr	r3, [r7, #12]
 1041 00ba 9B68     		ldr	r3, [r3, #8]
 1042 00bc B3F1805F 		cmp	r3, #268435456
 1043 00c0 0BD1     		bne	.L59
 1044              		.loc 1 993 5 discriminator 9
 1045 00c2 FB68     		ldr	r3, [r7, #12]
 1046 00c4 1B69     		ldr	r3, [r3, #16]
 1047 00c6 002B     		cmp	r3, #0
 1048 00c8 03D1     		bne	.L60
 1049              		.loc 1 993 5 discriminator 11
 1050 00ca FB68     		ldr	r3, [r7, #12]
 1051 00cc 7F22     		movs	r2, #127
 1052 00ce 1A87     		strh	r2, [r3, #56]	@ movhi
 1053 00d0 06E0     		b	.L56
 1054              	.L60:
 1055              		.loc 1 993 5 discriminator 12
 1056 00d2 FB68     		ldr	r3, [r7, #12]
 1057 00d4 3F22     		movs	r2, #63
 1058 00d6 1A87     		strh	r2, [r3, #56]	@ movhi
 1059 00d8 02E0     		b	.L56
 1060              	.L59:
 1061              		.loc 1 993 5 discriminator 10
 1062 00da FB68     		ldr	r3, [r7, #12]
 1063 00dc 0022     		movs	r2, #0
 1064 00de 1A87     		strh	r2, [r3, #56]	@ movhi
 1065              	.L56:
 994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     uhMask = husart->Mask;
 1066              		.loc 1 994 12 is_stmt 1
 1067 00e0 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 37


 1068 00e2 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 1069 00e4 FB82     		strh	r3, [r7, #22]	@ movhi
 995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
 997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_NO
 1070              		.loc 1 997 22
 1071 00e6 FB68     		ldr	r3, [r7, #12]
 1072 00e8 9B68     		ldr	r3, [r3, #8]
 1073              		.loc 1 997 8
 1074 00ea B3F5805F 		cmp	r3, #4096
 1075 00ee 0CD1     		bne	.L61
 1076              		.loc 1 997 74 discriminator 1
 1077 00f0 FB68     		ldr	r3, [r7, #12]
 1078 00f2 1B69     		ldr	r3, [r3, #16]
 1079              		.loc 1 997 58 discriminator 1
 1080 00f4 002B     		cmp	r3, #0
 1081 00f6 08D1     		bne	.L61
 998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata8bits  = NULL;
 1082              		.loc 1 999 21
 1083 00f8 0023     		movs	r3, #0
 1084 00fa FB62     		str	r3, [r7, #44]
1000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata8bits  = NULL;
 1085              		.loc 1 1000 21
 1086 00fc 0023     		movs	r3, #0
 1087 00fe 7B62     		str	r3, [r7, #36]
1001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata16bits = (uint16_t *) pTxData;
 1088              		.loc 1 1001 21
 1089 0100 BB68     		ldr	r3, [r7, #8]
 1090 0102 3B62     		str	r3, [r7, #32]
1002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata16bits = (uint16_t *) pRxData;
 1091              		.loc 1 1002 21
 1092 0104 7B68     		ldr	r3, [r7, #4]
 1093 0106 BB62     		str	r3, [r7, #40]
 1094 0108 07E0     		b	.L62
 1095              	.L61:
1003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata8bits  = pRxData;
 1096              		.loc 1 1006 21
 1097 010a 7B68     		ldr	r3, [r7, #4]
 1098 010c FB62     		str	r3, [r7, #44]
1007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata8bits  = pTxData;
 1099              		.loc 1 1007 21
 1100 010e BB68     		ldr	r3, [r7, #8]
 1101 0110 7B62     		str	r3, [r7, #36]
1008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ptxdata16bits = NULL;
 1102              		.loc 1 1008 21
 1103 0112 0023     		movs	r3, #0
 1104 0114 3B62     		str	r3, [r7, #32]
1009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       prxdata16bits = NULL;
 1105              		.loc 1 1009 21
 1106 0116 0023     		movs	r3, #0
 1107 0118 BB62     		str	r3, [r7, #40]
 1108              	.L62:
1010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 38


1011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->TxXferCount == 0x01U) || (husart->SlaveMode == USART_SLAVEMODE_ENABLE))
 1109              		.loc 1 1012 16
 1110 011a FB68     		ldr	r3, [r7, #12]
 1111 011c DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1112 011e 9BB2     		uxth	r3, r3
 1113              		.loc 1 1012 8
 1114 0120 012B     		cmp	r3, #1
 1115 0122 03D0     		beq	.L63
 1116              		.loc 1 1012 50 discriminator 1
 1117 0124 FB68     		ldr	r3, [r7, #12]
 1118 0126 1B6C     		ldr	r3, [r3, #64]
 1119              		.loc 1 1012 40 discriminator 1
 1120 0128 012B     		cmp	r3, #1
 1121 012a 2ED1     		bne	.L64
 1122              	.L63:
1013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Wait until TXE flag is set to send data */
1015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK
 1123              		.loc 1 1015 11
 1124 012c BB6B     		ldr	r3, [r7, #56]
 1125 012e 0093     		str	r3, [sp]
 1126 0130 BB69     		ldr	r3, [r7, #24]
 1127 0132 0022     		movs	r2, #0
 1128 0134 8021     		movs	r1, #128
 1129 0136 F868     		ldr	r0, [r7, #12]
 1130 0138 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1131 013c 0346     		mov	r3, r0
 1132              		.loc 1 1015 10
 1133 013e 002B     		cmp	r3, #0
 1134 0140 01D0     		beq	.L65
1016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 1135              		.loc 1 1017 16
 1136 0142 0323     		movs	r3, #3
 1137 0144 A5E0     		b	.L52
 1138              	.L65:
1018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (ptxdata8bits == NULL)
 1139              		.loc 1 1019 10
 1140 0146 7B6A     		ldr	r3, [r7, #36]
 1141 0148 002B     		cmp	r3, #0
 1142 014a 0BD1     		bne	.L66
1020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint16_t)(*ptxdata16bits & uhMask);
 1143              		.loc 1 1021 44
 1144 014c 3B6A     		ldr	r3, [r7, #32]
 1145 014e 1A88     		ldrh	r2, [r3]
 1146              		.loc 1 1021 33
 1147 0150 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1148 0152 1340     		ands	r3, r3, r2
 1149 0154 9AB2     		uxth	r2, r3
 1150              		.loc 1 1021 15
 1151 0156 FB68     		ldr	r3, [r7, #12]
 1152 0158 1B68     		ldr	r3, [r3]
 1153              		.loc 1 1021 31
 1154 015a 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccUeuQwq.s 			page 39


1022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         ptxdata16bits++;
 1155              		.loc 1 1022 22
 1156 015c 3B6A     		ldr	r3, [r7, #32]
 1157 015e 0233     		adds	r3, r3, #2
 1158 0160 3B62     		str	r3, [r7, #32]
 1159 0162 0BE0     		b	.L67
 1160              	.L66:
1023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint8_t)(*ptxdata8bits & (uint8_t)(uhMask & 0xFFU));
 1161              		.loc 1 1026 43
 1162 0164 7B6A     		ldr	r3, [r7, #36]
 1163 0166 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1164              		.loc 1 1026 59
 1165 0168 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1166 016a DBB2     		uxtb	r3, r3
 1167              		.loc 1 1026 33
 1168 016c 1340     		ands	r3, r3, r2
 1169 016e DAB2     		uxtb	r2, r3
 1170              		.loc 1 1026 15
 1171 0170 FB68     		ldr	r3, [r7, #12]
 1172 0172 1B68     		ldr	r3, [r3]
 1173              		.loc 1 1026 31
 1174 0174 9A62     		str	r2, [r3, #40]
1027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         ptxdata8bits++;
 1175              		.loc 1 1027 21
 1176 0176 7B6A     		ldr	r3, [r7, #36]
 1177 0178 0133     		adds	r3, r3, #1
 1178 017a 7B62     		str	r3, [r7, #36]
 1179              	.L67:
1028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
 1180              		.loc 1 1030 13
 1181 017c FB68     		ldr	r3, [r7, #12]
 1182 017e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1183 0180 9BB2     		uxth	r3, r3
 1184              		.loc 1 1030 26
 1185 0182 013B     		subs	r3, r3, #1
 1186 0184 9AB2     		uxth	r2, r3
 1187 0186 FB68     		ldr	r3, [r7, #12]
 1188 0188 DA85     		strh	r2, [r3, #46]	@ movhi
 1189              	.L64:
1031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Check the remain data to be sent */
1034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* rxdatacount is a temporary variable for MISRAC2012-Rule-13.5 */
1035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     rxdatacount = husart->RxXferCount;
 1190              		.loc 1 1035 17
 1191 018a FB68     		ldr	r3, [r7, #12]
 1192 018c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1193 018e FB83     		strh	r3, [r7, #30]	@ movhi
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     while ((husart->TxXferCount > 0U) || (rxdatacount > 0U))
 1194              		.loc 1 1036 11
 1195 0190 6CE0     		b	.L68
 1196              	.L77:
ARM GAS  /tmp/ccUeuQwq.s 			page 40


1037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->TxXferCount > 0U)
 1197              		.loc 1 1038 17
 1198 0192 FB68     		ldr	r3, [r7, #12]
 1199 0194 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1200 0196 9BB2     		uxth	r3, r3
 1201              		.loc 1 1038 10
 1202 0198 002B     		cmp	r3, #0
 1203 019a 2ED0     		beq	.L69
1039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Wait until TXE flag is set to send data */
1041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_
 1204              		.loc 1 1041 13
 1205 019c BB6B     		ldr	r3, [r7, #56]
 1206 019e 0093     		str	r3, [sp]
 1207 01a0 BB69     		ldr	r3, [r7, #24]
 1208 01a2 0022     		movs	r2, #0
 1209 01a4 8021     		movs	r1, #128
 1210 01a6 F868     		ldr	r0, [r7, #12]
 1211 01a8 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1212 01ac 0346     		mov	r3, r0
 1213              		.loc 1 1041 12
 1214 01ae 002B     		cmp	r3, #0
 1215 01b0 01D0     		beq	.L70
1042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           return HAL_TIMEOUT;
 1216              		.loc 1 1043 18
 1217 01b2 0323     		movs	r3, #3
 1218 01b4 6DE0     		b	.L52
 1219              	.L70:
1044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (ptxdata8bits == NULL)
 1220              		.loc 1 1045 12
 1221 01b6 7B6A     		ldr	r3, [r7, #36]
 1222 01b8 002B     		cmp	r3, #0
 1223 01ba 0BD1     		bne	.L71
1046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->Instance->TDR = (uint16_t)(*ptxdata16bits & uhMask);
 1224              		.loc 1 1047 46
 1225 01bc 3B6A     		ldr	r3, [r7, #32]
 1226 01be 1A88     		ldrh	r2, [r3]
 1227              		.loc 1 1047 35
 1228 01c0 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1229 01c2 1340     		ands	r3, r3, r2
 1230 01c4 9AB2     		uxth	r2, r3
 1231              		.loc 1 1047 17
 1232 01c6 FB68     		ldr	r3, [r7, #12]
 1233 01c8 1B68     		ldr	r3, [r3]
 1234              		.loc 1 1047 33
 1235 01ca 9A62     		str	r2, [r3, #40]
1048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           ptxdata16bits++;
 1236              		.loc 1 1048 24
 1237 01cc 3B6A     		ldr	r3, [r7, #32]
 1238 01ce 0233     		adds	r3, r3, #2
 1239 01d0 3B62     		str	r3, [r7, #32]
 1240 01d2 0BE0     		b	.L72
 1241              	.L71:
ARM GAS  /tmp/ccUeuQwq.s 			page 41


1049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else
1051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->Instance->TDR = (uint8_t)(*ptxdata8bits & (uint8_t)(uhMask & 0xFFU));
 1242              		.loc 1 1052 45
 1243 01d4 7B6A     		ldr	r3, [r7, #36]
 1244 01d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1245              		.loc 1 1052 61
 1246 01d8 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1247 01da DBB2     		uxtb	r3, r3
 1248              		.loc 1 1052 35
 1249 01dc 1340     		ands	r3, r3, r2
 1250 01de DAB2     		uxtb	r2, r3
 1251              		.loc 1 1052 17
 1252 01e0 FB68     		ldr	r3, [r7, #12]
 1253 01e2 1B68     		ldr	r3, [r3]
 1254              		.loc 1 1052 33
 1255 01e4 9A62     		str	r2, [r3, #40]
1053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           ptxdata8bits++;
 1256              		.loc 1 1053 23
 1257 01e6 7B6A     		ldr	r3, [r7, #36]
 1258 01e8 0133     		adds	r3, r3, #1
 1259 01ea 7B62     		str	r3, [r7, #36]
 1260              	.L72:
1054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
 1261              		.loc 1 1056 15
 1262 01ec FB68     		ldr	r3, [r7, #12]
 1263 01ee DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1264 01f0 9BB2     		uxth	r3, r3
 1265              		.loc 1 1056 28
 1266 01f2 013B     		subs	r3, r3, #1
 1267 01f4 9AB2     		uxth	r2, r3
 1268 01f6 FB68     		ldr	r3, [r7, #12]
 1269 01f8 DA85     		strh	r2, [r3, #46]	@ movhi
 1270              	.L69:
1057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->RxXferCount > 0U)
 1271              		.loc 1 1059 17
 1272 01fa FB68     		ldr	r3, [r7, #12]
 1273 01fc DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1274 01fe 9BB2     		uxth	r3, r3
 1275              		.loc 1 1059 10
 1276 0200 002B     		cmp	r3, #0
 1277 0202 30D0     		beq	.L73
1060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Wait for RXNE Flag */
1062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (USART_WaitOnFlagUntilTimeout(husart, USART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL
 1278              		.loc 1 1062 13
 1279 0204 BB6B     		ldr	r3, [r7, #56]
 1280 0206 0093     		str	r3, [sp]
 1281 0208 BB69     		ldr	r3, [r7, #24]
 1282 020a 0022     		movs	r2, #0
 1283 020c 2021     		movs	r1, #32
 1284 020e F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 42


 1285 0210 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 1286 0214 0346     		mov	r3, r0
 1287              		.loc 1 1062 12
 1288 0216 002B     		cmp	r3, #0
 1289 0218 01D0     		beq	.L74
1063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           return HAL_TIMEOUT;
 1290              		.loc 1 1064 18
 1291 021a 0323     		movs	r3, #3
 1292 021c 39E0     		b	.L52
 1293              	.L74:
1065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (prxdata8bits == NULL)
 1294              		.loc 1 1067 12
 1295 021e FB6A     		ldr	r3, [r7, #44]
 1296 0220 002B     		cmp	r3, #0
 1297 0222 0CD1     		bne	.L75
1068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           *prxdata16bits = (uint16_t)(husart->Instance->RDR & uhMask);
 1298              		.loc 1 1069 45
 1299 0224 FB68     		ldr	r3, [r7, #12]
 1300 0226 1B68     		ldr	r3, [r3]
 1301              		.loc 1 1069 55
 1302 0228 5B6A     		ldr	r3, [r3, #36]
 1303              		.loc 1 1069 28
 1304 022a 9AB2     		uxth	r2, r3
 1305 022c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1306 022e 1340     		ands	r3, r3, r2
 1307 0230 9AB2     		uxth	r2, r3
 1308              		.loc 1 1069 26
 1309 0232 BB6A     		ldr	r3, [r7, #40]
 1310 0234 1A80     		strh	r2, [r3]	@ movhi
1070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           prxdata16bits++;
 1311              		.loc 1 1070 24
 1312 0236 BB6A     		ldr	r3, [r7, #40]
 1313 0238 0233     		adds	r3, r3, #2
 1314 023a BB62     		str	r3, [r7, #40]
 1315 023c 0CE0     		b	.L76
 1316              	.L75:
1071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else
1073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           *prxdata8bits = (uint8_t)(husart->Instance->RDR & (uint8_t)(uhMask & 0xFFU));
 1317              		.loc 1 1074 43
 1318 023e FB68     		ldr	r3, [r7, #12]
 1319 0240 1B68     		ldr	r3, [r3]
 1320              		.loc 1 1074 53
 1321 0242 5B6A     		ldr	r3, [r3, #36]
 1322              		.loc 1 1074 27
 1323 0244 DAB2     		uxtb	r2, r3
 1324              		.loc 1 1074 61
 1325 0246 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1326 0248 DBB2     		uxtb	r3, r3
 1327              		.loc 1 1074 27
 1328 024a 1340     		ands	r3, r3, r2
 1329 024c DAB2     		uxtb	r2, r3
ARM GAS  /tmp/ccUeuQwq.s 			page 43


 1330              		.loc 1 1074 25
 1331 024e FB6A     		ldr	r3, [r7, #44]
 1332 0250 1A70     		strb	r2, [r3]
1075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           prxdata8bits++;
 1333              		.loc 1 1075 23
 1334 0252 FB6A     		ldr	r3, [r7, #44]
 1335 0254 0133     		adds	r3, r3, #1
 1336 0256 FB62     		str	r3, [r7, #44]
 1337              	.L76:
1076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxXferCount--;
 1338              		.loc 1 1078 15
 1339 0258 FB68     		ldr	r3, [r7, #12]
 1340 025a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1341 025c 9BB2     		uxth	r3, r3
 1342              		.loc 1 1078 28
 1343 025e 013B     		subs	r3, r3, #1
 1344 0260 9AB2     		uxth	r2, r3
 1345 0262 FB68     		ldr	r3, [r7, #12]
 1346 0264 DA86     		strh	r2, [r3, #54]	@ movhi
 1347              	.L73:
1079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       rxdatacount = husart->RxXferCount;
 1348              		.loc 1 1080 19
 1349 0266 FB68     		ldr	r3, [r7, #12]
 1350 0268 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 1351 026a FB83     		strh	r3, [r7, #30]	@ movhi
 1352              	.L68:
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 1353              		.loc 1 1036 19
 1354 026c FB68     		ldr	r3, [r7, #12]
 1355 026e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1356 0270 9BB2     		uxth	r3, r3
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 1357              		.loc 1 1036 11
 1358 0272 002B     		cmp	r3, #0
 1359 0274 8DD1     		bne	.L77
1036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 1360              		.loc 1 1036 39 discriminator 1
 1361 0276 FB8B     		ldrh	r3, [r7, #30]
 1362 0278 002B     		cmp	r3, #0
 1363 027a 8AD1     		bne	.L77
1081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* At end of TxRx process, restore husart->State to Ready */
1084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 1364              		.loc 1 1084 19
 1365 027c FB68     		ldr	r3, [r7, #12]
 1366 027e 0122     		movs	r2, #1
 1367 0280 83F85920 		strb	r2, [r3, #89]
1085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Unlocked */
1087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_UNLOCK(husart);
 1368              		.loc 1 1087 5
 1369 0284 FB68     		ldr	r3, [r7, #12]
 1370 0286 0022     		movs	r2, #0
ARM GAS  /tmp/ccUeuQwq.s 			page 44


 1371 0288 83F85820 		strb	r2, [r3, #88]
1088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 1372              		.loc 1 1089 12
 1373 028c 0023     		movs	r3, #0
 1374 028e 00E0     		b	.L52
 1375              	.L49:
1090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 1376              		.loc 1 1093 12
 1377 0290 0223     		movs	r3, #2
 1378              	.L52:
1094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 1379              		.loc 1 1095 1
 1380 0292 1846     		mov	r0, r3
 1381 0294 3037     		adds	r7, r7, #48
 1382              	.LCFI35:
 1383              		.cfi_def_cfa_offset 8
 1384 0296 BD46     		mov	sp, r7
 1385              	.LCFI36:
 1386              		.cfi_def_cfa_register 13
 1387              		@ sp needed
 1388 0298 80BD     		pop	{r7, pc}
 1389              		.cfi_endproc
 1390              	.LFE337:
 1392              		.section	.text.HAL_USART_Transmit_IT,"ax",%progbits
 1393              		.align	1
 1394              		.global	HAL_USART_Transmit_IT
 1395              		.syntax unified
 1396              		.thumb
 1397              		.thumb_func
 1398              		.fpu fpv5-d16
 1400              	HAL_USART_Transmit_IT:
 1401              	.LFB338:
1096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Send an amount of data in interrupt mode.
1099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 provided through pTxData.
1102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData pointer to data buffer (u8 or u16 data elements).
1104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be sent.
1105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Siz
1108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 1402              		.loc 1 1108 1
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 16
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 1407 0000 80B4     		push	{r7}
 1408              	.LCFI37:
ARM GAS  /tmp/ccUeuQwq.s 			page 45


 1409              		.cfi_def_cfa_offset 4
 1410              		.cfi_offset 7, -4
 1411 0002 85B0     		sub	sp, sp, #20
 1412              	.LCFI38:
 1413              		.cfi_def_cfa_offset 24
 1414 0004 00AF     		add	r7, sp, #0
 1415              	.LCFI39:
 1416              		.cfi_def_cfa_register 7
 1417 0006 F860     		str	r0, [r7, #12]
 1418 0008 B960     		str	r1, [r7, #8]
 1419 000a 1346     		mov	r3, r2
 1420 000c FB80     		strh	r3, [r7, #6]	@ movhi
1109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1421              		.loc 1 1109 13
 1422 000e FB68     		ldr	r3, [r7, #12]
 1423 0010 93F85930 		ldrb	r3, [r3, #89]
 1424 0014 DBB2     		uxtb	r3, r3
 1425              		.loc 1 1109 6
 1426 0016 012B     		cmp	r3, #1
 1427 0018 65D1     		bne	.L79
1110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0U))
 1428              		.loc 1 1111 8
 1429 001a BB68     		ldr	r3, [r7, #8]
 1430 001c 002B     		cmp	r3, #0
 1431 001e 02D0     		beq	.L80
 1432              		.loc 1 1111 27 discriminator 1
 1433 0020 FB88     		ldrh	r3, [r7, #6]
 1434 0022 002B     		cmp	r3, #0
 1435 0024 01D1     		bne	.L81
 1436              	.L80:
1112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 1437              		.loc 1 1113 14
 1438 0026 0123     		movs	r3, #1
 1439 0028 5EE0     		b	.L82
 1440              	.L81:
1114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 1441              		.loc 1 1117 5
 1442 002a FB68     		ldr	r3, [r7, #12]
 1443 002c 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1444 0030 012B     		cmp	r3, #1
 1445 0032 01D1     		bne	.L83
 1446              		.loc 1 1117 5 is_stmt 0 discriminator 1
 1447 0034 0223     		movs	r3, #2
 1448 0036 57E0     		b	.L82
 1449              	.L83:
 1450              		.loc 1 1117 5 discriminator 2
 1451 0038 FB68     		ldr	r3, [r7, #12]
 1452 003a 0122     		movs	r2, #1
 1453 003c 83F85820 		strb	r2, [r3, #88]
1118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pTxBuffPtr  = pTxData;
 1454              		.loc 1 1119 25 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccUeuQwq.s 			page 46


 1455 0040 FB68     		ldr	r3, [r7, #12]
 1456 0042 BA68     		ldr	r2, [r7, #8]
 1457 0044 9A62     		str	r2, [r3, #40]
1120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize  = Size;
 1458              		.loc 1 1120 25 discriminator 2
 1459 0046 FB68     		ldr	r3, [r7, #12]
 1460 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1461 004a 9A85     		strh	r2, [r3, #44]	@ movhi
1121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = Size;
 1462              		.loc 1 1121 25 discriminator 2
 1463 004c FB68     		ldr	r3, [r7, #12]
 1464 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1465 0050 DA85     		strh	r2, [r3, #46]	@ movhi
1122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxISR       = NULL;
 1466              		.loc 1 1122 25 discriminator 2
 1467 0052 FB68     		ldr	r3, [r7, #12]
 1468 0054 0022     		movs	r2, #0
 1469 0056 DA64     		str	r2, [r3, #76]
1123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1470              		.loc 1 1124 23 discriminator 2
 1471 0058 FB68     		ldr	r3, [r7, #12]
 1472 005a 0022     		movs	r2, #0
 1473 005c DA65     		str	r2, [r3, #92]
1125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State     = HAL_USART_STATE_BUSY_TX;
 1474              		.loc 1 1125 23 discriminator 2
 1475 005e FB68     		ldr	r3, [r7, #12]
 1476 0060 1222     		movs	r2, #18
 1477 0062 83F85920 		strb	r2, [r3, #89]
1126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* The USART Error Interrupts: (Frame error, noise error, overrun error)
1128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     are not managed by the USART Transmit Process to avoid the overrun interrupt
1129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     when the usart mode is configured for transmit and receive "USART_MODE_TX_RX"
1130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     to benefit for the frame error and noise interrupts the usart mode should be
1131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     configured only for transmit "USART_MODE_TX" */
1132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Configure Tx interrupt processing */
1134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->FifoMode == USART_FIFOMODE_ENABLE)
 1478              		.loc 1 1134 15 discriminator 2
 1479 0066 FB68     		ldr	r3, [r7, #12]
 1480 0068 5B6C     		ldr	r3, [r3, #68]
 1481              		.loc 1 1134 8 discriminator 2
 1482 006a B3F1005F 		cmp	r3, #536870912
 1483 006e 1CD1     		bne	.L84
1135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 1484              		.loc 1 1137 24
 1485 0070 FB68     		ldr	r3, [r7, #12]
 1486 0072 9B68     		ldr	r3, [r3, #8]
 1487              		.loc 1 1137 10
 1488 0074 B3F5805F 		cmp	r3, #4096
 1489 0078 07D1     		bne	.L85
 1490              		.loc 1 1137 76 discriminator 1
 1491 007a FB68     		ldr	r3, [r7, #12]
 1492 007c 1B69     		ldr	r3, [r3, #16]
 1493              		.loc 1 1137 60 discriminator 1
ARM GAS  /tmp/ccUeuQwq.s 			page 47


 1494 007e 002B     		cmp	r3, #0
 1495 0080 03D1     		bne	.L85
1138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_16BIT_FIFOEN;
 1496              		.loc 1 1139 23
 1497 0082 FB68     		ldr	r3, [r7, #12]
 1498 0084 1B4A     		ldr	r2, .L90
 1499 0086 DA64     		str	r2, [r3, #76]
 1500 0088 02E0     		b	.L86
 1501              	.L85:
1140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_8BIT_FIFOEN;
 1502              		.loc 1 1143 23
 1503 008a FB68     		ldr	r3, [r7, #12]
 1504 008c 1A4A     		ldr	r2, .L90+4
 1505 008e DA64     		str	r2, [r3, #76]
 1506              	.L86:
1144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 1507              		.loc 1 1147 7
 1508 0090 FB68     		ldr	r3, [r7, #12]
 1509 0092 0022     		movs	r2, #0
 1510 0094 83F85820 		strb	r2, [r3, #88]
1148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the TX FIFO threshold interrupt */
1150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TXFT);
 1511              		.loc 1 1150 7
 1512 0098 FB68     		ldr	r3, [r7, #12]
 1513 009a 1B68     		ldr	r3, [r3]
 1514 009c 9A68     		ldr	r2, [r3, #8]
 1515 009e FB68     		ldr	r3, [r7, #12]
 1516 00a0 1B68     		ldr	r3, [r3]
 1517 00a2 42F40002 		orr	r2, r2, #8388608
 1518 00a6 9A60     		str	r2, [r3, #8]
 1519 00a8 1BE0     		b	.L87
 1520              	.L84:
1151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 1521              		.loc 1 1155 24
 1522 00aa FB68     		ldr	r3, [r7, #12]
 1523 00ac 9B68     		ldr	r3, [r3, #8]
 1524              		.loc 1 1155 10
 1525 00ae B3F5805F 		cmp	r3, #4096
 1526 00b2 07D1     		bne	.L88
 1527              		.loc 1 1155 76 discriminator 1
 1528 00b4 FB68     		ldr	r3, [r7, #12]
 1529 00b6 1B69     		ldr	r3, [r3, #16]
 1530              		.loc 1 1155 60 discriminator 1
 1531 00b8 002B     		cmp	r3, #0
 1532 00ba 03D1     		bne	.L88
ARM GAS  /tmp/ccUeuQwq.s 			page 48


1156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_16BIT;
 1533              		.loc 1 1157 23
 1534 00bc FB68     		ldr	r3, [r7, #12]
 1535 00be 0F4A     		ldr	r2, .L90+8
 1536 00c0 DA64     		str	r2, [r3, #76]
 1537 00c2 02E0     		b	.L89
 1538              	.L88:
1158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_8BIT;
 1539              		.loc 1 1161 23
 1540 00c4 FB68     		ldr	r3, [r7, #12]
 1541 00c6 0E4A     		ldr	r2, .L90+12
 1542 00c8 DA64     		str	r2, [r3, #76]
 1543              	.L89:
1162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 1544              		.loc 1 1165 7
 1545 00ca FB68     		ldr	r3, [r7, #12]
 1546 00cc 0022     		movs	r2, #0
 1547 00ce 83F85820 		strb	r2, [r3, #88]
1166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Transmit Data Register Empty Interrupt */
1168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TXE);
 1548              		.loc 1 1168 7
 1549 00d2 FB68     		ldr	r3, [r7, #12]
 1550 00d4 1B68     		ldr	r3, [r3]
 1551 00d6 1A68     		ldr	r2, [r3]
 1552 00d8 FB68     		ldr	r3, [r7, #12]
 1553 00da 1B68     		ldr	r3, [r3]
 1554 00dc 42F08002 		orr	r2, r2, #128
 1555 00e0 1A60     		str	r2, [r3]
 1556              	.L87:
1169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 1557              		.loc 1 1171 12
 1558 00e2 0023     		movs	r3, #0
 1559 00e4 00E0     		b	.L82
 1560              	.L79:
1172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 1561              		.loc 1 1175 12
 1562 00e6 0223     		movs	r3, #2
 1563              	.L82:
1176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 1564              		.loc 1 1177 1
 1565 00e8 1846     		mov	r0, r3
 1566 00ea 1437     		adds	r7, r7, #20
 1567              	.LCFI40:
ARM GAS  /tmp/ccUeuQwq.s 			page 49


 1568              		.cfi_def_cfa_offset 4
 1569 00ec BD46     		mov	sp, r7
 1570              	.LCFI41:
 1571              		.cfi_def_cfa_register 13
 1572              		@ sp needed
 1573 00ee 5DF8047B 		ldr	r7, [sp], #4
 1574              	.LCFI42:
 1575              		.cfi_restore 7
 1576              		.cfi_def_cfa_offset 0
 1577 00f2 7047     		bx	lr
 1578              	.L91:
 1579              		.align	2
 1580              	.L90:
 1581 00f4 00000000 		.word	USART_TxISR_16BIT_FIFOEN
 1582 00f8 00000000 		.word	USART_TxISR_8BIT_FIFOEN
 1583 00fc 00000000 		.word	USART_TxISR_16BIT
 1584 0100 00000000 		.word	USART_TxISR_8BIT
 1585              		.cfi_endproc
 1586              	.LFE338:
 1588              		.section	.text.HAL_USART_Receive_IT,"ax",%progbits
 1589              		.align	1
 1590              		.global	HAL_USART_Receive_IT
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu fpv5-d16
 1596              	HAL_USART_Receive_IT:
 1597              	.LFB339:
1178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Receive an amount of data in interrupt mode.
1181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   To receive synchronous data, dummy data are simultaneously transmitted.
1182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pRxData.
1185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pRxData pointer to data buffer (u8 or u16 data elements).
1187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be received.
1188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_IT(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Size
1191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 1598              		.loc 1 1191 1
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 24
 1601              		@ frame_needed = 1, uses_anonymous_args = 0
 1602              		@ link register save eliminated.
 1603 0000 80B4     		push	{r7}
 1604              	.LCFI43:
 1605              		.cfi_def_cfa_offset 4
 1606              		.cfi_offset 7, -4
 1607 0002 87B0     		sub	sp, sp, #28
 1608              	.LCFI44:
 1609              		.cfi_def_cfa_offset 32
 1610 0004 00AF     		add	r7, sp, #0
 1611              	.LCFI45:
 1612              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccUeuQwq.s 			page 50


 1613 0006 F860     		str	r0, [r7, #12]
 1614 0008 B960     		str	r1, [r7, #8]
 1615 000a 1346     		mov	r3, r2
 1616 000c FB80     		strh	r3, [r7, #6]	@ movhi
1192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t nb_dummy_data;
1193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1617              		.loc 1 1194 13
 1618 000e FB68     		ldr	r3, [r7, #12]
 1619 0010 93F85930 		ldrb	r3, [r3, #89]
 1620 0014 DBB2     		uxtb	r3, r3
 1621              		.loc 1 1194 6
 1622 0016 012B     		cmp	r3, #1
 1623 0018 40F0D280 		bne	.L93
1195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0U))
 1624              		.loc 1 1196 8
 1625 001c BB68     		ldr	r3, [r7, #8]
 1626 001e 002B     		cmp	r3, #0
 1627 0020 02D0     		beq	.L94
 1628              		.loc 1 1196 27 discriminator 1
 1629 0022 FB88     		ldrh	r3, [r7, #6]
 1630 0024 002B     		cmp	r3, #0
 1631 0026 01D1     		bne	.L95
 1632              	.L94:
1197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 1633              		.loc 1 1198 14
 1634 0028 0123     		movs	r3, #1
 1635 002a CAE0     		b	.L96
 1636              	.L95:
1199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 1637              		.loc 1 1202 5
 1638 002c FB68     		ldr	r3, [r7, #12]
 1639 002e 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1640 0032 012B     		cmp	r3, #1
 1641 0034 01D1     		bne	.L97
 1642              		.loc 1 1202 5 is_stmt 0 discriminator 1
 1643 0036 0223     		movs	r3, #2
 1644 0038 C3E0     		b	.L96
 1645              	.L97:
 1646              		.loc 1 1202 5 discriminator 2
 1647 003a FB68     		ldr	r3, [r7, #12]
 1648 003c 0122     		movs	r2, #1
 1649 003e 83F85820 		strb	r2, [r3, #88]
1203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr  = pRxData;
 1650              		.loc 1 1204 25 is_stmt 1 discriminator 2
 1651 0042 FB68     		ldr	r3, [r7, #12]
 1652 0044 BA68     		ldr	r2, [r7, #8]
 1653 0046 1A63     		str	r2, [r3, #48]
1205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize  = Size;
 1654              		.loc 1 1205 25 discriminator 2
 1655 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 51


 1656 004a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1657 004c 9A86     		strh	r2, [r3, #52]	@ movhi
1206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = Size;
 1658              		.loc 1 1206 25 discriminator 2
 1659 004e FB68     		ldr	r3, [r7, #12]
 1660 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1661 0052 DA86     		strh	r2, [r3, #54]	@ movhi
1207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxISR       = NULL;
 1662              		.loc 1 1207 25 discriminator 2
 1663 0054 FB68     		ldr	r3, [r7, #12]
 1664 0056 0022     		movs	r2, #0
 1665 0058 9A64     		str	r2, [r3, #72]
1208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 1666              		.loc 1 1209 5 discriminator 2
 1667 005a FB68     		ldr	r3, [r7, #12]
 1668 005c 9B68     		ldr	r3, [r3, #8]
 1669 005e B3F5805F 		cmp	r3, #4096
 1670 0062 0CD1     		bne	.L98
 1671              		.loc 1 1209 5 is_stmt 0 discriminator 1
 1672 0064 FB68     		ldr	r3, [r7, #12]
 1673 0066 1B69     		ldr	r3, [r3, #16]
 1674 0068 002B     		cmp	r3, #0
 1675 006a 04D1     		bne	.L99
 1676              		.loc 1 1209 5 discriminator 3
 1677 006c FB68     		ldr	r3, [r7, #12]
 1678 006e 40F2FF12 		movw	r2, #511
 1679 0072 1A87     		strh	r2, [r3, #56]	@ movhi
 1680 0074 27E0     		b	.L100
 1681              	.L99:
 1682              		.loc 1 1209 5 discriminator 4
 1683 0076 FB68     		ldr	r3, [r7, #12]
 1684 0078 FF22     		movs	r2, #255
 1685 007a 1A87     		strh	r2, [r3, #56]	@ movhi
 1686 007c 23E0     		b	.L100
 1687              	.L98:
 1688              		.loc 1 1209 5 discriminator 2
 1689 007e FB68     		ldr	r3, [r7, #12]
 1690 0080 9B68     		ldr	r3, [r3, #8]
 1691 0082 002B     		cmp	r3, #0
 1692 0084 0BD1     		bne	.L101
 1693              		.loc 1 1209 5 discriminator 5
 1694 0086 FB68     		ldr	r3, [r7, #12]
 1695 0088 1B69     		ldr	r3, [r3, #16]
 1696 008a 002B     		cmp	r3, #0
 1697 008c 03D1     		bne	.L102
 1698              		.loc 1 1209 5 discriminator 7
 1699 008e FB68     		ldr	r3, [r7, #12]
 1700 0090 FF22     		movs	r2, #255
 1701 0092 1A87     		strh	r2, [r3, #56]	@ movhi
 1702 0094 17E0     		b	.L100
 1703              	.L102:
 1704              		.loc 1 1209 5 discriminator 8
 1705 0096 FB68     		ldr	r3, [r7, #12]
 1706 0098 7F22     		movs	r2, #127
 1707 009a 1A87     		strh	r2, [r3, #56]	@ movhi
 1708 009c 13E0     		b	.L100
ARM GAS  /tmp/ccUeuQwq.s 			page 52


 1709              	.L101:
 1710              		.loc 1 1209 5 discriminator 6
 1711 009e FB68     		ldr	r3, [r7, #12]
 1712 00a0 9B68     		ldr	r3, [r3, #8]
 1713 00a2 B3F1805F 		cmp	r3, #268435456
 1714 00a6 0BD1     		bne	.L103
 1715              		.loc 1 1209 5 discriminator 9
 1716 00a8 FB68     		ldr	r3, [r7, #12]
 1717 00aa 1B69     		ldr	r3, [r3, #16]
 1718 00ac 002B     		cmp	r3, #0
 1719 00ae 03D1     		bne	.L104
 1720              		.loc 1 1209 5 discriminator 11
 1721 00b0 FB68     		ldr	r3, [r7, #12]
 1722 00b2 7F22     		movs	r2, #127
 1723 00b4 1A87     		strh	r2, [r3, #56]	@ movhi
 1724 00b6 06E0     		b	.L100
 1725              	.L104:
 1726              		.loc 1 1209 5 discriminator 12
 1727 00b8 FB68     		ldr	r3, [r7, #12]
 1728 00ba 3F22     		movs	r2, #63
 1729 00bc 1A87     		strh	r2, [r3, #56]	@ movhi
 1730 00be 02E0     		b	.L100
 1731              	.L103:
 1732              		.loc 1 1209 5 discriminator 10
 1733 00c0 FB68     		ldr	r3, [r7, #12]
 1734 00c2 0022     		movs	r2, #0
 1735 00c4 1A87     		strh	r2, [r3, #56]	@ movhi
 1736              	.L100:
1210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 1737              		.loc 1 1211 23 is_stmt 1
 1738 00c6 FB68     		ldr	r3, [r7, #12]
 1739 00c8 0022     		movs	r2, #0
 1740 00ca DA65     		str	r2, [r3, #92]
1212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 1741              		.loc 1 1212 19
 1742 00cc FB68     		ldr	r3, [r7, #12]
 1743 00ce 2222     		movs	r2, #34
 1744 00d0 83F85920 		strb	r2, [r3, #89]
1213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 1745              		.loc 1 1215 5
 1746 00d4 FB68     		ldr	r3, [r7, #12]
 1747 00d6 1B68     		ldr	r3, [r3]
 1748 00d8 9A68     		ldr	r2, [r3, #8]
 1749 00da FB68     		ldr	r3, [r7, #12]
 1750 00dc 1B68     		ldr	r3, [r3]
 1751 00de 42F00102 		orr	r2, r2, #1
 1752 00e2 9A60     		str	r2, [r3, #8]
1216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Configure Rx interrupt processing */
1218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->FifoMode == USART_FIFOMODE_ENABLE) && (Size >= husart->NbRxDataToProcess))
 1753              		.loc 1 1218 16
 1754 00e4 FB68     		ldr	r3, [r7, #12]
 1755 00e6 5B6C     		ldr	r3, [r3, #68]
 1756              		.loc 1 1218 8
ARM GAS  /tmp/ccUeuQwq.s 			page 53


 1757 00e8 B3F1005F 		cmp	r3, #536870912
 1758 00ec 29D1     		bne	.L105
 1759              		.loc 1 1218 71 discriminator 1
 1760 00ee FB68     		ldr	r3, [r7, #12]
 1761 00f0 5B8F     		ldrh	r3, [r3, #58]
 1762              		.loc 1 1218 53 discriminator 1
 1763 00f2 FA88     		ldrh	r2, [r7, #6]
 1764 00f4 9A42     		cmp	r2, r3
 1765 00f6 24D3     		bcc	.L105
1219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 1766              		.loc 1 1221 24
 1767 00f8 FB68     		ldr	r3, [r7, #12]
 1768 00fa 9B68     		ldr	r3, [r3, #8]
 1769              		.loc 1 1221 10
 1770 00fc B3F5805F 		cmp	r3, #4096
 1771 0100 07D1     		bne	.L106
 1772              		.loc 1 1221 76 discriminator 1
 1773 0102 FB68     		ldr	r3, [r7, #12]
 1774 0104 1B69     		ldr	r3, [r3, #16]
 1775              		.loc 1 1221 60 discriminator 1
 1776 0106 002B     		cmp	r3, #0
 1777 0108 03D1     		bne	.L106
1222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_16BIT_FIFOEN;
 1778              		.loc 1 1223 23
 1779 010a FB68     		ldr	r3, [r7, #12]
 1780 010c 304A     		ldr	r2, .L115
 1781 010e 9A64     		str	r2, [r3, #72]
 1782 0110 02E0     		b	.L107
 1783              	.L106:
1224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_8BIT_FIFOEN;
 1784              		.loc 1 1227 23
 1785 0112 FB68     		ldr	r3, [r7, #12]
 1786 0114 2F4A     		ldr	r2, .L115+4
 1787 0116 9A64     		str	r2, [r3, #72]
 1788              	.L107:
1228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 1789              		.loc 1 1231 7
 1790 0118 FB68     		ldr	r3, [r7, #12]
 1791 011a 0022     		movs	r2, #0
 1792 011c 83F85820 		strb	r2, [r3, #88]
1232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error interrupt and RX FIFO Threshold interrupt */
1234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 1793              		.loc 1 1234 7
 1794 0120 FB68     		ldr	r3, [r7, #12]
 1795 0122 1B68     		ldr	r3, [r3]
 1796 0124 1A68     		ldr	r2, [r3]
 1797 0126 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 54


 1798 0128 1B68     		ldr	r3, [r3]
 1799 012a 42F48072 		orr	r2, r2, #256
 1800 012e 1A60     		str	r2, [r3]
1235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_RXFTIE);
 1801              		.loc 1 1235 7
 1802 0130 FB68     		ldr	r3, [r7, #12]
 1803 0132 1B68     		ldr	r3, [r3]
 1804 0134 9A68     		ldr	r2, [r3, #8]
 1805 0136 FB68     		ldr	r3, [r7, #12]
 1806 0138 1B68     		ldr	r3, [r3]
 1807 013a 42F08052 		orr	r2, r2, #268435456
 1808 013e 9A60     		str	r2, [r3, #8]
 1809 0140 1BE0     		b	.L108
 1810              	.L105:
1236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 1811              		.loc 1 1240 24
 1812 0142 FB68     		ldr	r3, [r7, #12]
 1813 0144 9B68     		ldr	r3, [r3, #8]
 1814              		.loc 1 1240 10
 1815 0146 B3F5805F 		cmp	r3, #4096
 1816 014a 07D1     		bne	.L109
 1817              		.loc 1 1240 76 discriminator 1
 1818 014c FB68     		ldr	r3, [r7, #12]
 1819 014e 1B69     		ldr	r3, [r3, #16]
 1820              		.loc 1 1240 60 discriminator 1
 1821 0150 002B     		cmp	r3, #0
 1822 0152 03D1     		bne	.L109
1241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_16BIT;
 1823              		.loc 1 1242 23
 1824 0154 FB68     		ldr	r3, [r7, #12]
 1825 0156 204A     		ldr	r2, .L115+8
 1826 0158 9A64     		str	r2, [r3, #72]
 1827 015a 02E0     		b	.L110
 1828              	.L109:
1243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_8BIT;
 1829              		.loc 1 1246 23
 1830 015c FB68     		ldr	r3, [r7, #12]
 1831 015e 1F4A     		ldr	r2, .L115+12
 1832 0160 9A64     		str	r2, [r3, #72]
 1833              	.L110:
1247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 1834              		.loc 1 1250 7
 1835 0162 FB68     		ldr	r3, [r7, #12]
 1836 0164 0022     		movs	r2, #0
 1837 0166 83F85820 		strb	r2, [r3, #88]
1251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 55


1252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error and Data Register not empty Interrupts */
1253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 1838              		.loc 1 1253 7
 1839 016a FB68     		ldr	r3, [r7, #12]
 1840 016c 1B68     		ldr	r3, [r3]
 1841 016e 1A68     		ldr	r2, [r3]
 1842 0170 FB68     		ldr	r3, [r7, #12]
 1843 0172 1B68     		ldr	r3, [r3]
 1844 0174 42F49072 		orr	r2, r2, #288
 1845 0178 1A60     		str	r2, [r3]
 1846              	.L108:
1254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->SlaveMode == USART_SLAVEMODE_DISABLE)
 1847              		.loc 1 1256 15
 1848 017a FB68     		ldr	r3, [r7, #12]
 1849 017c 1B6C     		ldr	r3, [r3, #64]
 1850              		.loc 1 1256 8
 1851 017e 002B     		cmp	r3, #0
 1852 0180 1CD1     		bne	.L111
1257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Send dummy data in order to generate the clock for the Slave to send the next data.
1259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          When FIFO mode is disabled only one data must be transferred.
1260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          When FIFO mode is enabled data must be transmitted until the RX FIFO reaches its threshold
1261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       */
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->FifoMode == USART_FIFOMODE_ENABLE) && (Size >= husart->NbRxDataToProcess))
 1853              		.loc 1 1262 18
 1854 0182 FB68     		ldr	r3, [r7, #12]
 1855 0184 5B6C     		ldr	r3, [r3, #68]
 1856              		.loc 1 1262 10
 1857 0186 B3F1005F 		cmp	r3, #536870912
 1858 018a 13D1     		bne	.L112
 1859              		.loc 1 1262 73 discriminator 1
 1860 018c FB68     		ldr	r3, [r7, #12]
 1861 018e 5B8F     		ldrh	r3, [r3, #58]
 1862              		.loc 1 1262 55 discriminator 1
 1863 0190 FA88     		ldrh	r2, [r7, #6]
 1864 0192 9A42     		cmp	r2, r3
 1865 0194 0ED3     		bcc	.L112
1263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         for (nb_dummy_data = husart->NbRxDataToProcess ; nb_dummy_data > 0U ; nb_dummy_data--)
 1866              		.loc 1 1264 28
 1867 0196 FB68     		ldr	r3, [r7, #12]
 1868 0198 5B8F     		ldrh	r3, [r3, #58]	@ movhi
 1869 019a FB82     		strh	r3, [r7, #22]	@ movhi
 1870              		.loc 1 1264 9
 1871 019c 06E0     		b	.L113
 1872              	.L114:
1265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 1873              		.loc 1 1266 17 discriminator 3
 1874 019e FB68     		ldr	r3, [r7, #12]
 1875 01a0 1B68     		ldr	r3, [r3]
 1876              		.loc 1 1266 33 discriminator 3
 1877 01a2 FF22     		movs	r2, #255
 1878 01a4 9A62     		str	r2, [r3, #40]
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
ARM GAS  /tmp/ccUeuQwq.s 			page 56


 1879              		.loc 1 1264 92 discriminator 3
 1880 01a6 FB8A     		ldrh	r3, [r7, #22]
 1881 01a8 013B     		subs	r3, r3, #1
 1882 01aa FB82     		strh	r3, [r7, #22]	@ movhi
 1883              	.L113:
1264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 1884              		.loc 1 1264 9 discriminator 1
 1885 01ac FB8A     		ldrh	r3, [r7, #22]
 1886 01ae 002B     		cmp	r3, #0
 1887 01b0 F5D1     		bne	.L114
1262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 1888              		.loc 1 1262 10
 1889 01b2 03E0     		b	.L111
 1890              	.L112:
1267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 1891              		.loc 1 1271 15
 1892 01b4 FB68     		ldr	r3, [r7, #12]
 1893 01b6 1B68     		ldr	r3, [r3]
 1894              		.loc 1 1271 31
 1895 01b8 FF22     		movs	r2, #255
 1896 01ba 9A62     		str	r2, [r3, #40]
 1897              	.L111:
1272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 1898              		.loc 1 1275 12
 1899 01bc 0023     		movs	r3, #0
 1900 01be 00E0     		b	.L96
 1901              	.L93:
1276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 1902              		.loc 1 1279 12
 1903 01c0 0223     		movs	r3, #2
 1904              	.L96:
1280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 1905              		.loc 1 1281 1
 1906 01c2 1846     		mov	r0, r3
 1907 01c4 1C37     		adds	r7, r7, #28
 1908              	.LCFI46:
 1909              		.cfi_def_cfa_offset 4
 1910 01c6 BD46     		mov	sp, r7
 1911              	.LCFI47:
 1912              		.cfi_def_cfa_register 13
 1913              		@ sp needed
 1914 01c8 5DF8047B 		ldr	r7, [sp], #4
 1915              	.LCFI48:
 1916              		.cfi_restore 7
 1917              		.cfi_def_cfa_offset 0
 1918 01cc 7047     		bx	lr
ARM GAS  /tmp/ccUeuQwq.s 			page 57


 1919              	.L116:
 1920 01ce 00BF     		.align	2
 1921              	.L115:
 1922 01d0 00000000 		.word	USART_RxISR_16BIT_FIFOEN
 1923 01d4 00000000 		.word	USART_RxISR_8BIT_FIFOEN
 1924 01d8 00000000 		.word	USART_RxISR_16BIT
 1925 01dc 00000000 		.word	USART_RxISR_8BIT
 1926              		.cfi_endproc
 1927              	.LFE339:
 1929              		.section	.text.HAL_USART_TransmitReceive_IT,"ax",%progbits
 1930              		.align	1
 1931              		.global	HAL_USART_TransmitReceive_IT
 1932              		.syntax unified
 1933              		.thumb
 1934              		.thumb_func
 1935              		.fpu fpv5-d16
 1937              	HAL_USART_TransmitReceive_IT:
 1938              	.LFB340:
1282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Full-Duplex Send and Receive an amount of data in interrupt mode.
1285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
1287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
1288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData pointer to TX data buffer (u8 or u16 data elements).
1290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pRxData pointer to RX data buffer (u8 or u16 data elements).
1291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be sent (same amount to be received).
1292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_IT(USART_HandleTypeDef *husart, uint8_t *pTxData, uint8
1295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                uint16_t Size)
1296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 1939              		.loc 1 1296 1
 1940              		.cfi_startproc
 1941              		@ args = 0, pretend = 0, frame = 16
 1942              		@ frame_needed = 1, uses_anonymous_args = 0
 1943              		@ link register save eliminated.
 1944 0000 80B4     		push	{r7}
 1945              	.LCFI49:
 1946              		.cfi_def_cfa_offset 4
 1947              		.cfi_offset 7, -4
 1948 0002 85B0     		sub	sp, sp, #20
 1949              	.LCFI50:
 1950              		.cfi_def_cfa_offset 24
 1951 0004 00AF     		add	r7, sp, #0
 1952              	.LCFI51:
 1953              		.cfi_def_cfa_register 7
 1954 0006 F860     		str	r0, [r7, #12]
 1955 0008 B960     		str	r1, [r7, #8]
 1956 000a 7A60     		str	r2, [r7, #4]
 1957 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 1958              		.loc 1 1298 13
 1959 000e FB68     		ldr	r3, [r7, #12]
 1960 0010 93F85930 		ldrb	r3, [r3, #89]
ARM GAS  /tmp/ccUeuQwq.s 			page 58


 1961 0014 DBB2     		uxtb	r3, r3
 1962              		.loc 1 1298 6
 1963 0016 012B     		cmp	r3, #1
 1964 0018 40F0D680 		bne	.L118
1299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 1965              		.loc 1 1300 8
 1966 001c BB68     		ldr	r3, [r7, #8]
 1967 001e 002B     		cmp	r3, #0
 1968 0020 05D0     		beq	.L119
 1969              		.loc 1 1300 27 discriminator 1
 1970 0022 7B68     		ldr	r3, [r7, #4]
 1971 0024 002B     		cmp	r3, #0
 1972 0026 02D0     		beq	.L119
 1973              		.loc 1 1300 48 discriminator 2
 1974 0028 7B88     		ldrh	r3, [r7, #2]
 1975 002a 002B     		cmp	r3, #0
 1976 002c 01D1     		bne	.L120
 1977              	.L119:
1301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 1978              		.loc 1 1302 14
 1979 002e 0123     		movs	r3, #1
 1980 0030 CBE0     		b	.L121
 1981              	.L120:
1303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 1982              		.loc 1 1306 5
 1983 0032 FB68     		ldr	r3, [r7, #12]
 1984 0034 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 1985 0038 012B     		cmp	r3, #1
 1986 003a 01D1     		bne	.L122
 1987              		.loc 1 1306 5 is_stmt 0 discriminator 1
 1988 003c 0223     		movs	r3, #2
 1989 003e C4E0     		b	.L121
 1990              	.L122:
 1991              		.loc 1 1306 5 discriminator 2
 1992 0040 FB68     		ldr	r3, [r7, #12]
 1993 0042 0122     		movs	r2, #1
 1994 0044 83F85820 		strb	r2, [r3, #88]
1307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 1995              		.loc 1 1308 24 is_stmt 1 discriminator 2
 1996 0048 FB68     		ldr	r3, [r7, #12]
 1997 004a 7A68     		ldr	r2, [r7, #4]
 1998 004c 1A63     		str	r2, [r3, #48]
1309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize = Size;
 1999              		.loc 1 1309 24 discriminator 2
 2000 004e FB68     		ldr	r3, [r7, #12]
 2001 0050 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2002 0052 9A86     		strh	r2, [r3, #52]	@ movhi
1310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = Size;
 2003              		.loc 1 1310 25 discriminator 2
 2004 0054 FB68     		ldr	r3, [r7, #12]
 2005 0056 7A88     		ldrh	r2, [r7, #2]	@ movhi
ARM GAS  /tmp/ccUeuQwq.s 			page 59


 2006 0058 DA86     		strh	r2, [r3, #54]	@ movhi
1311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 2007              		.loc 1 1311 24 discriminator 2
 2008 005a FB68     		ldr	r3, [r7, #12]
 2009 005c BA68     		ldr	r2, [r7, #8]
 2010 005e 9A62     		str	r2, [r3, #40]
1312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 2011              		.loc 1 1312 24 discriminator 2
 2012 0060 FB68     		ldr	r3, [r7, #12]
 2013 0062 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2014 0064 9A85     		strh	r2, [r3, #44]	@ movhi
1313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = Size;
 2015              		.loc 1 1313 25 discriminator 2
 2016 0066 FB68     		ldr	r3, [r7, #12]
 2017 0068 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2018 006a DA85     		strh	r2, [r3, #46]	@ movhi
1314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Computation of USART mask to apply to RDR register */
1316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_MASK_COMPUTATION(husart);
 2019              		.loc 1 1316 5 discriminator 2
 2020 006c FB68     		ldr	r3, [r7, #12]
 2021 006e 9B68     		ldr	r3, [r3, #8]
 2022 0070 B3F5805F 		cmp	r3, #4096
 2023 0074 0CD1     		bne	.L123
 2024              		.loc 1 1316 5 is_stmt 0 discriminator 1
 2025 0076 FB68     		ldr	r3, [r7, #12]
 2026 0078 1B69     		ldr	r3, [r3, #16]
 2027 007a 002B     		cmp	r3, #0
 2028 007c 04D1     		bne	.L124
 2029              		.loc 1 1316 5 discriminator 3
 2030 007e FB68     		ldr	r3, [r7, #12]
 2031 0080 40F2FF12 		movw	r2, #511
 2032 0084 1A87     		strh	r2, [r3, #56]	@ movhi
 2033 0086 27E0     		b	.L125
 2034              	.L124:
 2035              		.loc 1 1316 5 discriminator 4
 2036 0088 FB68     		ldr	r3, [r7, #12]
 2037 008a FF22     		movs	r2, #255
 2038 008c 1A87     		strh	r2, [r3, #56]	@ movhi
 2039 008e 23E0     		b	.L125
 2040              	.L123:
 2041              		.loc 1 1316 5 discriminator 2
 2042 0090 FB68     		ldr	r3, [r7, #12]
 2043 0092 9B68     		ldr	r3, [r3, #8]
 2044 0094 002B     		cmp	r3, #0
 2045 0096 0BD1     		bne	.L126
 2046              		.loc 1 1316 5 discriminator 5
 2047 0098 FB68     		ldr	r3, [r7, #12]
 2048 009a 1B69     		ldr	r3, [r3, #16]
 2049 009c 002B     		cmp	r3, #0
 2050 009e 03D1     		bne	.L127
 2051              		.loc 1 1316 5 discriminator 7
 2052 00a0 FB68     		ldr	r3, [r7, #12]
 2053 00a2 FF22     		movs	r2, #255
 2054 00a4 1A87     		strh	r2, [r3, #56]	@ movhi
 2055 00a6 17E0     		b	.L125
 2056              	.L127:
ARM GAS  /tmp/ccUeuQwq.s 			page 60


 2057              		.loc 1 1316 5 discriminator 8
 2058 00a8 FB68     		ldr	r3, [r7, #12]
 2059 00aa 7F22     		movs	r2, #127
 2060 00ac 1A87     		strh	r2, [r3, #56]	@ movhi
 2061 00ae 13E0     		b	.L125
 2062              	.L126:
 2063              		.loc 1 1316 5 discriminator 6
 2064 00b0 FB68     		ldr	r3, [r7, #12]
 2065 00b2 9B68     		ldr	r3, [r3, #8]
 2066 00b4 B3F1805F 		cmp	r3, #268435456
 2067 00b8 0BD1     		bne	.L128
 2068              		.loc 1 1316 5 discriminator 9
 2069 00ba FB68     		ldr	r3, [r7, #12]
 2070 00bc 1B69     		ldr	r3, [r3, #16]
 2071 00be 002B     		cmp	r3, #0
 2072 00c0 03D1     		bne	.L129
 2073              		.loc 1 1316 5 discriminator 11
 2074 00c2 FB68     		ldr	r3, [r7, #12]
 2075 00c4 7F22     		movs	r2, #127
 2076 00c6 1A87     		strh	r2, [r3, #56]	@ movhi
 2077 00c8 06E0     		b	.L125
 2078              	.L129:
 2079              		.loc 1 1316 5 discriminator 12
 2080 00ca FB68     		ldr	r3, [r7, #12]
 2081 00cc 3F22     		movs	r2, #63
 2082 00ce 1A87     		strh	r2, [r3, #56]	@ movhi
 2083 00d0 02E0     		b	.L125
 2084              	.L128:
 2085              		.loc 1 1316 5 discriminator 10
 2086 00d2 FB68     		ldr	r3, [r7, #12]
 2087 00d4 0022     		movs	r2, #0
 2088 00d6 1A87     		strh	r2, [r3, #56]	@ movhi
 2089              	.L125:
1317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2090              		.loc 1 1318 23 is_stmt 1
 2091 00d8 FB68     		ldr	r3, [r7, #12]
 2092 00da 0022     		movs	r2, #0
 2093 00dc DA65     		str	r2, [r3, #92]
1319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 2094              		.loc 1 1319 19
 2095 00de FB68     		ldr	r3, [r7, #12]
 2096 00e0 3222     		movs	r2, #50
 2097 00e2 83F85920 		strb	r2, [r3, #89]
1320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Configure TxRx interrupt processing */
1322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->FifoMode == USART_FIFOMODE_ENABLE) && (Size >= husart->NbRxDataToProcess))
 2098              		.loc 1 1322 16
 2099 00e6 FB68     		ldr	r3, [r7, #12]
 2100 00e8 5B6C     		ldr	r3, [r3, #68]
 2101              		.loc 1 1322 8
 2102 00ea B3F1005F 		cmp	r3, #536870912
 2103 00ee 37D1     		bne	.L130
 2104              		.loc 1 1322 71 discriminator 1
 2105 00f0 FB68     		ldr	r3, [r7, #12]
 2106 00f2 5B8F     		ldrh	r3, [r3, #58]
 2107              		.loc 1 1322 53 discriminator 1
ARM GAS  /tmp/ccUeuQwq.s 			page 61


 2108 00f4 7A88     		ldrh	r2, [r7, #2]
 2109 00f6 9A42     		cmp	r2, r3
 2110 00f8 32D3     		bcc	.L130
1323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 2111              		.loc 1 1325 24
 2112 00fa FB68     		ldr	r3, [r7, #12]
 2113 00fc 9B68     		ldr	r3, [r3, #8]
 2114              		.loc 1 1325 10
 2115 00fe B3F5805F 		cmp	r3, #4096
 2116 0102 0AD1     		bne	.L131
 2117              		.loc 1 1325 76 discriminator 1
 2118 0104 FB68     		ldr	r3, [r7, #12]
 2119 0106 1B69     		ldr	r3, [r3, #16]
 2120              		.loc 1 1325 60 discriminator 1
 2121 0108 002B     		cmp	r3, #0
 2122 010a 06D1     		bne	.L131
1326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_16BIT_FIFOEN;
 2123              		.loc 1 1327 23
 2124 010c FB68     		ldr	r3, [r7, #12]
 2125 010e 324A     		ldr	r2, .L136
 2126 0110 DA64     		str	r2, [r3, #76]
1328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_16BIT_FIFOEN;
 2127              		.loc 1 1328 23
 2128 0112 FB68     		ldr	r3, [r7, #12]
 2129 0114 314A     		ldr	r2, .L136+4
 2130 0116 9A64     		str	r2, [r3, #72]
 2131 0118 05E0     		b	.L132
 2132              	.L131:
1329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_8BIT_FIFOEN;
 2133              		.loc 1 1332 23
 2134 011a FB68     		ldr	r3, [r7, #12]
 2135 011c 304A     		ldr	r2, .L136+8
 2136 011e DA64     		str	r2, [r3, #76]
1333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_8BIT_FIFOEN;
 2137              		.loc 1 1333 23
 2138 0120 FB68     		ldr	r3, [r7, #12]
 2139 0122 304A     		ldr	r2, .L136+12
 2140 0124 9A64     		str	r2, [r3, #72]
 2141              	.L132:
1334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Locked */
1337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2142              		.loc 1 1337 7
 2143 0126 FB68     		ldr	r3, [r7, #12]
 2144 0128 0022     		movs	r2, #0
 2145 012a 83F85820 		strb	r2, [r3, #88]
1338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2146              		.loc 1 1340 7
ARM GAS  /tmp/ccUeuQwq.s 			page 62


 2147 012e FB68     		ldr	r3, [r7, #12]
 2148 0130 1B68     		ldr	r3, [r3]
 2149 0132 9A68     		ldr	r2, [r3, #8]
 2150 0134 FB68     		ldr	r3, [r7, #12]
 2151 0136 1B68     		ldr	r3, [r3]
 2152 0138 42F00102 		orr	r2, r2, #1
 2153 013c 9A60     		str	r2, [r3, #8]
1341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error interrupt  */
1343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 2154              		.loc 1 1343 7
 2155 013e FB68     		ldr	r3, [r7, #12]
 2156 0140 1B68     		ldr	r3, [r3]
 2157 0142 1A68     		ldr	r2, [r3]
 2158 0144 FB68     		ldr	r3, [r7, #12]
 2159 0146 1B68     		ldr	r3, [r3]
 2160 0148 42F48072 		orr	r2, r2, #256
 2161 014c 1A60     		str	r2, [r3]
1344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the TX and  RX FIFO Threshold interrupts */
1346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, (USART_CR3_TXFTIE | USART_CR3_RXFTIE));
 2162              		.loc 1 1346 7
 2163 014e FB68     		ldr	r3, [r7, #12]
 2164 0150 1B68     		ldr	r3, [r3]
 2165 0152 9A68     		ldr	r2, [r3, #8]
 2166 0154 FB68     		ldr	r3, [r7, #12]
 2167 0156 1B68     		ldr	r3, [r3]
 2168 0158 42F08452 		orr	r2, r2, #276824064
 2169 015c 9A60     		str	r2, [r3, #8]
 2170 015e 31E0     		b	.L133
 2171              	.L130:
1347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->Init.WordLength == USART_WORDLENGTH_9B) && (husart->Init.Parity == USART_PARITY_
 2172              		.loc 1 1350 24
 2173 0160 FB68     		ldr	r3, [r7, #12]
 2174 0162 9B68     		ldr	r3, [r3, #8]
 2175              		.loc 1 1350 10
 2176 0164 B3F5805F 		cmp	r3, #4096
 2177 0168 0AD1     		bne	.L134
 2178              		.loc 1 1350 76 discriminator 1
 2179 016a FB68     		ldr	r3, [r7, #12]
 2180 016c 1B69     		ldr	r3, [r3, #16]
 2181              		.loc 1 1350 60 discriminator 1
 2182 016e 002B     		cmp	r3, #0
 2183 0170 06D1     		bne	.L134
1351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_16BIT;
 2184              		.loc 1 1352 23
 2185 0172 FB68     		ldr	r3, [r7, #12]
 2186 0174 1C4A     		ldr	r2, .L136+16
 2187 0176 DA64     		str	r2, [r3, #76]
1353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_16BIT;
 2188              		.loc 1 1353 23
 2189 0178 FB68     		ldr	r3, [r7, #12]
 2190 017a 1C4A     		ldr	r2, .L136+20
ARM GAS  /tmp/ccUeuQwq.s 			page 63


 2191 017c 9A64     		str	r2, [r3, #72]
 2192 017e 05E0     		b	.L135
 2193              	.L134:
1354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
1356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxISR = USART_TxISR_8BIT;
 2194              		.loc 1 1357 23
 2195 0180 FB68     		ldr	r3, [r7, #12]
 2196 0182 1B4A     		ldr	r2, .L136+24
 2197 0184 DA64     		str	r2, [r3, #76]
1358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR = USART_RxISR_8BIT;
 2198              		.loc 1 1358 23
 2199 0186 FB68     		ldr	r3, [r7, #12]
 2200 0188 1A4A     		ldr	r2, .L136+28
 2201 018a 9A64     		str	r2, [r3, #72]
 2202              	.L135:
1359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Locked */
1362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2203              		.loc 1 1362 7
 2204 018c FB68     		ldr	r3, [r7, #12]
 2205 018e 0022     		movs	r2, #0
 2206 0190 83F85820 		strb	r2, [r3, #88]
1363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2207              		.loc 1 1365 7
 2208 0194 FB68     		ldr	r3, [r7, #12]
 2209 0196 1B68     		ldr	r3, [r3]
 2210 0198 9A68     		ldr	r2, [r3, #8]
 2211 019a FB68     		ldr	r3, [r7, #12]
 2212 019c 1B68     		ldr	r3, [r3]
 2213 019e 42F00102 		orr	r2, r2, #1
 2214 01a2 9A60     		str	r2, [r3, #8]
1366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error and USART Data Register not empty Interrupts */
1368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
 2215              		.loc 1 1368 7
 2216 01a4 FB68     		ldr	r3, [r7, #12]
 2217 01a6 1B68     		ldr	r3, [r3]
 2218 01a8 1A68     		ldr	r2, [r3]
 2219 01aa FB68     		ldr	r3, [r7, #12]
 2220 01ac 1B68     		ldr	r3, [r3]
 2221 01ae 42F49072 		orr	r2, r2, #288
 2222 01b2 1A60     		str	r2, [r3]
1369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Transmit Data Register Empty Interrupt */
1371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
 2223              		.loc 1 1371 7
 2224 01b4 FB68     		ldr	r3, [r7, #12]
 2225 01b6 1B68     		ldr	r3, [r3]
 2226 01b8 1A68     		ldr	r2, [r3]
 2227 01ba FB68     		ldr	r3, [r7, #12]
 2228 01bc 1B68     		ldr	r3, [r3]
 2229 01be 42F08002 		orr	r2, r2, #128
ARM GAS  /tmp/ccUeuQwq.s 			page 64


 2230 01c2 1A60     		str	r2, [r3]
 2231              	.L133:
1372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_OK;
 2232              		.loc 1 1374 12
 2233 01c4 0023     		movs	r3, #0
 2234 01c6 00E0     		b	.L121
 2235              	.L118:
1375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 2236              		.loc 1 1378 12
 2237 01c8 0223     		movs	r3, #2
 2238              	.L121:
1379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 2239              		.loc 1 1380 1
 2240 01ca 1846     		mov	r0, r3
 2241 01cc 1437     		adds	r7, r7, #20
 2242              	.LCFI52:
 2243              		.cfi_def_cfa_offset 4
 2244 01ce BD46     		mov	sp, r7
 2245              	.LCFI53:
 2246              		.cfi_def_cfa_register 13
 2247              		@ sp needed
 2248 01d0 5DF8047B 		ldr	r7, [sp], #4
 2249              	.LCFI54:
 2250              		.cfi_restore 7
 2251              		.cfi_def_cfa_offset 0
 2252 01d4 7047     		bx	lr
 2253              	.L137:
 2254 01d6 00BF     		.align	2
 2255              	.L136:
 2256 01d8 00000000 		.word	USART_TxISR_16BIT_FIFOEN
 2257 01dc 00000000 		.word	USART_RxISR_16BIT_FIFOEN
 2258 01e0 00000000 		.word	USART_TxISR_8BIT_FIFOEN
 2259 01e4 00000000 		.word	USART_RxISR_8BIT_FIFOEN
 2260 01e8 00000000 		.word	USART_TxISR_16BIT
 2261 01ec 00000000 		.word	USART_RxISR_16BIT
 2262 01f0 00000000 		.word	USART_TxISR_8BIT
 2263 01f4 00000000 		.word	USART_RxISR_8BIT
 2264              		.cfi_endproc
 2265              	.LFE340:
 2267              		.section	.text.HAL_USART_Transmit_DMA,"ax",%progbits
 2268              		.align	1
 2269              		.global	HAL_USART_Transmit_DMA
 2270              		.syntax unified
 2271              		.thumb
 2272              		.thumb_func
 2273              		.fpu fpv5-d16
 2275              	HAL_USART_Transmit_DMA:
 2276              	.LFB341:
1381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Send an amount of data in DMA mode.
ARM GAS  /tmp/ccUeuQwq.s 			page 65


1384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 provided through pTxData.
1387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData pointer to data buffer (u8 or u16 data elements).
1389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be sent.
1390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Transmit_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint16_t Si
1393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 2277              		.loc 1 1393 1
 2278              		.cfi_startproc
 2279              		@ args = 0, pretend = 0, frame = 24
 2280              		@ frame_needed = 1, uses_anonymous_args = 0
 2281 0000 80B5     		push	{r7, lr}
 2282              	.LCFI55:
 2283              		.cfi_def_cfa_offset 8
 2284              		.cfi_offset 7, -8
 2285              		.cfi_offset 14, -4
 2286 0002 86B0     		sub	sp, sp, #24
 2287              	.LCFI56:
 2288              		.cfi_def_cfa_offset 32
 2289 0004 00AF     		add	r7, sp, #0
 2290              	.LCFI57:
 2291              		.cfi_def_cfa_register 7
 2292 0006 F860     		str	r0, [r7, #12]
 2293 0008 B960     		str	r1, [r7, #8]
 2294 000a 1346     		mov	r3, r2
 2295 000c FB80     		strh	r3, [r7, #6]	@ movhi
1394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
 2296              		.loc 1 1394 21
 2297 000e 0023     		movs	r3, #0
 2298 0010 FB75     		strb	r3, [r7, #23]
1395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t *tmp;
1396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 2299              		.loc 1 1397 13
 2300 0012 FB68     		ldr	r3, [r7, #12]
 2301 0014 93F85930 		ldrb	r3, [r3, #89]
 2302 0018 DBB2     		uxtb	r3, r3
 2303              		.loc 1 1397 6
 2304 001a 012B     		cmp	r3, #1
 2305 001c 64D1     		bne	.L139
1398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (Size == 0U))
 2306              		.loc 1 1399 18
 2307 001e BB68     		ldr	r3, [r7, #8]
 2308              		.loc 1 1399 8
 2309 0020 002B     		cmp	r3, #0
 2310 0022 02D0     		beq	.L140
 2311              		.loc 1 1399 27 discriminator 1
 2312 0024 FB88     		ldrh	r3, [r7, #6]
 2313 0026 002B     		cmp	r3, #0
 2314 0028 01D1     		bne	.L141
 2315              	.L140:
1400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccUeuQwq.s 			page 66


 2316              		.loc 1 1401 14
 2317 002a 0123     		movs	r3, #1
 2318 002c 5DE0     		b	.L142
 2319              	.L141:
1402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 2320              		.loc 1 1405 5
 2321 002e FB68     		ldr	r3, [r7, #12]
 2322 0030 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2323 0034 012B     		cmp	r3, #1
 2324 0036 01D1     		bne	.L143
 2325              		.loc 1 1405 5 is_stmt 0 discriminator 1
 2326 0038 0223     		movs	r3, #2
 2327 003a 56E0     		b	.L142
 2328              	.L143:
 2329              		.loc 1 1405 5 discriminator 2
 2330 003c FB68     		ldr	r3, [r7, #12]
 2331 003e 0122     		movs	r2, #1
 2332 0040 83F85820 		strb	r2, [r3, #88]
1406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 2333              		.loc 1 1407 24 is_stmt 1 discriminator 2
 2334 0044 BA68     		ldr	r2, [r7, #8]
 2335 0046 FB68     		ldr	r3, [r7, #12]
 2336 0048 9A62     		str	r2, [r3, #40]
1408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 2337              		.loc 1 1408 24 discriminator 2
 2338 004a FB68     		ldr	r3, [r7, #12]
 2339 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 2340 004e 9A85     		strh	r2, [r3, #44]	@ movhi
1409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = Size;
 2341              		.loc 1 1409 25 discriminator 2
 2342 0050 FB68     		ldr	r3, [r7, #12]
 2343 0052 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2344 0054 DA85     		strh	r2, [r3, #46]	@ movhi
1410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2345              		.loc 1 1411 23 discriminator 2
 2346 0056 FB68     		ldr	r3, [r7, #12]
 2347 0058 0022     		movs	r2, #0
 2348 005a DA65     		str	r2, [r3, #92]
1412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX;
 2349              		.loc 1 1412 19 discriminator 2
 2350 005c FB68     		ldr	r3, [r7, #12]
 2351 005e 1222     		movs	r2, #18
 2352 0060 83F85920 		strb	r2, [r3, #89]
1413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmatx != NULL)
 2353              		.loc 1 1414 15 discriminator 2
 2354 0064 FB68     		ldr	r3, [r7, #12]
 2355 0066 1B6D     		ldr	r3, [r3, #80]
 2356              		.loc 1 1414 8 discriminator 2
 2357 0068 002B     		cmp	r3, #0
 2358 006a 1BD0     		beq	.L144
1415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
ARM GAS  /tmp/ccUeuQwq.s 			page 67


1416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA transfer complete callback */
1417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 2359              		.loc 1 1417 13
 2360 006c FB68     		ldr	r3, [r7, #12]
 2361 006e 1B6D     		ldr	r3, [r3, #80]
 2362              		.loc 1 1417 40
 2363 0070 204A     		ldr	r2, .L146
 2364 0072 DA63     		str	r2, [r3, #60]
1418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Half transfer complete callback */
1420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 2365              		.loc 1 1420 13
 2366 0074 FB68     		ldr	r3, [r7, #12]
 2367 0076 1B6D     		ldr	r3, [r3, #80]
 2368              		.loc 1 1420 44
 2369 0078 1F4A     		ldr	r2, .L146+4
 2370 007a 1A64     		str	r2, [r3, #64]
1421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the DMA error callback */
1423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferErrorCallback = USART_DMAError;
 2371              		.loc 1 1423 13
 2372 007c FB68     		ldr	r3, [r7, #12]
 2373 007e 1B6D     		ldr	r3, [r3, #80]
 2374              		.loc 1 1423 41
 2375 0080 1E4A     		ldr	r2, .L146+8
 2376 0082 DA64     		str	r2, [r3, #76]
1424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART transmit DMA channel */
1426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       tmp = (uint32_t *)&pTxData;
 2377              		.loc 1 1426 11
 2378 0084 07F10803 		add	r3, r7, #8
 2379 0088 3B61     		str	r3, [r7, #16]
1427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       status = HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->TDR,
 2380              		.loc 1 1427 16
 2381 008a FB68     		ldr	r3, [r7, #12]
 2382 008c 186D     		ldr	r0, [r3, #80]
 2383 008e 3B69     		ldr	r3, [r7, #16]
 2384 0090 1968     		ldr	r1, [r3]
 2385              		.loc 1 1427 84
 2386 0092 FB68     		ldr	r3, [r7, #12]
 2387 0094 1B68     		ldr	r3, [r3]
 2388              		.loc 1 1427 77
 2389 0096 2833     		adds	r3, r3, #40
 2390              		.loc 1 1427 16
 2391 0098 1A46     		mov	r2, r3
 2392 009a FB88     		ldrh	r3, [r7, #6]
 2393 009c FFF7FEFF 		bl	HAL_DMA_Start_IT
 2394 00a0 0346     		mov	r3, r0
 2395 00a2 FB75     		strb	r3, [r7, #23]
 2396              	.L144:
1428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (status == HAL_OK)
 2397              		.loc 1 1430 8
 2398 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2399 00a6 002B     		cmp	r3, #0
 2400 00a8 11D1     		bne	.L145
ARM GAS  /tmp/ccUeuQwq.s 			page 68


1431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Clear the TC flag in the ICR register */
1433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_TCF);
 2401              		.loc 1 1433 7
 2402 00aa FB68     		ldr	r3, [r7, #12]
 2403 00ac 1B68     		ldr	r3, [r3]
 2404 00ae 4022     		movs	r2, #64
 2405 00b0 1A62     		str	r2, [r3, #32]
1434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2406              		.loc 1 1436 7
 2407 00b2 FB68     		ldr	r3, [r7, #12]
 2408 00b4 0022     		movs	r2, #0
 2409 00b6 83F85820 		strb	r2, [r3, #88]
1437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the DMA transfer for transmit request by setting the DMAT bit
1439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
1440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2410              		.loc 1 1440 7
 2411 00ba FB68     		ldr	r3, [r7, #12]
 2412 00bc 1B68     		ldr	r3, [r3]
 2413 00be 9A68     		ldr	r2, [r3, #8]
 2414 00c0 FB68     		ldr	r3, [r7, #12]
 2415 00c2 1B68     		ldr	r3, [r3]
 2416 00c4 42F08002 		orr	r2, r2, #128
 2417 00c8 9A60     		str	r2, [r3, #8]
1441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_OK;
 2418              		.loc 1 1442 14
 2419 00ca 0023     		movs	r3, #0
 2420 00cc 0DE0     		b	.L142
 2421              	.L145:
1443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set error code to DMA */
1447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode = HAL_USART_ERROR_DMA;
 2422              		.loc 1 1447 25
 2423 00ce FB68     		ldr	r3, [r7, #12]
 2424 00d0 1022     		movs	r2, #16
 2425 00d2 DA65     		str	r2, [r3, #92]
1448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2426              		.loc 1 1450 7
 2427 00d4 FB68     		ldr	r3, [r7, #12]
 2428 00d6 0022     		movs	r2, #0
 2429 00d8 83F85820 		strb	r2, [r3, #88]
1451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Restore husart->State to ready */
1453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 2430              		.loc 1 1453 21
 2431 00dc FB68     		ldr	r3, [r7, #12]
 2432 00de 0122     		movs	r2, #1
 2433 00e0 83F85920 		strb	r2, [r3, #89]
1454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 69


1455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 2434              		.loc 1 1455 14
 2435 00e4 0123     		movs	r3, #1
 2436 00e6 00E0     		b	.L142
 2437              	.L139:
1456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 2438              		.loc 1 1460 12
 2439 00e8 0223     		movs	r3, #2
 2440              	.L142:
1461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 2441              		.loc 1 1462 1
 2442 00ea 1846     		mov	r0, r3
 2443 00ec 1837     		adds	r7, r7, #24
 2444              	.LCFI58:
 2445              		.cfi_def_cfa_offset 8
 2446 00ee BD46     		mov	sp, r7
 2447              	.LCFI59:
 2448              		.cfi_def_cfa_register 13
 2449              		@ sp needed
 2450 00f0 80BD     		pop	{r7, pc}
 2451              	.L147:
 2452 00f2 00BF     		.align	2
 2453              	.L146:
 2454 00f4 00000000 		.word	USART_DMATransmitCplt
 2455 00f8 00000000 		.word	USART_DMATxHalfCplt
 2456 00fc 00000000 		.word	USART_DMAError
 2457              		.cfi_endproc
 2458              	.LFE341:
 2460              		.section	.text.HAL_USART_Receive_DMA,"ax",%progbits
 2461              		.align	1
 2462              		.global	HAL_USART_Receive_DMA
 2463              		.syntax unified
 2464              		.thumb
 2465              		.thumb_func
 2466              		.fpu fpv5-d16
 2468              	HAL_USART_Receive_DMA:
 2469              	.LFB342:
1463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Receive an amount of data in DMA mode.
1466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1), the received data contain
1467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the parity bit (MSB position).
1468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   The USART DMA transmit channel must be configured in order to generate the clock for th
1469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pRxData.
1472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pRxData pointer to data buffer (u8 or u16 data elements).
1474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be received.
1475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Receive_DMA(USART_HandleTypeDef *husart, uint8_t *pRxData, uint16_t Siz
ARM GAS  /tmp/ccUeuQwq.s 			page 70


1478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 2470              		.loc 1 1478 1
 2471              		.cfi_startproc
 2472              		@ args = 0, pretend = 0, frame = 24
 2473              		@ frame_needed = 1, uses_anonymous_args = 0
 2474 0000 80B5     		push	{r7, lr}
 2475              	.LCFI60:
 2476              		.cfi_def_cfa_offset 8
 2477              		.cfi_offset 7, -8
 2478              		.cfi_offset 14, -4
 2479 0002 86B0     		sub	sp, sp, #24
 2480              	.LCFI61:
 2481              		.cfi_def_cfa_offset 32
 2482 0004 00AF     		add	r7, sp, #0
 2483              	.LCFI62:
 2484              		.cfi_def_cfa_register 7
 2485 0006 F860     		str	r0, [r7, #12]
 2486 0008 B960     		str	r1, [r7, #8]
 2487 000a 1346     		mov	r3, r2
 2488 000c FB80     		strh	r3, [r7, #6]	@ movhi
1479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef status = HAL_OK;
 2489              		.loc 1 1479 21
 2490 000e 0023     		movs	r3, #0
 2491 0010 FB75     		strb	r3, [r7, #23]
1480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t *tmp = (uint32_t *)&pRxData;
 2492              		.loc 1 1480 13
 2493 0012 07F10803 		add	r3, r7, #8
 2494 0016 3B61     		str	r3, [r7, #16]
1481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Rx process is not already ongoing */
1483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 2495              		.loc 1 1483 13
 2496 0018 FB68     		ldr	r3, [r7, #12]
 2497 001a 93F85930 		ldrb	r3, [r3, #89]
 2498 001e DBB2     		uxtb	r3, r3
 2499              		.loc 1 1483 6
 2500 0020 012B     		cmp	r3, #1
 2501 0022 40F0A880 		bne	.L149
1484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pRxData == NULL) || (Size == 0U))
 2502              		.loc 1 1485 18
 2503 0026 BB68     		ldr	r3, [r7, #8]
 2504              		.loc 1 1485 8
 2505 0028 002B     		cmp	r3, #0
 2506 002a 02D0     		beq	.L150
 2507              		.loc 1 1485 27 discriminator 1
 2508 002c FB88     		ldrh	r3, [r7, #6]
 2509 002e 002B     		cmp	r3, #0
 2510 0030 01D1     		bne	.L151
 2511              	.L150:
1486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 2512              		.loc 1 1487 14
 2513 0032 0123     		movs	r3, #1
 2514 0034 A0E0     		b	.L152
 2515              	.L151:
1488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 71


1489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
 2516              		.loc 1 1491 5
 2517 0036 FB68     		ldr	r3, [r7, #12]
 2518 0038 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2519 003c 012B     		cmp	r3, #1
 2520 003e 01D1     		bne	.L153
 2521              		.loc 1 1491 5 is_stmt 0 discriminator 1
 2522 0040 0223     		movs	r3, #2
 2523 0042 99E0     		b	.L152
 2524              	.L153:
 2525              		.loc 1 1491 5 discriminator 2
 2526 0044 FB68     		ldr	r3, [r7, #12]
 2527 0046 0122     		movs	r2, #1
 2528 0048 83F85820 		strb	r2, [r3, #88]
1492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 2529              		.loc 1 1493 24 is_stmt 1 discriminator 2
 2530 004c BA68     		ldr	r2, [r7, #8]
 2531 004e FB68     		ldr	r3, [r7, #12]
 2532 0050 1A63     		str	r2, [r3, #48]
1494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize = Size;
 2533              		.loc 1 1494 24 discriminator 2
 2534 0052 FB68     		ldr	r3, [r7, #12]
 2535 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2536 0056 9A86     		strh	r2, [r3, #52]	@ movhi
1495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pTxBuffPtr = pRxData;
 2537              		.loc 1 1495 24 discriminator 2
 2538 0058 BA68     		ldr	r2, [r7, #8]
 2539 005a FB68     		ldr	r3, [r7, #12]
 2540 005c 9A62     		str	r2, [r3, #40]
1496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 2541              		.loc 1 1496 24 discriminator 2
 2542 005e FB68     		ldr	r3, [r7, #12]
 2543 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2544 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2545              		.loc 1 1498 23 discriminator 2
 2546 0064 FB68     		ldr	r3, [r7, #12]
 2547 0066 0022     		movs	r2, #0
 2548 0068 DA65     		str	r2, [r3, #92]
1499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_RX;
 2549              		.loc 1 1499 19 discriminator 2
 2550 006a FB68     		ldr	r3, [r7, #12]
 2551 006c 2222     		movs	r2, #34
 2552 006e 83F85920 		strb	r2, [r3, #89]
1500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmarx != NULL)
 2553              		.loc 1 1501 15 discriminator 2
 2554 0072 FB68     		ldr	r3, [r7, #12]
 2555 0074 5B6D     		ldr	r3, [r3, #84]
 2556              		.loc 1 1501 8 discriminator 2
 2557 0076 002B     		cmp	r3, #0
 2558 0078 18D0     		beq	.L154
1502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
ARM GAS  /tmp/ccUeuQwq.s 			page 72


1503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Rx transfer complete callback */
1504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 2559              		.loc 1 1504 13
 2560 007a FB68     		ldr	r3, [r7, #12]
 2561 007c 5B6D     		ldr	r3, [r3, #84]
 2562              		.loc 1 1504 40
 2563 007e 404A     		ldr	r2, .L158
 2564 0080 DA63     		str	r2, [r3, #60]
1505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Half transfer complete callback */
1507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 2565              		.loc 1 1507 13
 2566 0082 FB68     		ldr	r3, [r7, #12]
 2567 0084 5B6D     		ldr	r3, [r3, #84]
 2568              		.loc 1 1507 44
 2569 0086 3F4A     		ldr	r2, .L158+4
 2570 0088 1A64     		str	r2, [r3, #64]
1508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Rx transfer error callback */
1510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferErrorCallback = USART_DMAError;
 2571              		.loc 1 1510 13
 2572 008a FB68     		ldr	r3, [r7, #12]
 2573 008c 5B6D     		ldr	r3, [r3, #84]
 2574              		.loc 1 1510 41
 2575 008e 3E4A     		ldr	r2, .L158+8
 2576 0090 DA64     		str	r2, [r3, #76]
1511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART receive DMA channel */
1513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       status = HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->RDR, *(uint32_t *)tmp,
 2577              		.loc 1 1513 16
 2578 0092 FB68     		ldr	r3, [r7, #12]
 2579 0094 586D     		ldr	r0, [r3, #84]
 2580              		.loc 1 1513 66
 2581 0096 FB68     		ldr	r3, [r7, #12]
 2582 0098 1B68     		ldr	r3, [r3]
 2583              		.loc 1 1513 59
 2584 009a 2433     		adds	r3, r3, #36
 2585              		.loc 1 1513 16
 2586 009c 1946     		mov	r1, r3
 2587 009e 3B69     		ldr	r3, [r7, #16]
 2588 00a0 1A68     		ldr	r2, [r3]
 2589 00a2 FB88     		ldrh	r3, [r7, #6]
 2590 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2591 00a8 0346     		mov	r3, r0
 2592 00aa FB75     		strb	r3, [r7, #23]
 2593              	.L154:
1514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((status == HAL_OK) &&
 2594              		.loc 1 1516 8
 2595 00ac FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2596 00ae 002B     		cmp	r3, #0
 2597 00b0 20D1     		bne	.L155
1517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 2598              		.loc 1 1517 16 discriminator 1
 2599 00b2 FB68     		ldr	r3, [r7, #12]
 2600 00b4 1B6C     		ldr	r3, [r3, #64]
ARM GAS  /tmp/ccUeuQwq.s 			page 73


1516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 2601              		.loc 1 1516 28 discriminator 1
 2602 00b6 002B     		cmp	r3, #0
 2603 00b8 1CD1     		bne	.L155
1518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART transmit DMA channel: the transmit channel is used in order
1520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          to generate in the non-blocking mode the clock to the slave device,
1521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          this mode isn't a simplex receive mode but a full-duplex receive mode */
1522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Tx Complete and Error callback to Null */
1524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->hdmatx != NULL)
 2604              		.loc 1 1524 17
 2605 00ba FB68     		ldr	r3, [r7, #12]
 2606 00bc 1B6D     		ldr	r3, [r3, #80]
 2607              		.loc 1 1524 10
 2608 00be 002B     		cmp	r3, #0
 2609 00c0 18D0     		beq	.L155
1525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->hdmatx->XferErrorCallback = NULL;
 2610              		.loc 1 1526 15
 2611 00c2 FB68     		ldr	r3, [r7, #12]
 2612 00c4 1B6D     		ldr	r3, [r3, #80]
 2613              		.loc 1 1526 43
 2614 00c6 0022     		movs	r2, #0
 2615 00c8 DA64     		str	r2, [r3, #76]
1527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->hdmatx->XferHalfCpltCallback = NULL;
 2616              		.loc 1 1527 15
 2617 00ca FB68     		ldr	r3, [r7, #12]
 2618 00cc 1B6D     		ldr	r3, [r3, #80]
 2619              		.loc 1 1527 46
 2620 00ce 0022     		movs	r2, #0
 2621 00d0 1A64     		str	r2, [r3, #64]
1528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->hdmatx->XferCpltCallback = NULL;
 2622              		.loc 1 1528 15
 2623 00d2 FB68     		ldr	r3, [r7, #12]
 2624 00d4 1B6D     		ldr	r3, [r3, #80]
 2625              		.loc 1 1528 42
 2626 00d6 0022     		movs	r2, #0
 2627 00d8 DA63     		str	r2, [r3, #60]
1529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status = HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->TD
 2628              		.loc 1 1529 18
 2629 00da FB68     		ldr	r3, [r7, #12]
 2630 00dc 186D     		ldr	r0, [r3, #80]
 2631 00de 3B69     		ldr	r3, [r7, #16]
 2632 00e0 1968     		ldr	r1, [r3]
 2633              		.loc 1 1529 86
 2634 00e2 FB68     		ldr	r3, [r7, #12]
 2635 00e4 1B68     		ldr	r3, [r3]
 2636              		.loc 1 1529 79
 2637 00e6 2833     		adds	r3, r3, #40
 2638              		.loc 1 1529 18
 2639 00e8 1A46     		mov	r2, r3
 2640 00ea FB88     		ldrh	r3, [r7, #6]
 2641 00ec FFF7FEFF 		bl	HAL_DMA_Start_IT
 2642 00f0 0346     		mov	r3, r0
 2643 00f2 FB75     		strb	r3, [r7, #23]
 2644              	.L155:
ARM GAS  /tmp/ccUeuQwq.s 			page 74


1530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (status == HAL_OK)
 2645              		.loc 1 1533 8
 2646 00f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2647 00f6 002B     		cmp	r3, #0
 2648 00f8 25D1     		bne	.L156
1534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2649              		.loc 1 1536 7
 2650 00fa FB68     		ldr	r3, [r7, #12]
 2651 00fc 0022     		movs	r2, #0
 2652 00fe 83F85820 		strb	r2, [r3, #88]
1537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error Interrupt */
1539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 2653              		.loc 1 1539 7
 2654 0102 FB68     		ldr	r3, [r7, #12]
 2655 0104 1B68     		ldr	r3, [r3]
 2656 0106 1A68     		ldr	r2, [r3]
 2657 0108 FB68     		ldr	r3, [r7, #12]
 2658 010a 1B68     		ldr	r3, [r3]
 2659 010c 42F48072 		orr	r2, r2, #256
 2660 0110 1A60     		str	r2, [r3]
1540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2661              		.loc 1 1542 7
 2662 0112 FB68     		ldr	r3, [r7, #12]
 2663 0114 1B68     		ldr	r3, [r3]
 2664 0116 9A68     		ldr	r2, [r3, #8]
 2665 0118 FB68     		ldr	r3, [r7, #12]
 2666 011a 1B68     		ldr	r3, [r3]
 2667 011c 42F00102 		orr	r2, r2, #1
 2668 0120 9A60     		str	r2, [r3, #8]
1543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
1546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2669              		.loc 1 1546 7
 2670 0122 FB68     		ldr	r3, [r7, #12]
 2671 0124 1B68     		ldr	r3, [r3]
 2672 0126 9A68     		ldr	r2, [r3, #8]
 2673 0128 FB68     		ldr	r3, [r7, #12]
 2674 012a 1B68     		ldr	r3, [r3]
 2675 012c 42F04002 		orr	r2, r2, #64
 2676 0130 9A60     		str	r2, [r3, #8]
1547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the DMA transfer for transmit request by setting the DMAT bit
1549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
1550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2677              		.loc 1 1550 7
 2678 0132 FB68     		ldr	r3, [r7, #12]
 2679 0134 1B68     		ldr	r3, [r3]
 2680 0136 9A68     		ldr	r2, [r3, #8]
ARM GAS  /tmp/ccUeuQwq.s 			page 75


 2681 0138 FB68     		ldr	r3, [r7, #12]
 2682 013a 1B68     		ldr	r3, [r3]
 2683 013c 42F08002 		orr	r2, r2, #128
 2684 0140 9A60     		str	r2, [r3, #8]
1551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_OK;
 2685              		.loc 1 1552 14
 2686 0142 0023     		movs	r3, #0
 2687 0144 18E0     		b	.L152
 2688              	.L156:
1553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->hdmarx != NULL)
 2689              		.loc 1 1556 17
 2690 0146 FB68     		ldr	r3, [r7, #12]
 2691 0148 5B6D     		ldr	r3, [r3, #84]
 2692              		.loc 1 1556 10
 2693 014a 002B     		cmp	r3, #0
 2694 014c 06D0     		beq	.L157
1557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status = HAL_DMA_Abort(husart->hdmarx);
 2695              		.loc 1 1558 18
 2696 014e FB68     		ldr	r3, [r7, #12]
 2697 0150 5B6D     		ldr	r3, [r3, #84]
 2698 0152 1846     		mov	r0, r3
 2699 0154 FFF7FEFF 		bl	HAL_DMA_Abort
 2700 0158 0346     		mov	r3, r0
 2701 015a FB75     		strb	r3, [r7, #23]
 2702              	.L157:
1559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* No need to check on error code */
1562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       UNUSED(status);
1563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set error code to DMA */
1565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode = HAL_USART_ERROR_DMA;
 2703              		.loc 1 1565 25
 2704 015c FB68     		ldr	r3, [r7, #12]
 2705 015e 1022     		movs	r2, #16
 2706 0160 DA65     		str	r2, [r3, #92]
1566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2707              		.loc 1 1568 7
 2708 0162 FB68     		ldr	r3, [r7, #12]
 2709 0164 0022     		movs	r2, #0
 2710 0166 83F85820 		strb	r2, [r3, #88]
1569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Restore husart->State to ready */
1571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 2711              		.loc 1 1571 21
 2712 016a FB68     		ldr	r3, [r7, #12]
 2713 016c 0122     		movs	r2, #1
 2714 016e 83F85920 		strb	r2, [r3, #89]
1572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccUeuQwq.s 			page 76


 2715              		.loc 1 1573 14
 2716 0172 0123     		movs	r3, #1
 2717 0174 00E0     		b	.L152
 2718              	.L149:
1574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 2719              		.loc 1 1578 12
 2720 0176 0223     		movs	r3, #2
 2721              	.L152:
1579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 2722              		.loc 1 1580 1
 2723 0178 1846     		mov	r0, r3
 2724 017a 1837     		adds	r7, r7, #24
 2725              	.LCFI63:
 2726              		.cfi_def_cfa_offset 8
 2727 017c BD46     		mov	sp, r7
 2728              	.LCFI64:
 2729              		.cfi_def_cfa_register 13
 2730              		@ sp needed
 2731 017e 80BD     		pop	{r7, pc}
 2732              	.L159:
 2733              		.align	2
 2734              	.L158:
 2735 0180 00000000 		.word	USART_DMAReceiveCplt
 2736 0184 00000000 		.word	USART_DMARxHalfCplt
 2737 0188 00000000 		.word	USART_DMAError
 2738              		.cfi_endproc
 2739              	.LFE342:
 2741              		.section	.text.HAL_USART_TransmitReceive_DMA,"ax",%progbits
 2742              		.align	1
 2743              		.global	HAL_USART_TransmitReceive_DMA
 2744              		.syntax unified
 2745              		.thumb
 2746              		.thumb_func
 2747              		.fpu fpv5-d16
 2749              	HAL_USART_TransmitReceive_DMA:
 2750              	.LFB343:
1581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Full-Duplex Transmit Receive an amount of data in non-blocking mode.
1584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When the USART parity is enabled (PCE = 1) the data received contain the parity bit.
1585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When USART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1
1586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         the sent data and the received data are handled as sets of u16. In this case, Size must
1587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         of u16 available through pTxData and through pRxData.
1588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pTxData pointer to TX data buffer (u8 or u16 data elements).
1590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  pRxData pointer to RX data buffer (u8 or u16 data elements).
1591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Size amount of data elements (u8 or u16) to be received/sent.
1592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_TransmitReceive_DMA(USART_HandleTypeDef *husart, uint8_t *pTxData, uint
1595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                 uint16_t Size)
1596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
ARM GAS  /tmp/ccUeuQwq.s 			page 77


 2751              		.loc 1 1596 1
 2752              		.cfi_startproc
 2753              		@ args = 0, pretend = 0, frame = 24
 2754              		@ frame_needed = 1, uses_anonymous_args = 0
 2755 0000 80B5     		push	{r7, lr}
 2756              	.LCFI65:
 2757              		.cfi_def_cfa_offset 8
 2758              		.cfi_offset 7, -8
 2759              		.cfi_offset 14, -4
 2760 0002 86B0     		sub	sp, sp, #24
 2761              	.LCFI66:
 2762              		.cfi_def_cfa_offset 32
 2763 0004 00AF     		add	r7, sp, #0
 2764              	.LCFI67:
 2765              		.cfi_def_cfa_register 7
 2766 0006 F860     		str	r0, [r7, #12]
 2767 0008 B960     		str	r1, [r7, #8]
 2768 000a 7A60     		str	r2, [r7, #4]
 2769 000c 7B80     		strh	r3, [r7, #2]	@ movhi
1597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef status;
1598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t *tmp;
1599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_READY)
 2770              		.loc 1 1600 13
 2771 000e FB68     		ldr	r3, [r7, #12]
 2772 0010 93F85930 		ldrb	r3, [r3, #89]
 2773 0014 DBB2     		uxtb	r3, r3
 2774              		.loc 1 1600 6
 2775 0016 012B     		cmp	r3, #1
 2776 0018 40F0B380 		bne	.L161
1601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 2777              		.loc 1 1602 18
 2778 001c BB68     		ldr	r3, [r7, #8]
 2779              		.loc 1 1602 8
 2780 001e 002B     		cmp	r3, #0
 2781 0020 05D0     		beq	.L162
 2782              		.loc 1 1602 39 discriminator 1
 2783 0022 7B68     		ldr	r3, [r7, #4]
 2784              		.loc 1 1602 27 discriminator 1
 2785 0024 002B     		cmp	r3, #0
 2786 0026 02D0     		beq	.L162
 2787              		.loc 1 1602 48 discriminator 2
 2788 0028 7B88     		ldrh	r3, [r7, #2]
 2789 002a 002B     		cmp	r3, #0
 2790 002c 01D1     		bne	.L163
 2791              	.L162:
1603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 2792              		.loc 1 1604 14
 2793 002e 0123     		movs	r3, #1
 2794 0030 A8E0     		b	.L164
 2795              	.L163:
1605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Process Locked */
1608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_LOCK(husart);
ARM GAS  /tmp/ccUeuQwq.s 			page 78


 2796              		.loc 1 1608 5
 2797 0032 FB68     		ldr	r3, [r7, #12]
 2798 0034 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 2799 0038 012B     		cmp	r3, #1
 2800 003a 01D1     		bne	.L165
 2801              		.loc 1 1608 5 is_stmt 0 discriminator 1
 2802 003c 0223     		movs	r3, #2
 2803 003e A1E0     		b	.L164
 2804              	.L165:
 2805              		.loc 1 1608 5 discriminator 2
 2806 0040 FB68     		ldr	r3, [r7, #12]
 2807 0042 0122     		movs	r2, #1
 2808 0044 83F85820 		strb	r2, [r3, #88]
1609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr = pRxData;
 2809              		.loc 1 1610 24 is_stmt 1 discriminator 2
 2810 0048 7A68     		ldr	r2, [r7, #4]
 2811 004a FB68     		ldr	r3, [r7, #12]
 2812 004c 1A63     		str	r2, [r3, #48]
1611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferSize = Size;
 2813              		.loc 1 1611 24 discriminator 2
 2814 004e FB68     		ldr	r3, [r7, #12]
 2815 0050 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2816 0052 9A86     		strh	r2, [r3, #52]	@ movhi
1612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pTxBuffPtr = pTxData;
 2817              		.loc 1 1612 24 discriminator 2
 2818 0054 BA68     		ldr	r2, [r7, #8]
 2819 0056 FB68     		ldr	r3, [r7, #12]
 2820 0058 9A62     		str	r2, [r3, #40]
1613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferSize = Size;
 2821              		.loc 1 1613 24 discriminator 2
 2822 005a FB68     		ldr	r3, [r7, #12]
 2823 005c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2824 005e 9A85     		strh	r2, [r3, #44]	@ movhi
1614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 2825              		.loc 1 1615 23 discriminator 2
 2826 0060 FB68     		ldr	r3, [r7, #12]
 2827 0062 0022     		movs	r2, #0
 2828 0064 DA65     		str	r2, [r3, #92]
1616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_BUSY_TX_RX;
 2829              		.loc 1 1616 19 discriminator 2
 2830 0066 FB68     		ldr	r3, [r7, #12]
 2831 0068 3222     		movs	r2, #50
 2832 006a 83F85920 		strb	r2, [r3, #89]
1617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if ((husart->hdmarx != NULL) && (husart->hdmatx != NULL))
 2833              		.loc 1 1618 16 discriminator 2
 2834 006e FB68     		ldr	r3, [r7, #12]
 2835 0070 5B6D     		ldr	r3, [r3, #84]
 2836              		.loc 1 1618 8 discriminator 2
 2837 0072 002B     		cmp	r3, #0
 2838 0074 3ED0     		beq	.L166
 2839              		.loc 1 1618 44 discriminator 1
 2840 0076 FB68     		ldr	r3, [r7, #12]
 2841 0078 1B6D     		ldr	r3, [r3, #80]
 2842              		.loc 1 1618 34 discriminator 1
ARM GAS  /tmp/ccUeuQwq.s 			page 79


 2843 007a 002B     		cmp	r3, #0
 2844 007c 3AD0     		beq	.L166
1619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Rx transfer complete callback */
1621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferCpltCallback = USART_DMAReceiveCplt;
 2845              		.loc 1 1621 13
 2846 007e FB68     		ldr	r3, [r7, #12]
 2847 0080 5B6D     		ldr	r3, [r3, #84]
 2848              		.loc 1 1621 40
 2849 0082 424A     		ldr	r2, .L171
 2850 0084 DA63     		str	r2, [r3, #60]
1622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Half transfer complete callback */
1624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferHalfCpltCallback = USART_DMARxHalfCplt;
 2851              		.loc 1 1624 13
 2852 0086 FB68     		ldr	r3, [r7, #12]
 2853 0088 5B6D     		ldr	r3, [r3, #84]
 2854              		.loc 1 1624 44
 2855 008a 414A     		ldr	r2, .L171+4
 2856 008c 1A64     		str	r2, [r3, #64]
1625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Tx transfer complete callback */
1627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferCpltCallback = USART_DMATransmitCplt;
 2857              		.loc 1 1627 13
 2858 008e FB68     		ldr	r3, [r7, #12]
 2859 0090 1B6D     		ldr	r3, [r3, #80]
 2860              		.loc 1 1627 40
 2861 0092 404A     		ldr	r2, .L171+8
 2862 0094 DA63     		str	r2, [r3, #60]
1628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Half transfer complete callback */
1630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferHalfCpltCallback = USART_DMATxHalfCplt;
 2863              		.loc 1 1630 13
 2864 0096 FB68     		ldr	r3, [r7, #12]
 2865 0098 1B6D     		ldr	r3, [r3, #80]
 2866              		.loc 1 1630 44
 2867 009a 3F4A     		ldr	r2, .L171+12
 2868 009c 1A64     		str	r2, [r3, #64]
1631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Tx transfer error callback */
1633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferErrorCallback = USART_DMAError;
 2869              		.loc 1 1633 13
 2870 009e FB68     		ldr	r3, [r7, #12]
 2871 00a0 1B6D     		ldr	r3, [r3, #80]
 2872              		.loc 1 1633 41
 2873 00a2 3E4A     		ldr	r2, .L171+16
 2874 00a4 DA64     		str	r2, [r3, #76]
1634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Rx transfer error callback */
1636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferErrorCallback = USART_DMAError;
 2875              		.loc 1 1636 13
 2876 00a6 FB68     		ldr	r3, [r7, #12]
 2877 00a8 5B6D     		ldr	r3, [r3, #84]
 2878              		.loc 1 1636 41
 2879 00aa 3C4A     		ldr	r2, .L171+16
 2880 00ac DA64     		str	r2, [r3, #76]
1637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 80


1638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART receive DMA channel */
1639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       tmp = (uint32_t *)&pRxData;
 2881              		.loc 1 1639 11
 2882 00ae 3B1D     		adds	r3, r7, #4
 2883 00b0 3B61     		str	r3, [r7, #16]
1640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       status = HAL_DMA_Start_IT(husart->hdmarx, (uint32_t)&husart->Instance->RDR, *(uint32_t *)tmp,
 2884              		.loc 1 1640 16
 2885 00b2 FB68     		ldr	r3, [r7, #12]
 2886 00b4 586D     		ldr	r0, [r3, #84]
 2887              		.loc 1 1640 66
 2888 00b6 FB68     		ldr	r3, [r7, #12]
 2889 00b8 1B68     		ldr	r3, [r3]
 2890              		.loc 1 1640 59
 2891 00ba 2433     		adds	r3, r3, #36
 2892              		.loc 1 1640 16
 2893 00bc 1946     		mov	r1, r3
 2894 00be 3B69     		ldr	r3, [r7, #16]
 2895 00c0 1A68     		ldr	r2, [r3]
 2896 00c2 7B88     		ldrh	r3, [r7, #2]
 2897 00c4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2898 00c8 0346     		mov	r3, r0
 2899 00ca FB75     		strb	r3, [r7, #23]
1641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART transmit DMA channel */
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (status == HAL_OK)
 2900              		.loc 1 1643 10
 2901 00cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2902 00ce 002B     		cmp	r3, #0
 2903 00d0 12D1     		bne	.L168
1644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         tmp = (uint32_t *)&pTxData;
 2904              		.loc 1 1645 13
 2905 00d2 07F10803 		add	r3, r7, #8
 2906 00d6 3B61     		str	r3, [r7, #16]
1646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status = HAL_DMA_Start_IT(husart->hdmatx, *(uint32_t *)tmp, (uint32_t)&husart->Instance->TD
 2907              		.loc 1 1646 18
 2908 00d8 FB68     		ldr	r3, [r7, #12]
 2909 00da 186D     		ldr	r0, [r3, #80]
 2910 00dc 3B69     		ldr	r3, [r7, #16]
 2911 00de 1968     		ldr	r1, [r3]
 2912              		.loc 1 1646 86
 2913 00e0 FB68     		ldr	r3, [r7, #12]
 2914 00e2 1B68     		ldr	r3, [r3]
 2915              		.loc 1 1646 79
 2916 00e4 2833     		adds	r3, r3, #40
 2917              		.loc 1 1646 18
 2918 00e6 1A46     		mov	r2, r3
 2919 00e8 7B88     		ldrh	r3, [r7, #2]
 2920 00ea FFF7FEFF 		bl	HAL_DMA_Start_IT
 2921 00ee 0346     		mov	r3, r0
 2922 00f0 FB75     		strb	r3, [r7, #23]
1643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 2923              		.loc 1 1643 10
 2924 00f2 01E0     		b	.L168
 2925              	.L166:
1647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 81


1649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       status = HAL_ERROR;
 2926              		.loc 1 1651 14
 2927 00f4 0123     		movs	r3, #1
 2928 00f6 FB75     		strb	r3, [r7, #23]
 2929              	.L168:
1652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (status == HAL_OK)
 2930              		.loc 1 1654 8
 2931 00f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2932 00fa 002B     		cmp	r3, #0
 2933 00fc 29D1     		bne	.L169
1655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
1657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2934              		.loc 1 1657 7
 2935 00fe FB68     		ldr	r3, [r7, #12]
 2936 0100 0022     		movs	r2, #0
 2937 0102 83F85820 		strb	r2, [r3, #88]
1658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Parity Error Interrupt */
1660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 2938              		.loc 1 1660 7
 2939 0106 FB68     		ldr	r3, [r7, #12]
 2940 0108 1B68     		ldr	r3, [r3]
 2941 010a 1A68     		ldr	r2, [r3]
 2942 010c FB68     		ldr	r3, [r7, #12]
 2943 010e 1B68     		ldr	r3, [r3]
 2944 0110 42F48072 		orr	r2, r2, #256
 2945 0114 1A60     		str	r2, [r3]
1661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Error Interrupt: (Frame error, noise error, overrun error) */
1663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 2946              		.loc 1 1663 7
 2947 0116 FB68     		ldr	r3, [r7, #12]
 2948 0118 1B68     		ldr	r3, [r3]
 2949 011a 9A68     		ldr	r2, [r3, #8]
 2950 011c FB68     		ldr	r3, [r7, #12]
 2951 011e 1B68     		ldr	r3, [r3]
 2952 0120 42F00102 		orr	r2, r2, #1
 2953 0124 9A60     		str	r2, [r3, #8]
1664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Clear the TC flag in the ICR register */
1666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_TCF);
 2954              		.loc 1 1666 7
 2955 0126 FB68     		ldr	r3, [r7, #12]
 2956 0128 1B68     		ldr	r3, [r3]
 2957 012a 4022     		movs	r2, #64
 2958 012c 1A62     		str	r2, [r3, #32]
1667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
1670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 2959              		.loc 1 1670 7
 2960 012e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 82


 2961 0130 1B68     		ldr	r3, [r3]
 2962 0132 9A68     		ldr	r2, [r3, #8]
 2963 0134 FB68     		ldr	r3, [r7, #12]
 2964 0136 1B68     		ldr	r3, [r3]
 2965 0138 42F04002 		orr	r2, r2, #64
 2966 013c 9A60     		str	r2, [r3, #8]
1671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the DMA transfer for transmit request by setting the DMAT bit
1673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
1674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 2967              		.loc 1 1674 7
 2968 013e FB68     		ldr	r3, [r7, #12]
 2969 0140 1B68     		ldr	r3, [r3]
 2970 0142 9A68     		ldr	r2, [r3, #8]
 2971 0144 FB68     		ldr	r3, [r7, #12]
 2972 0146 1B68     		ldr	r3, [r3]
 2973 0148 42F08002 		orr	r2, r2, #128
 2974 014c 9A60     		str	r2, [r3, #8]
1675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_OK;
 2975              		.loc 1 1676 14
 2976 014e 0023     		movs	r3, #0
 2977 0150 18E0     		b	.L164
 2978              	.L169:
1677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->hdmarx != NULL)
 2979              		.loc 1 1680 17
 2980 0152 FB68     		ldr	r3, [r7, #12]
 2981 0154 5B6D     		ldr	r3, [r3, #84]
 2982              		.loc 1 1680 10
 2983 0156 002B     		cmp	r3, #0
 2984 0158 06D0     		beq	.L170
1681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         status = HAL_DMA_Abort(husart->hdmarx);
 2985              		.loc 1 1682 18
 2986 015a FB68     		ldr	r3, [r7, #12]
 2987 015c 5B6D     		ldr	r3, [r3, #84]
 2988 015e 1846     		mov	r0, r3
 2989 0160 FFF7FEFF 		bl	HAL_DMA_Abort
 2990 0164 0346     		mov	r3, r0
 2991 0166 FB75     		strb	r3, [r7, #23]
 2992              	.L170:
1683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* No need to check on error code */
1686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       UNUSED(status);
1687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set error code to DMA */
1689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode = HAL_USART_ERROR_DMA;
 2993              		.loc 1 1689 25
 2994 0168 FB68     		ldr	r3, [r7, #12]
 2995 016a 1022     		movs	r2, #16
 2996 016c DA65     		str	r2, [r3, #92]
1690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Process Unlocked */
ARM GAS  /tmp/ccUeuQwq.s 			page 83


1692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_UNLOCK(husart);
 2997              		.loc 1 1692 7
 2998 016e FB68     		ldr	r3, [r7, #12]
 2999 0170 0022     		movs	r2, #0
 3000 0172 83F85820 		strb	r2, [r3, #88]
1693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Restore husart->State to ready */
1695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->State = HAL_USART_STATE_READY;
 3001              		.loc 1 1695 21
 3002 0176 FB68     		ldr	r3, [r7, #12]
 3003 0178 0122     		movs	r2, #1
 3004 017a 83F85920 		strb	r2, [r3, #89]
1696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_ERROR;
 3005              		.loc 1 1697 14
 3006 017e 0123     		movs	r3, #1
 3007 0180 00E0     		b	.L164
 3008              	.L161:
1698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return HAL_BUSY;
 3009              		.loc 1 1702 12
 3010 0182 0223     		movs	r3, #2
 3011              	.L164:
1703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3012              		.loc 1 1704 1
 3013 0184 1846     		mov	r0, r3
 3014 0186 1837     		adds	r7, r7, #24
 3015              	.LCFI68:
 3016              		.cfi_def_cfa_offset 8
 3017 0188 BD46     		mov	sp, r7
 3018              	.LCFI69:
 3019              		.cfi_def_cfa_register 13
 3020              		@ sp needed
 3021 018a 80BD     		pop	{r7, pc}
 3022              	.L172:
 3023              		.align	2
 3024              	.L171:
 3025 018c 00000000 		.word	USART_DMAReceiveCplt
 3026 0190 00000000 		.word	USART_DMARxHalfCplt
 3027 0194 00000000 		.word	USART_DMATransmitCplt
 3028 0198 00000000 		.word	USART_DMATxHalfCplt
 3029 019c 00000000 		.word	USART_DMAError
 3030              		.cfi_endproc
 3031              	.LFE343:
 3033              		.section	.text.HAL_USART_DMAPause,"ax",%progbits
 3034              		.align	1
 3035              		.global	HAL_USART_DMAPause
 3036              		.syntax unified
 3037              		.thumb
 3038              		.thumb_func
 3039              		.fpu fpv5-d16
 3041              	HAL_USART_DMAPause:
 3042              	.LFB344:
ARM GAS  /tmp/ccUeuQwq.s 			page 84


1705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Pause the DMA Transfer.
1708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAPause(USART_HandleTypeDef *husart)
1712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3043              		.loc 1 1712 1
 3044              		.cfi_startproc
 3045              		@ args = 0, pretend = 0, frame = 16
 3046              		@ frame_needed = 1, uses_anonymous_args = 0
 3047              		@ link register save eliminated.
 3048 0000 80B4     		push	{r7}
 3049              	.LCFI70:
 3050              		.cfi_def_cfa_offset 4
 3051              		.cfi_offset 7, -4
 3052 0002 85B0     		sub	sp, sp, #20
 3053              	.LCFI71:
 3054              		.cfi_def_cfa_offset 24
 3055 0004 00AF     		add	r7, sp, #0
 3056              	.LCFI72:
 3057              		.cfi_def_cfa_register 7
 3058 0006 7860     		str	r0, [r7, #4]
1713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 3059              		.loc 1 1713 32
 3060 0008 7B68     		ldr	r3, [r7, #4]
 3061 000a 93F85930 		ldrb	r3, [r3, #89]
 3062 000e FB73     		strb	r3, [r7, #15]
1714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Locked */
1716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_LOCK(husart);
 3063              		.loc 1 1716 3
 3064 0010 7B68     		ldr	r3, [r7, #4]
 3065 0012 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
 3066 0016 012B     		cmp	r3, #1
 3067 0018 01D1     		bne	.L174
 3068              		.loc 1 1716 3 is_stmt 0 discriminator 1
 3069 001a 0223     		movs	r3, #2
 3070 001c 4FE0     		b	.L175
 3071              	.L174:
 3072              		.loc 1 1716 3 discriminator 2
 3073 001e 7B68     		ldr	r3, [r7, #4]
 3074 0020 0122     		movs	r2, #1
 3075 0022 83F85820 		strb	r2, [r3, #88]
1717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT)) &&
 3076              		.loc 1 1718 8 is_stmt 1 discriminator 2
 3077 0026 7B68     		ldr	r3, [r7, #4]
 3078 0028 1B68     		ldr	r3, [r3]
 3079 002a 9B68     		ldr	r3, [r3, #8]
 3080 002c 03F08003 		and	r3, r3, #128
 3081              		.loc 1 1718 6 discriminator 2
 3082 0030 802B     		cmp	r3, #128
 3083 0032 0BD1     		bne	.L176
 3084              		.loc 1 1718 63 discriminator 1
 3085 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  /tmp/ccUeuQwq.s 			page 85


 3086 0036 122B     		cmp	r3, #18
 3087 0038 08D1     		bne	.L176
1719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX))
1720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Disable the USART DMA Tx request */
1722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3088              		.loc 1 1722 5
 3089 003a 7B68     		ldr	r3, [r7, #4]
 3090 003c 1B68     		ldr	r3, [r3]
 3091 003e 9A68     		ldr	r2, [r3, #8]
 3092 0040 7B68     		ldr	r3, [r7, #4]
 3093 0042 1B68     		ldr	r3, [r3]
 3094 0044 22F08002 		bic	r2, r2, #128
 3095 0048 9A60     		str	r2, [r3, #8]
 3096 004a 33E0     		b	.L177
 3097              	.L176:
1723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else if ((state == HAL_USART_STATE_BUSY_RX) ||
 3098              		.loc 1 1724 11
 3099 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3100 004e 222B     		cmp	r3, #34
 3101 0050 02D0     		beq	.L178
 3102              		.loc 1 1724 47 discriminator 1
 3103 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3104 0054 322B     		cmp	r3, #50
 3105 0056 2DD1     		bne	.L177
 3106              	.L178:
1725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            (state == HAL_USART_STATE_BUSY_TX_RX))
1726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 3107              		.loc 1 1727 9
 3108 0058 7B68     		ldr	r3, [r7, #4]
 3109 005a 1B68     		ldr	r3, [r3]
 3110 005c 9B68     		ldr	r3, [r3, #8]
 3111 005e 03F08003 		and	r3, r3, #128
 3112              		.loc 1 1727 8
 3113 0062 802B     		cmp	r3, #128
 3114 0064 07D1     		bne	.L179
1728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART DMA Tx request */
1730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3115              		.loc 1 1730 7
 3116 0066 7B68     		ldr	r3, [r7, #4]
 3117 0068 1B68     		ldr	r3, [r3]
 3118 006a 9A68     		ldr	r2, [r3, #8]
 3119 006c 7B68     		ldr	r3, [r7, #4]
 3120 006e 1B68     		ldr	r3, [r3]
 3121 0070 22F08002 		bic	r2, r2, #128
 3122 0074 9A60     		str	r2, [r3, #8]
 3123              	.L179:
1731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 3124              		.loc 1 1732 9
 3125 0076 7B68     		ldr	r3, [r7, #4]
 3126 0078 1B68     		ldr	r3, [r3]
 3127 007a 9B68     		ldr	r3, [r3, #8]
 3128 007c 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccUeuQwq.s 			page 86


 3129              		.loc 1 1732 8
 3130 0080 402B     		cmp	r3, #64
 3131 0082 17D1     		bne	.L177
1733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 3132              		.loc 1 1735 7
 3133 0084 7B68     		ldr	r3, [r7, #4]
 3134 0086 1B68     		ldr	r3, [r3]
 3135 0088 1A68     		ldr	r2, [r3]
 3136 008a 7B68     		ldr	r3, [r7, #4]
 3137 008c 1B68     		ldr	r3, [r3]
 3138 008e 22F48072 		bic	r2, r2, #256
 3139 0092 1A60     		str	r2, [r3]
1736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 3140              		.loc 1 1736 7
 3141 0094 7B68     		ldr	r3, [r7, #4]
 3142 0096 1B68     		ldr	r3, [r3]
 3143 0098 9A68     		ldr	r2, [r3, #8]
 3144 009a 7B68     		ldr	r3, [r7, #4]
 3145 009c 1B68     		ldr	r3, [r3]
 3146 009e 22F00102 		bic	r2, r2, #1
 3147 00a2 9A60     		str	r2, [r3, #8]
1737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART DMA Rx request */
1739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3148              		.loc 1 1739 7
 3149 00a4 7B68     		ldr	r3, [r7, #4]
 3150 00a6 1B68     		ldr	r3, [r3]
 3151 00a8 9A68     		ldr	r2, [r3, #8]
 3152 00aa 7B68     		ldr	r3, [r7, #4]
 3153 00ac 1B68     		ldr	r3, [r3]
 3154 00ae 22F04002 		bic	r2, r2, #64
 3155 00b2 9A60     		str	r2, [r3, #8]
 3156              	.L177:
1740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Nothing to do */
1745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Unlocked */
1748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 3157              		.loc 1 1748 3
 3158 00b4 7B68     		ldr	r3, [r7, #4]
 3159 00b6 0022     		movs	r2, #0
 3160 00b8 83F85820 		strb	r2, [r3, #88]
1749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 3161              		.loc 1 1750 10
 3162 00bc 0023     		movs	r3, #0
 3163              	.L175:
1751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3164              		.loc 1 1751 1
 3165 00be 1846     		mov	r0, r3
 3166 00c0 1437     		adds	r7, r7, #20
ARM GAS  /tmp/ccUeuQwq.s 			page 87


 3167              	.LCFI73:
 3168              		.cfi_def_cfa_offset 4
 3169 00c2 BD46     		mov	sp, r7
 3170              	.LCFI74:
 3171              		.cfi_def_cfa_register 13
 3172              		@ sp needed
 3173 00c4 5DF8047B 		ldr	r7, [sp], #4
 3174              	.LCFI75:
 3175              		.cfi_restore 7
 3176              		.cfi_def_cfa_offset 0
 3177 00c8 7047     		bx	lr
 3178              		.cfi_endproc
 3179              	.LFE344:
 3181              		.section	.text.HAL_USART_DMAResume,"ax",%progbits
 3182              		.align	1
 3183              		.global	HAL_USART_DMAResume
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
 3187              		.fpu fpv5-d16
 3189              	HAL_USART_DMAResume:
 3190              	.LFB345:
1752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Resume the DMA Transfer.
1755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAResume(USART_HandleTypeDef *husart)
1759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3191              		.loc 1 1759 1
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 16
 3194              		@ frame_needed = 1, uses_anonymous_args = 0
 3195              		@ link register save eliminated.
 3196 0000 80B4     		push	{r7}
 3197              	.LCFI76:
 3198              		.cfi_def_cfa_offset 4
 3199              		.cfi_offset 7, -4
 3200 0002 85B0     		sub	sp, sp, #20
 3201              	.LCFI77:
 3202              		.cfi_def_cfa_offset 24
 3203 0004 00AF     		add	r7, sp, #0
 3204              	.LCFI78:
 3205              		.cfi_def_cfa_register 7
 3206 0006 7860     		str	r0, [r7, #4]
1760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 3207              		.loc 1 1760 32
 3208 0008 7B68     		ldr	r3, [r7, #4]
 3209 000a 93F85930 		ldrb	r3, [r3, #89]
 3210 000e FB73     		strb	r3, [r7, #15]
1761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Locked */
1763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_LOCK(husart);
 3211              		.loc 1 1763 3
 3212 0010 7B68     		ldr	r3, [r7, #4]
 3213 0012 93F85830 		ldrb	r3, [r3, #88]	@ zero_extendqisi2
ARM GAS  /tmp/ccUeuQwq.s 			page 88


 3214 0016 012B     		cmp	r3, #1
 3215 0018 01D1     		bne	.L181
 3216              		.loc 1 1763 3 is_stmt 0 discriminator 1
 3217 001a 0223     		movs	r3, #2
 3218 001c 3EE0     		b	.L182
 3219              	.L181:
 3220              		.loc 1 1763 3 discriminator 2
 3221 001e 7B68     		ldr	r3, [r7, #4]
 3222 0020 0122     		movs	r2, #1
 3223 0022 83F85820 		strb	r2, [r3, #88]
1764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (state == HAL_USART_STATE_BUSY_TX)
 3224              		.loc 1 1765 6 is_stmt 1 discriminator 2
 3225 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3226 0028 122B     		cmp	r3, #18
 3227 002a 08D1     		bne	.L183
1766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Enable the USART DMA Tx request */
1768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3228              		.loc 1 1768 5
 3229 002c 7B68     		ldr	r3, [r7, #4]
 3230 002e 1B68     		ldr	r3, [r3]
 3231 0030 9A68     		ldr	r2, [r3, #8]
 3232 0032 7B68     		ldr	r3, [r7, #4]
 3233 0034 1B68     		ldr	r3, [r3]
 3234 0036 42F08002 		orr	r2, r2, #128
 3235 003a 9A60     		str	r2, [r3, #8]
 3236 003c 29E0     		b	.L184
 3237              	.L183:
1769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else if ((state == HAL_USART_STATE_BUSY_RX) ||
 3238              		.loc 1 1770 11
 3239 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3240 0040 222B     		cmp	r3, #34
 3241 0042 02D0     		beq	.L185
 3242              		.loc 1 1770 47 discriminator 1
 3243 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3244 0046 322B     		cmp	r3, #50
 3245 0048 23D1     		bne	.L184
 3246              	.L185:
1771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            (state == HAL_USART_STATE_BUSY_TX_RX))
1772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF);
 3247              		.loc 1 1774 5
 3248 004a 7B68     		ldr	r3, [r7, #4]
 3249 004c 1B68     		ldr	r3, [r3]
 3250 004e 0822     		movs	r2, #8
 3251 0050 1A62     		str	r2, [r3, #32]
1775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 3252              		.loc 1 1777 5
 3253 0052 7B68     		ldr	r3, [r7, #4]
 3254 0054 1B68     		ldr	r3, [r3]
 3255 0056 1A68     		ldr	r2, [r3]
 3256 0058 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 89


 3257 005a 1B68     		ldr	r3, [r3]
 3258 005c 42F48072 		orr	r2, r2, #256
 3259 0060 1A60     		str	r2, [r3]
1778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_EIE);
 3260              		.loc 1 1778 5
 3261 0062 7B68     		ldr	r3, [r7, #4]
 3262 0064 1B68     		ldr	r3, [r3]
 3263 0066 9A68     		ldr	r2, [r3, #8]
 3264 0068 7B68     		ldr	r3, [r7, #4]
 3265 006a 1B68     		ldr	r3, [r3]
 3266 006c 42F00102 		orr	r2, r2, #1
 3267 0070 9A60     		str	r2, [r3, #8]
1779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Enable the USART DMA Rx request  before the DMA Tx request */
1781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3268              		.loc 1 1781 5
 3269 0072 7B68     		ldr	r3, [r7, #4]
 3270 0074 1B68     		ldr	r3, [r3]
 3271 0076 9A68     		ldr	r2, [r3, #8]
 3272 0078 7B68     		ldr	r3, [r7, #4]
 3273 007a 1B68     		ldr	r3, [r3]
 3274 007c 42F04002 		orr	r2, r2, #64
 3275 0080 9A60     		str	r2, [r3, #8]
1782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Enable the USART DMA Tx request */
1784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     SET_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3276              		.loc 1 1784 5
 3277 0082 7B68     		ldr	r3, [r7, #4]
 3278 0084 1B68     		ldr	r3, [r3]
 3279 0086 9A68     		ldr	r2, [r3, #8]
 3280 0088 7B68     		ldr	r3, [r7, #4]
 3281 008a 1B68     		ldr	r3, [r3]
 3282 008c 42F08002 		orr	r2, r2, #128
 3283 0090 9A60     		str	r2, [r3, #8]
 3284              	.L184:
1785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
1787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Nothing to do */
1789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Unlocked */
1792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 3285              		.loc 1 1792 3
 3286 0092 7B68     		ldr	r3, [r7, #4]
 3287 0094 0022     		movs	r2, #0
 3288 0096 83F85820 		strb	r2, [r3, #88]
1793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 3289              		.loc 1 1794 10
 3290 009a 0023     		movs	r3, #0
 3291              	.L182:
1795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3292              		.loc 1 1795 1
 3293 009c 1846     		mov	r0, r3
 3294 009e 1437     		adds	r7, r7, #20
 3295              	.LCFI79:
ARM GAS  /tmp/ccUeuQwq.s 			page 90


 3296              		.cfi_def_cfa_offset 4
 3297 00a0 BD46     		mov	sp, r7
 3298              	.LCFI80:
 3299              		.cfi_def_cfa_register 13
 3300              		@ sp needed
 3301 00a2 5DF8047B 		ldr	r7, [sp], #4
 3302              	.LCFI81:
 3303              		.cfi_restore 7
 3304              		.cfi_def_cfa_offset 0
 3305 00a6 7047     		bx	lr
 3306              		.cfi_endproc
 3307              	.LFE345:
 3309              		.section	.text.HAL_USART_DMAStop,"ax",%progbits
 3310              		.align	1
 3311              		.global	HAL_USART_DMAStop
 3312              		.syntax unified
 3313              		.thumb
 3314              		.thumb_func
 3315              		.fpu fpv5-d16
 3317              	HAL_USART_DMAStop:
 3318              	.LFB346:
1796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Stop the DMA Transfer.
1799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_DMAStop(USART_HandleTypeDef *husart)
1803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3319              		.loc 1 1803 1
 3320              		.cfi_startproc
 3321              		@ args = 0, pretend = 0, frame = 8
 3322              		@ frame_needed = 1, uses_anonymous_args = 0
 3323 0000 80B5     		push	{r7, lr}
 3324              	.LCFI82:
 3325              		.cfi_def_cfa_offset 8
 3326              		.cfi_offset 7, -8
 3327              		.cfi_offset 14, -4
 3328 0002 82B0     		sub	sp, sp, #8
 3329              	.LCFI83:
 3330              		.cfi_def_cfa_offset 16
 3331 0004 00AF     		add	r7, sp, #0
 3332              	.LCFI84:
 3333              		.cfi_def_cfa_register 7
 3334 0006 7860     		str	r0, [r7, #4]
1804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* The Lock is not implemented on this API to allow the user application
1805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      to call the HAL USART API under callbacks HAL_USART_TxCpltCallback() / HAL_USART_RxCpltCallbac
1806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      HAL_USART_TxHalfCpltCallback / HAL_USART_RxHalfCpltCallback:
1807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      the stream and the corresponding call back is executed. */
1810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART Tx/Rx DMA requests */
1812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3335              		.loc 1 1812 3
 3336 0008 7B68     		ldr	r3, [r7, #4]
 3337 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUeuQwq.s 			page 91


 3338 000c 9A68     		ldr	r2, [r3, #8]
 3339 000e 7B68     		ldr	r3, [r7, #4]
 3340 0010 1B68     		ldr	r3, [r3]
 3341 0012 22F08002 		bic	r2, r2, #128
 3342 0016 9A60     		str	r2, [r3, #8]
1813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3343              		.loc 1 1813 3
 3344 0018 7B68     		ldr	r3, [r7, #4]
 3345 001a 1B68     		ldr	r3, [r3]
 3346 001c 9A68     		ldr	r2, [r3, #8]
 3347 001e 7B68     		ldr	r3, [r7, #4]
 3348 0020 1B68     		ldr	r3, [r3]
 3349 0022 22F04002 		bic	r2, r2, #64
 3350 0026 9A60     		str	r2, [r3, #8]
1814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Abort the USART DMA tx channel */
1816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmatx != NULL)
 3351              		.loc 1 1816 13
 3352 0028 7B68     		ldr	r3, [r7, #4]
 3353 002a 1B6D     		ldr	r3, [r3, #80]
 3354              		.loc 1 1816 6
 3355 002c 002B     		cmp	r3, #0
 3356 002e 14D0     		beq	.L187
1817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_DMA_Abort(husart->hdmatx) != HAL_OK)
 3357              		.loc 1 1818 9
 3358 0030 7B68     		ldr	r3, [r7, #4]
 3359 0032 1B6D     		ldr	r3, [r3, #80]
 3360 0034 1846     		mov	r0, r3
 3361 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 3362 003a 0346     		mov	r3, r0
 3363              		.loc 1 1818 8
 3364 003c 002B     		cmp	r3, #0
 3365 003e 0CD0     		beq	.L187
1819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_GetError(husart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3366              		.loc 1 1820 11
 3367 0040 7B68     		ldr	r3, [r7, #4]
 3368 0042 1B6D     		ldr	r3, [r3, #80]
 3369 0044 1846     		mov	r0, r3
 3370 0046 FFF7FEFF 		bl	HAL_DMA_GetError
 3371 004a 0346     		mov	r3, r0
 3372              		.loc 1 1820 10
 3373 004c 202B     		cmp	r3, #32
 3374 004e 04D1     		bne	.L187
1821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Set error code to DMA */
1823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode = HAL_USART_ERROR_DMA;
 3375              		.loc 1 1823 27
 3376 0050 7B68     		ldr	r3, [r7, #4]
 3377 0052 1022     		movs	r2, #16
 3378 0054 DA65     		str	r2, [r3, #92]
1824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 3379              		.loc 1 1825 16
 3380 0056 0323     		movs	r3, #3
 3381 0058 20E0     		b	.L188
ARM GAS  /tmp/ccUeuQwq.s 			page 92


 3382              	.L187:
1826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Abort the USART DMA rx channel */
1830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmarx != NULL)
 3383              		.loc 1 1830 13
 3384 005a 7B68     		ldr	r3, [r7, #4]
 3385 005c 5B6D     		ldr	r3, [r3, #84]
 3386              		.loc 1 1830 6
 3387 005e 002B     		cmp	r3, #0
 3388 0060 14D0     		beq	.L189
1831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_DMA_Abort(husart->hdmarx) != HAL_OK)
 3389              		.loc 1 1832 9
 3390 0062 7B68     		ldr	r3, [r7, #4]
 3391 0064 5B6D     		ldr	r3, [r3, #84]
 3392 0066 1846     		mov	r0, r3
 3393 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 3394 006c 0346     		mov	r3, r0
 3395              		.loc 1 1832 8
 3396 006e 002B     		cmp	r3, #0
 3397 0070 0CD0     		beq	.L189
1833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_GetError(husart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3398              		.loc 1 1834 11
 3399 0072 7B68     		ldr	r3, [r7, #4]
 3400 0074 5B6D     		ldr	r3, [r3, #84]
 3401 0076 1846     		mov	r0, r3
 3402 0078 FFF7FEFF 		bl	HAL_DMA_GetError
 3403 007c 0346     		mov	r3, r0
 3404              		.loc 1 1834 10
 3405 007e 202B     		cmp	r3, #32
 3406 0080 04D1     		bne	.L189
1835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Set error code to DMA */
1837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode = HAL_USART_ERROR_DMA;
 3407              		.loc 1 1837 27
 3408 0082 7B68     		ldr	r3, [r7, #4]
 3409 0084 1022     		movs	r2, #16
 3410 0086 DA65     		str	r2, [r3, #92]
1838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 3411              		.loc 1 1839 16
 3412 0088 0323     		movs	r3, #3
 3413 008a 07E0     		b	.L188
 3414              	.L189:
1840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_EndTransfer(husart);
 3415              		.loc 1 1844 3
 3416 008c 7868     		ldr	r0, [r7, #4]
 3417 008e FFF7FEFF 		bl	USART_EndTransfer
1845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 3418              		.loc 1 1845 17
ARM GAS  /tmp/ccUeuQwq.s 			page 93


 3419 0092 7B68     		ldr	r3, [r7, #4]
 3420 0094 0122     		movs	r2, #1
 3421 0096 83F85920 		strb	r2, [r3, #89]
1846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 3422              		.loc 1 1847 10
 3423 009a 0023     		movs	r3, #0
 3424              	.L188:
1848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3425              		.loc 1 1848 1
 3426 009c 1846     		mov	r0, r3
 3427 009e 0837     		adds	r7, r7, #8
 3428              	.LCFI85:
 3429              		.cfi_def_cfa_offset 8
 3430 00a0 BD46     		mov	sp, r7
 3431              	.LCFI86:
 3432              		.cfi_def_cfa_register 13
 3433              		@ sp needed
 3434 00a2 80BD     		pop	{r7, pc}
 3435              		.cfi_endproc
 3436              	.LFE346:
 3438              		.section	.text.HAL_USART_Abort,"ax",%progbits
 3439              		.align	1
 3440              		.global	HAL_USART_Abort
 3441              		.syntax unified
 3442              		.thumb
 3443              		.thumb_func
 3444              		.fpu fpv5-d16
 3446              	HAL_USART_Abort:
 3447              	.LFB347:
1849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         This procedure performs following operations :
1855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Disable USART Interrupts (Tx and Rx)
1856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Set handle State to READY
1859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort(USART_HandleTypeDef *husart)
1863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3448              		.loc 1 1863 1
 3449              		.cfi_startproc
 3450              		@ args = 0, pretend = 0, frame = 8
 3451              		@ frame_needed = 1, uses_anonymous_args = 0
 3452 0000 80B5     		push	{r7, lr}
 3453              	.LCFI87:
 3454              		.cfi_def_cfa_offset 8
 3455              		.cfi_offset 7, -8
 3456              		.cfi_offset 14, -4
 3457 0002 82B0     		sub	sp, sp, #8
 3458              	.LCFI88:
 3459              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccUeuQwq.s 			page 94


 3460 0004 00AF     		add	r7, sp, #0
 3461              	.LCFI89:
 3462              		.cfi_def_cfa_register 7
 3463 0006 7860     		str	r0, [r7, #4]
1864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, RXFT, TXFT, PE and ERR (Frame error, noise error, overrun error) in
1865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXF
 3464              		.loc 1 1865 3
 3465 0008 7B68     		ldr	r3, [r7, #4]
 3466 000a 1B68     		ldr	r3, [r3]
 3467 000c 1A68     		ldr	r2, [r3]
 3468 000e 7B68     		ldr	r3, [r7, #4]
 3469 0010 1B68     		ldr	r3, [r3]
 3470 0012 22F4F072 		bic	r2, r2, #480
 3471 0016 1A60     		str	r2, [r3]
1866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                     USART_CR1_TCIE));
1867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3472              		.loc 1 1867 3
 3473 0018 7B68     		ldr	r3, [r7, #4]
 3474 001a 1B68     		ldr	r3, [r3]
 3475 001c 9968     		ldr	r1, [r3, #8]
 3476 001e 7B68     		ldr	r3, [r7, #4]
 3477 0020 1A68     		ldr	r2, [r3]
 3478 0022 434B     		ldr	r3, .L195
 3479 0024 0B40     		ands	r3, r3, r1
 3480 0026 9360     		str	r3, [r2, #8]
1868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 3481              		.loc 1 1870 7
 3482 0028 7B68     		ldr	r3, [r7, #4]
 3483 002a 1B68     		ldr	r3, [r3]
 3484 002c 9B68     		ldr	r3, [r3, #8]
 3485 002e 03F08003 		and	r3, r3, #128
 3486              		.loc 1 1870 6
 3487 0032 802B     		cmp	r3, #128
 3488 0034 24D1     		bne	.L191
1871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3489              		.loc 1 1872 5
 3490 0036 7B68     		ldr	r3, [r7, #4]
 3491 0038 1B68     		ldr	r3, [r3]
 3492 003a 9A68     		ldr	r2, [r3, #8]
 3493 003c 7B68     		ldr	r3, [r7, #4]
 3494 003e 1B68     		ldr	r3, [r3]
 3495 0040 22F08002 		bic	r2, r2, #128
 3496 0044 9A60     		str	r2, [r3, #8]
1873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use blocking DMA Abort API (no callback) */
1875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmatx != NULL)
 3497              		.loc 1 1875 15
 3498 0046 7B68     		ldr	r3, [r7, #4]
 3499 0048 1B6D     		ldr	r3, [r3, #80]
 3500              		.loc 1 1875 8
 3501 004a 002B     		cmp	r3, #0
 3502 004c 18D0     		beq	.L191
1876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null.
ARM GAS  /tmp/ccUeuQwq.s 			page 95


1878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
 3503              		.loc 1 1879 13
 3504 004e 7B68     		ldr	r3, [r7, #4]
 3505 0050 1B6D     		ldr	r3, [r3, #80]
 3506              		.loc 1 1879 41
 3507 0052 0022     		movs	r2, #0
 3508 0054 1A65     		str	r2, [r3, #80]
1880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_Abort(husart->hdmatx) != HAL_OK)
 3509              		.loc 1 1881 11
 3510 0056 7B68     		ldr	r3, [r7, #4]
 3511 0058 1B6D     		ldr	r3, [r3, #80]
 3512 005a 1846     		mov	r0, r3
 3513 005c FFF7FEFF 		bl	HAL_DMA_Abort
 3514 0060 0346     		mov	r3, r0
 3515              		.loc 1 1881 10
 3516 0062 002B     		cmp	r3, #0
 3517 0064 0CD0     		beq	.L191
1882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (HAL_DMA_GetError(husart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3518              		.loc 1 1883 13
 3519 0066 7B68     		ldr	r3, [r7, #4]
 3520 0068 1B6D     		ldr	r3, [r3, #80]
 3521 006a 1846     		mov	r0, r3
 3522 006c FFF7FEFF 		bl	HAL_DMA_GetError
 3523 0070 0346     		mov	r3, r0
 3524              		.loc 1 1883 12
 3525 0072 202B     		cmp	r3, #32
 3526 0074 04D1     		bne	.L191
1884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Set error code to DMA */
1886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->ErrorCode = HAL_USART_ERROR_DMA;
 3527              		.loc 1 1886 29
 3528 0076 7B68     		ldr	r3, [r7, #4]
 3529 0078 1022     		movs	r2, #16
 3530 007a DA65     		str	r2, [r3, #92]
1887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           return HAL_TIMEOUT;
 3531              		.loc 1 1888 18
 3532 007c 0323     		movs	r3, #3
 3533 007e 52E0     		b	.L192
 3534              	.L191:
1889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
1895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 3535              		.loc 1 1895 7
 3536 0080 7B68     		ldr	r3, [r7, #4]
 3537 0082 1B68     		ldr	r3, [r3]
 3538 0084 9B68     		ldr	r3, [r3, #8]
 3539 0086 03F04003 		and	r3, r3, #64
 3540              		.loc 1 1895 6
 3541 008a 402B     		cmp	r3, #64
ARM GAS  /tmp/ccUeuQwq.s 			page 96


 3542 008c 24D1     		bne	.L193
1896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3543              		.loc 1 1897 5
 3544 008e 7B68     		ldr	r3, [r7, #4]
 3545 0090 1B68     		ldr	r3, [r3]
 3546 0092 9A68     		ldr	r2, [r3, #8]
 3547 0094 7B68     		ldr	r3, [r7, #4]
 3548 0096 1B68     		ldr	r3, [r3]
 3549 0098 22F04002 		bic	r2, r2, #64
 3550 009c 9A60     		str	r2, [r3, #8]
1898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use blocking DMA Abort API (no callback) */
1900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmarx != NULL)
 3551              		.loc 1 1900 15
 3552 009e 7B68     		ldr	r3, [r7, #4]
 3553 00a0 5B6D     		ldr	r3, [r3, #84]
 3554              		.loc 1 1900 8
 3555 00a2 002B     		cmp	r3, #0
 3556 00a4 18D0     		beq	.L193
1901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Set the USART DMA Abort callback to Null.
1903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          No call back execution at end of DMA abort procedure */
1904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
 3557              		.loc 1 1904 13
 3558 00a6 7B68     		ldr	r3, [r7, #4]
 3559 00a8 5B6D     		ldr	r3, [r3, #84]
 3560              		.loc 1 1904 41
 3561 00aa 0022     		movs	r2, #0
 3562 00ac 1A65     		str	r2, [r3, #80]
1905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_Abort(husart->hdmarx) != HAL_OK)
 3563              		.loc 1 1906 11
 3564 00ae 7B68     		ldr	r3, [r7, #4]
 3565 00b0 5B6D     		ldr	r3, [r3, #84]
 3566 00b2 1846     		mov	r0, r3
 3567 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 3568 00b8 0346     		mov	r3, r0
 3569              		.loc 1 1906 10
 3570 00ba 002B     		cmp	r3, #0
 3571 00bc 0CD0     		beq	.L193
1907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
1908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (HAL_DMA_GetError(husart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3572              		.loc 1 1908 13
 3573 00be 7B68     		ldr	r3, [r7, #4]
 3574 00c0 5B6D     		ldr	r3, [r3, #84]
 3575 00c2 1846     		mov	r0, r3
 3576 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 3577 00c8 0346     		mov	r3, r0
 3578              		.loc 1 1908 12
 3579 00ca 202B     		cmp	r3, #32
 3580 00cc 04D1     		bne	.L193
1909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
1910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Set error code to DMA */
1911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->ErrorCode = HAL_USART_ERROR_DMA;
 3581              		.loc 1 1911 29
 3582 00ce 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 97


 3583 00d0 1022     		movs	r2, #16
 3584 00d2 DA65     		str	r2, [r3, #92]
1912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           return HAL_TIMEOUT;
 3585              		.loc 1 1913 18
 3586 00d4 0323     		movs	r3, #3
 3587 00d6 26E0     		b	.L192
 3588              	.L193:
1914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
1915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
1916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Reset Tx and Rx transfer counters */
1920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxXferCount = 0U;
 3589              		.loc 1 1920 23
 3590 00d8 7B68     		ldr	r3, [r7, #4]
 3591 00da 0022     		movs	r2, #0
 3592 00dc DA85     		strh	r2, [r3, #46]	@ movhi
1921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxXferCount = 0U;
 3593              		.loc 1 1921 23
 3594 00de 7B68     		ldr	r3, [r7, #4]
 3595 00e0 0022     		movs	r2, #0
 3596 00e2 DA86     		strh	r2, [r3, #54]	@ movhi
1922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear the Error flags in the ICR register */
1924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF | USART_CLEAR_NEF | USART_CLEAR_PEF | USART_CLEAR
 3597              		.loc 1 1924 3
 3598 00e4 7B68     		ldr	r3, [r7, #4]
 3599 00e6 1B68     		ldr	r3, [r3]
 3600 00e8 0F22     		movs	r2, #15
 3601 00ea 1A62     		str	r2, [r3, #32]
1925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Flush the whole TX FIFO (if needed) */
1927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->FifoMode == USART_FIFOMODE_ENABLE)
 3602              		.loc 1 1927 13
 3603 00ec 7B68     		ldr	r3, [r7, #4]
 3604 00ee 5B6C     		ldr	r3, [r3, #68]
 3605              		.loc 1 1927 6
 3606 00f0 B3F1005F 		cmp	r3, #536870912
 3607 00f4 07D1     		bne	.L194
1928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 3608              		.loc 1 1929 5
 3609 00f6 7B68     		ldr	r3, [r7, #4]
 3610 00f8 1B68     		ldr	r3, [r3]
 3611 00fa 9A69     		ldr	r2, [r3, #24]
 3612 00fc 7B68     		ldr	r3, [r7, #4]
 3613 00fe 1B68     		ldr	r3, [r3]
 3614 0100 42F01002 		orr	r2, r2, #16
 3615 0104 9A61     		str	r2, [r3, #24]
 3616              	.L194:
1930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Discard the received data */
1933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 3617              		.loc 1 1933 3
ARM GAS  /tmp/ccUeuQwq.s 			page 98


 3618 0106 7B68     		ldr	r3, [r7, #4]
 3619 0108 1B68     		ldr	r3, [r3]
 3620 010a 9A69     		ldr	r2, [r3, #24]
 3621 010c 7B68     		ldr	r3, [r7, #4]
 3622 010e 1B68     		ldr	r3, [r3]
 3623 0110 42F00802 		orr	r2, r2, #8
 3624 0114 9A61     		str	r2, [r3, #24]
1934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Restore husart->State to Ready */
1936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
 3625              		.loc 1 1936 18
 3626 0116 7B68     		ldr	r3, [r7, #4]
 3627 0118 0122     		movs	r2, #1
 3628 011a 83F85920 		strb	r2, [r3, #89]
1937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Reset Handle ErrorCode to No Error */
1939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 3629              		.loc 1 1939 21
 3630 011e 7B68     		ldr	r3, [r7, #4]
 3631 0120 0022     		movs	r2, #0
 3632 0122 DA65     		str	r2, [r3, #92]
1940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 3633              		.loc 1 1941 10
 3634 0124 0023     		movs	r3, #0
 3635              	.L192:
1942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3636              		.loc 1 1942 1
 3637 0126 1846     		mov	r0, r3
 3638 0128 0837     		adds	r7, r7, #8
 3639              	.LCFI90:
 3640              		.cfi_def_cfa_offset 8
 3641 012a BD46     		mov	sp, r7
 3642              	.LCFI91:
 3643              		.cfi_def_cfa_register 13
 3644              		@ sp needed
 3645 012c 80BD     		pop	{r7, pc}
 3646              	.L196:
 3647 012e 00BF     		.align	2
 3648              	.L195:
 3649 0130 FEFF7FEF 		.word	-276824066
 3650              		.cfi_endproc
 3651              	.LFE347:
 3653              		.section	.text.HAL_USART_Abort_IT,"ax",%progbits
 3654              		.align	1
 3655              		.global	HAL_USART_Abort_IT
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3659              		.fpu fpv5-d16
 3661              	HAL_USART_Abort_IT:
 3662              	.LFB348:
1943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
1945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
1947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
ARM GAS  /tmp/ccUeuQwq.s 			page 99


1948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         This procedure performs following operations :
1949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Disable USART Interrupts (Tx and Rx)
1950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - Set handle State to READY
1953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *           - At abort completion, call user abort complete callback
1954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
1957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
1958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_StatusTypeDef HAL_USART_Abort_IT(USART_HandleTypeDef *husart)
1959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3663              		.loc 1 1959 1
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 16
 3666              		@ frame_needed = 1, uses_anonymous_args = 0
 3667 0000 80B5     		push	{r7, lr}
 3668              	.LCFI92:
 3669              		.cfi_def_cfa_offset 8
 3670              		.cfi_offset 7, -8
 3671              		.cfi_offset 14, -4
 3672 0002 84B0     		sub	sp, sp, #16
 3673              	.LCFI93:
 3674              		.cfi_def_cfa_offset 24
 3675 0004 00AF     		add	r7, sp, #0
 3676              	.LCFI94:
 3677              		.cfi_def_cfa_register 7
 3678 0006 7860     		str	r0, [r7, #4]
1960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t abortcplt = 1U;
 3679              		.loc 1 1960 12
 3680 0008 0123     		movs	r3, #1
 3681 000a FB60     		str	r3, [r7, #12]
1961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, RXFT, TXFT, PE and ERR (Frame error, noise error, overrun error) in
1963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXF
 3682              		.loc 1 1963 3
 3683 000c 7B68     		ldr	r3, [r7, #4]
 3684 000e 1B68     		ldr	r3, [r3]
 3685 0010 1A68     		ldr	r2, [r3]
 3686 0012 7B68     		ldr	r3, [r7, #4]
 3687 0014 1B68     		ldr	r3, [r3]
 3688 0016 22F4F072 		bic	r2, r2, #480
 3689 001a 1A60     		str	r2, [r3]
1964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                     USART_CR1_TCIE));
1965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 3690              		.loc 1 1965 3
 3691 001c 7B68     		ldr	r3, [r7, #4]
 3692 001e 1B68     		ldr	r3, [r3]
 3693 0020 9968     		ldr	r1, [r3, #8]
 3694 0022 7B68     		ldr	r3, [r7, #4]
 3695 0024 1A68     		ldr	r2, [r3]
 3696 0026 514B     		ldr	r3, .L209
 3697 0028 0B40     		ands	r3, r3, r1
 3698 002a 9360     		str	r3, [r2, #8]
1966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to USART Handle, DMA Abort complete callbacks s
1968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****      before any call to DMA Abort functions */
ARM GAS  /tmp/ccUeuQwq.s 			page 100


1969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA Tx Handle is valid */
1970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmatx != NULL)
 3699              		.loc 1 1970 13
 3700 002c 7B68     		ldr	r3, [r7, #4]
 3701 002e 1B6D     		ldr	r3, [r3, #80]
 3702              		.loc 1 1970 6
 3703 0030 002B     		cmp	r3, #0
 3704 0032 0FD0     		beq	.L198
1971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Tx request if enabled.
1973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****        Otherwise, set it to NULL */
1974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 3705              		.loc 1 1974 9
 3706 0034 7B68     		ldr	r3, [r7, #4]
 3707 0036 1B68     		ldr	r3, [r3]
 3708 0038 9B68     		ldr	r3, [r3, #8]
 3709 003a 03F08003 		and	r3, r3, #128
 3710              		.loc 1 1974 8
 3711 003e 802B     		cmp	r3, #128
 3712 0040 04D1     		bne	.L199
1975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = USART_DMATxAbortCallback;
 3713              		.loc 1 1976 13
 3714 0042 7B68     		ldr	r3, [r7, #4]
 3715 0044 1B6D     		ldr	r3, [r3, #80]
 3716              		.loc 1 1976 41
 3717 0046 4A4A     		ldr	r2, .L209+4
 3718 0048 1A65     		str	r2, [r3, #80]
 3719 004a 03E0     		b	.L198
 3720              	.L199:
1977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmatx->XferAbortCallback = NULL;
 3721              		.loc 1 1980 13
 3722 004c 7B68     		ldr	r3, [r7, #4]
 3723 004e 1B6D     		ldr	r3, [r3, #80]
 3724              		.loc 1 1980 41
 3725 0050 0022     		movs	r2, #0
 3726 0052 1A65     		str	r2, [r3, #80]
 3727              	.L198:
1981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA Rx Handle is valid */
1984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmarx != NULL)
 3728              		.loc 1 1984 13
 3729 0054 7B68     		ldr	r3, [r7, #4]
 3730 0056 5B6D     		ldr	r3, [r3, #84]
 3731              		.loc 1 1984 6
 3732 0058 002B     		cmp	r3, #0
 3733 005a 0FD0     		beq	.L200
1985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
1986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Set DMA Abort Complete callback if USART DMA Rx request if enabled.
1987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****        Otherwise, set it to NULL */
1988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 3734              		.loc 1 1988 9
 3735 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 101


 3736 005e 1B68     		ldr	r3, [r3]
 3737 0060 9B68     		ldr	r3, [r3, #8]
 3738 0062 03F04003 		and	r3, r3, #64
 3739              		.loc 1 1988 8
 3740 0066 402B     		cmp	r3, #64
 3741 0068 04D1     		bne	.L201
1989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = USART_DMARxAbortCallback;
 3742              		.loc 1 1990 13
 3743 006a 7B68     		ldr	r3, [r7, #4]
 3744 006c 5B6D     		ldr	r3, [r3, #84]
 3745              		.loc 1 1990 41
 3746 006e 414A     		ldr	r2, .L209+8
 3747 0070 1A65     		str	r2, [r3, #80]
 3748 0072 03E0     		b	.L200
 3749              	.L201:
1991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
1993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
1994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->hdmarx->XferAbortCallback = NULL;
 3750              		.loc 1 1994 13
 3751 0074 7B68     		ldr	r3, [r7, #4]
 3752 0076 5B6D     		ldr	r3, [r3, #84]
 3753              		.loc 1 1994 41
 3754 0078 0022     		movs	r2, #0
 3755 007a 1A65     		str	r2, [r3, #80]
 3756              	.L200:
1995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
1996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
1997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
1998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART DMA Tx request if enabled */
1999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAT))
 3757              		.loc 1 1999 7
 3758 007c 7B68     		ldr	r3, [r7, #4]
 3759 007e 1B68     		ldr	r3, [r3]
 3760 0080 9B68     		ldr	r3, [r3, #8]
 3761 0082 03F08003 		and	r3, r3, #128
 3762              		.loc 1 1999 6
 3763 0086 802B     		cmp	r3, #128
 3764 0088 1AD1     		bne	.L202
2000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Disable DMA Tx at USART level */
2002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 3765              		.loc 1 2002 5
 3766 008a 7B68     		ldr	r3, [r7, #4]
 3767 008c 1B68     		ldr	r3, [r3]
 3768 008e 9A68     		ldr	r2, [r3, #8]
 3769 0090 7B68     		ldr	r3, [r7, #4]
 3770 0092 1B68     		ldr	r3, [r3]
 3771 0094 22F08002 		bic	r2, r2, #128
 3772 0098 9A60     		str	r2, [r3, #8]
2003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Abort the USART DMA Tx channel : use non blocking DMA Abort API (callback) */
2005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmatx != NULL)
 3773              		.loc 1 2005 15
 3774 009a 7B68     		ldr	r3, [r7, #4]
 3775 009c 1B6D     		ldr	r3, [r3, #80]
ARM GAS  /tmp/ccUeuQwq.s 			page 102


 3776              		.loc 1 2005 8
 3777 009e 002B     		cmp	r3, #0
 3778 00a0 0ED0     		beq	.L202
2006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* USART Tx DMA Abort callback has already been initialised :
2008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
2009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Abort DMA TX */
2011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_Abort_IT(husart->hdmatx) != HAL_OK)
 3779              		.loc 1 2011 11
 3780 00a2 7B68     		ldr	r3, [r7, #4]
 3781 00a4 1B6D     		ldr	r3, [r3, #80]
 3782 00a6 1846     		mov	r0, r3
 3783 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3784 00ac 0346     		mov	r3, r0
 3785              		.loc 1 2011 10
 3786 00ae 002B     		cmp	r3, #0
 3787 00b0 04D0     		beq	.L203
2012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->hdmatx->XferAbortCallback = NULL;
 3788              		.loc 1 2013 15
 3789 00b2 7B68     		ldr	r3, [r7, #4]
 3790 00b4 1B6D     		ldr	r3, [r3, #80]
 3791              		.loc 1 2013 43
 3792 00b6 0022     		movs	r2, #0
 3793 00b8 1A65     		str	r2, [r3, #80]
 3794 00ba 01E0     		b	.L202
 3795              	.L203:
2014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
2016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         abortcplt = 0U;
 3796              		.loc 1 2017 19
 3797 00bc 0023     		movs	r3, #0
 3798 00be FB60     		str	r3, [r7, #12]
 3799              	.L202:
2018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART DMA Rx request if enabled */
2023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 3800              		.loc 1 2023 7
 3801 00c0 7B68     		ldr	r3, [r7, #4]
 3802 00c2 1B68     		ldr	r3, [r3]
 3803 00c4 9B68     		ldr	r3, [r3, #8]
 3804 00c6 03F04003 		and	r3, r3, #64
 3805              		.loc 1 2023 6
 3806 00ca 402B     		cmp	r3, #64
 3807 00cc 1CD1     		bne	.L204
2024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 3808              		.loc 1 2025 5
 3809 00ce 7B68     		ldr	r3, [r7, #4]
 3810 00d0 1B68     		ldr	r3, [r3]
 3811 00d2 9A68     		ldr	r2, [r3, #8]
 3812 00d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 103


 3813 00d6 1B68     		ldr	r3, [r3]
 3814 00d8 22F04002 		bic	r2, r2, #64
 3815 00dc 9A60     		str	r2, [r3, #8]
2026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Abort the USART DMA Rx channel : use non blocking DMA Abort API (callback) */
2028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmarx != NULL)
 3816              		.loc 1 2028 15
 3817 00de 7B68     		ldr	r3, [r7, #4]
 3818 00e0 5B6D     		ldr	r3, [r3, #84]
 3819              		.loc 1 2028 8
 3820 00e2 002B     		cmp	r3, #0
 3821 00e4 10D0     		beq	.L204
2029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* USART Rx DMA Abort callback has already been initialised :
2031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          will lead to call HAL_USART_AbortCpltCallback() at end of DMA abort procedure */
2032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Abort DMA RX */
2034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
 3822              		.loc 1 2034 11
 3823 00e6 7B68     		ldr	r3, [r7, #4]
 3824 00e8 5B6D     		ldr	r3, [r3, #84]
 3825 00ea 1846     		mov	r0, r3
 3826 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3827 00f0 0346     		mov	r3, r0
 3828              		.loc 1 2034 10
 3829 00f2 002B     		cmp	r3, #0
 3830 00f4 06D0     		beq	.L205
2035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->hdmarx->XferAbortCallback = NULL;
 3831              		.loc 1 2036 15
 3832 00f6 7B68     		ldr	r3, [r7, #4]
 3833 00f8 5B6D     		ldr	r3, [r3, #84]
 3834              		.loc 1 2036 43
 3835 00fa 0022     		movs	r2, #0
 3836 00fc 1A65     		str	r2, [r3, #80]
2037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         abortcplt = 1U;
 3837              		.loc 1 2037 19
 3838 00fe 0123     		movs	r3, #1
 3839 0100 FB60     		str	r3, [r7, #12]
 3840 0102 01E0     		b	.L204
 3841              	.L205:
2038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
2040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         abortcplt = 0U;
 3842              		.loc 1 2041 19
 3843 0104 0023     		movs	r3, #0
 3844 0106 FB60     		str	r3, [r7, #12]
 3845              	.L204:
2042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (abortcplt == 1U)
 3846              		.loc 1 2047 6
 3847 0108 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccUeuQwq.s 			page 104


 3848 010a 012B     		cmp	r3, #1
 3849 010c 28D1     		bne	.L206
2048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Reset Tx and Rx transfer counters */
2050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = 0U;
 3850              		.loc 1 2050 25
 3851 010e 7B68     		ldr	r3, [r7, #4]
 3852 0110 0022     		movs	r2, #0
 3853 0112 DA85     		strh	r2, [r3, #46]	@ movhi
2051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = 0U;
 3854              		.loc 1 2051 25
 3855 0114 7B68     		ldr	r3, [r7, #4]
 3856 0116 0022     		movs	r2, #0
 3857 0118 DA86     		strh	r2, [r3, #54]	@ movhi
2052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Reset errorCode */
2054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->ErrorCode = HAL_USART_ERROR_NONE;
 3858              		.loc 1 2054 23
 3859 011a 7B68     		ldr	r3, [r7, #4]
 3860 011c 0022     		movs	r2, #0
 3861 011e DA65     		str	r2, [r3, #92]
2055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear the Error flags in the ICR register */
2057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF | USART_CLEAR_NEF | USART_CLEAR_PEF | USART_CLE
 3862              		.loc 1 2057 5
 3863 0120 7B68     		ldr	r3, [r7, #4]
 3864 0122 1B68     		ldr	r3, [r3]
 3865 0124 0F22     		movs	r2, #15
 3866 0126 1A62     		str	r2, [r3, #32]
2058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Flush the whole TX FIFO (if needed) */
2060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->FifoMode == USART_FIFOMODE_ENABLE)
 3867              		.loc 1 2060 15
 3868 0128 7B68     		ldr	r3, [r7, #4]
 3869 012a 5B6C     		ldr	r3, [r3, #68]
 3870              		.loc 1 2060 8
 3871 012c B3F1005F 		cmp	r3, #536870912
 3872 0130 07D1     		bne	.L207
2061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 3873              		.loc 1 2062 7
 3874 0132 7B68     		ldr	r3, [r7, #4]
 3875 0134 1B68     		ldr	r3, [r3]
 3876 0136 9A69     		ldr	r2, [r3, #24]
 3877 0138 7B68     		ldr	r3, [r7, #4]
 3878 013a 1B68     		ldr	r3, [r3]
 3879 013c 42F01002 		orr	r2, r2, #16
 3880 0140 9A61     		str	r2, [r3, #24]
 3881              	.L207:
2063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Discard the received data */
2066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 3882              		.loc 1 2066 5
 3883 0142 7B68     		ldr	r3, [r7, #4]
 3884 0144 1B68     		ldr	r3, [r3]
 3885 0146 9A69     		ldr	r2, [r3, #24]
ARM GAS  /tmp/ccUeuQwq.s 			page 105


 3886 0148 7B68     		ldr	r3, [r7, #4]
 3887 014a 1B68     		ldr	r3, [r3]
 3888 014c 42F00802 		orr	r2, r2, #8
 3889 0150 9A61     		str	r2, [r3, #24]
2067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Restore husart->State to Ready */
2069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State  = HAL_USART_STATE_READY;
 3890              		.loc 1 2069 20
 3891 0152 7B68     		ldr	r3, [r7, #4]
 3892 0154 0122     		movs	r2, #1
 3893 0156 83F85920 		strb	r2, [r3, #89]
2070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call registered Abort Complete Callback */
2074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->AbortCpltCallback(husart);
2075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call legacy weak Abort Complete Callback */
2077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USART_AbortCpltCallback(husart);
 3894              		.loc 1 2077 5
 3895 015a 7868     		ldr	r0, [r7, #4]
 3896 015c FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 3897              	.L206:
2078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 3898              		.loc 1 2081 10
 3899 0160 0023     		movs	r3, #0
2082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 3900              		.loc 1 2082 1
 3901 0162 1846     		mov	r0, r3
 3902 0164 1037     		adds	r7, r7, #16
 3903              	.LCFI95:
 3904              		.cfi_def_cfa_offset 8
 3905 0166 BD46     		mov	sp, r7
 3906              	.LCFI96:
 3907              		.cfi_def_cfa_register 13
 3908              		@ sp needed
 3909 0168 80BD     		pop	{r7, pc}
 3910              	.L210:
 3911 016a 00BF     		.align	2
 3912              	.L209:
 3913 016c FEFF7FEF 		.word	-276824066
 3914 0170 00000000 		.word	USART_DMATxAbortCallback
 3915 0174 00000000 		.word	USART_DMARxAbortCallback
 3916              		.cfi_endproc
 3917              	.LFE348:
 3919              		.section	.text.HAL_USART_IRQHandler,"ax",%progbits
 3920              		.align	1
 3921              		.global	HAL_USART_IRQHandler
 3922              		.syntax unified
 3923              		.thumb
 3924              		.thumb_func
 3925              		.fpu fpv5-d16
 3927              	HAL_USART_IRQHandler:
 3928              	.LFB349:
ARM GAS  /tmp/ccUeuQwq.s 			page 106


2083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Handle USART interrupt request.
2086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
2087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** void HAL_USART_IRQHandler(USART_HandleTypeDef *husart)
2090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 3929              		.loc 1 2090 1
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 32
 3932              		@ frame_needed = 1, uses_anonymous_args = 0
 3933 0000 80B5     		push	{r7, lr}
 3934              	.LCFI97:
 3935              		.cfi_def_cfa_offset 8
 3936              		.cfi_offset 7, -8
 3937              		.cfi_offset 14, -4
 3938 0002 88B0     		sub	sp, sp, #32
 3939              	.LCFI98:
 3940              		.cfi_def_cfa_offset 40
 3941 0004 00AF     		add	r7, sp, #0
 3942              	.LCFI99:
 3943              		.cfi_def_cfa_register 7
 3944 0006 7860     		str	r0, [r7, #4]
2091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t isrflags   = READ_REG(husart->Instance->ISR);
 3945              		.loc 1 2091 25
 3946 0008 7B68     		ldr	r3, [r7, #4]
 3947 000a 1B68     		ldr	r3, [r3]
 3948              		.loc 1 2091 12
 3949 000c DB69     		ldr	r3, [r3, #28]
 3950 000e FB61     		str	r3, [r7, #28]
2092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t cr1its     = READ_REG(husart->Instance->CR1);
 3951              		.loc 1 2092 25
 3952 0010 7B68     		ldr	r3, [r7, #4]
 3953 0012 1B68     		ldr	r3, [r3]
 3954              		.loc 1 2092 12
 3955 0014 1B68     		ldr	r3, [r3]
 3956 0016 BB61     		str	r3, [r7, #24]
2093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t cr3its     = READ_REG(husart->Instance->CR3);
 3957              		.loc 1 2093 25
 3958 0018 7B68     		ldr	r3, [r7, #4]
 3959 001a 1B68     		ldr	r3, [r3]
 3960              		.loc 1 2093 12
 3961 001c 9B68     		ldr	r3, [r3, #8]
 3962 001e 7B61     		str	r3, [r7, #20]
2094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t errorflags;
2096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t errorcode;
2097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* If no error occurs */
2099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
 3963              		.loc 1 2099 14
 3964 0020 FA69     		ldr	r2, [r7, #28]
 3965 0022 42F60F03 		movw	r3, #10255
 3966 0026 1340     		ands	r3, r3, r2
 3967 0028 3B61     		str	r3, [r7, #16]
2100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                       USART_ISR_UDR));
ARM GAS  /tmp/ccUeuQwq.s 			page 107


2101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (errorflags == 0U)
 3968              		.loc 1 2101 6
 3969 002a 3B69     		ldr	r3, [r7, #16]
 3970 002c 002B     		cmp	r3, #0
 3971 002e 18D1     		bne	.L212
2102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART in mode Receiver ---------------------------------------------------*/
2104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 3972              		.loc 1 2104 20
 3973 0030 FB69     		ldr	r3, [r7, #28]
 3974 0032 03F02003 		and	r3, r3, #32
 3975              		.loc 1 2104 8
 3976 0036 002B     		cmp	r3, #0
 3977 0038 13D0     		beq	.L212
2105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 3978              		.loc 1 2105 22
 3979 003a BB69     		ldr	r3, [r7, #24]
 3980 003c 03F02003 		and	r3, r3, #32
 3981              		.loc 1 2105 9
 3982 0040 002B     		cmp	r3, #0
 3983 0042 04D1     		bne	.L213
2106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 3984              		.loc 1 2106 25
 3985 0044 7B69     		ldr	r3, [r7, #20]
 3986 0046 03F08053 		and	r3, r3, #268435456
 3987              		.loc 1 2106 13
 3988 004a 002B     		cmp	r3, #0
 3989 004c 09D0     		beq	.L212
 3990              	.L213:
2107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->RxISR != NULL)
 3991              		.loc 1 2108 17
 3992 004e 7B68     		ldr	r3, [r7, #4]
 3993 0050 9B6C     		ldr	r3, [r3, #72]
 3994              		.loc 1 2108 10
 3995 0052 002B     		cmp	r3, #0
 3996 0054 00F05681 		beq	.L240
2109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxISR(husart);
 3997              		.loc 1 2110 15
 3998 0058 7B68     		ldr	r3, [r7, #4]
 3999 005a 9B6C     		ldr	r3, [r3, #72]
 4000              		.loc 1 2110 9
 4001 005c 7868     		ldr	r0, [r7, #4]
 4002 005e 9847     		blx	r3
 4003              	.LVL0:
2111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return;
 4004              		.loc 1 2112 7
 4005 0060 50E1     		b	.L240
 4006              	.L212:
2113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* If some errors occur */
2117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((errorflags != 0U)
 4007              		.loc 1 2117 6
ARM GAS  /tmp/ccUeuQwq.s 			page 108


 4008 0062 3B69     		ldr	r3, [r7, #16]
 4009 0064 002B     		cmp	r3, #0
 4010 0066 00F00981 		beq	.L216
2118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       && (((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 4011              		.loc 1 2118 20
 4012 006a 7A69     		ldr	r2, [r7, #20]
 4013 006c A34B     		ldr	r3, .L244
 4014 006e 1340     		ands	r3, r3, r2
 4015              		.loc 1 2118 7
 4016 0070 002B     		cmp	r3, #0
 4017 0072 05D1     		bne	.L217
2119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U)))
 4018              		.loc 1 2119 23
 4019 0074 BB69     		ldr	r3, [r7, #24]
 4020 0076 03F49073 		and	r3, r3, #288
 4021              		.loc 1 2119 11
 4022 007a 002B     		cmp	r3, #0
 4023 007c 00F0FE80 		beq	.L216
 4024              	.L217:
2120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART parity error interrupt occurred -------------------------------------*/
2122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 4025              		.loc 1 2122 20
 4026 0080 FB69     		ldr	r3, [r7, #28]
 4027 0082 03F00103 		and	r3, r3, #1
 4028              		.loc 1 2122 8
 4029 0086 002B     		cmp	r3, #0
 4030 0088 0ED0     		beq	.L218
 4031              		.loc 1 2122 55 discriminator 1
 4032 008a BB69     		ldr	r3, [r7, #24]
 4033 008c 03F48073 		and	r3, r3, #256
 4034              		.loc 1 2122 43 discriminator 1
 4035 0090 002B     		cmp	r3, #0
 4036 0092 09D0     		beq	.L218
2123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_IT(husart, USART_CLEAR_PEF);
 4037              		.loc 1 2124 7
 4038 0094 7B68     		ldr	r3, [r7, #4]
 4039 0096 1B68     		ldr	r3, [r3]
 4040 0098 0122     		movs	r2, #1
 4041 009a 1A62     		str	r2, [r3, #32]
2125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_PE;
 4042              		.loc 1 2126 25
 4043 009c 7B68     		ldr	r3, [r7, #4]
 4044 009e DB6D     		ldr	r3, [r3, #92]
 4045 00a0 43F00102 		orr	r2, r3, #1
 4046 00a4 7B68     		ldr	r3, [r7, #4]
 4047 00a6 DA65     		str	r2, [r3, #92]
 4048              	.L218:
2127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART frame error interrupt occurred --------------------------------------*/
2130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 4049              		.loc 1 2130 20
 4050 00a8 FB69     		ldr	r3, [r7, #28]
 4051 00aa 03F00203 		and	r3, r3, #2
ARM GAS  /tmp/ccUeuQwq.s 			page 109


 4052              		.loc 1 2130 8
 4053 00ae 002B     		cmp	r3, #0
 4054 00b0 0ED0     		beq	.L219
 4055              		.loc 1 2130 55 discriminator 1
 4056 00b2 7B69     		ldr	r3, [r7, #20]
 4057 00b4 03F00103 		and	r3, r3, #1
 4058              		.loc 1 2130 43 discriminator 1
 4059 00b8 002B     		cmp	r3, #0
 4060 00ba 09D0     		beq	.L219
2131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_IT(husart, USART_CLEAR_FEF);
 4061              		.loc 1 2132 7
 4062 00bc 7B68     		ldr	r3, [r7, #4]
 4063 00be 1B68     		ldr	r3, [r3]
 4064 00c0 0222     		movs	r2, #2
 4065 00c2 1A62     		str	r2, [r3, #32]
2133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_FE;
 4066              		.loc 1 2134 25
 4067 00c4 7B68     		ldr	r3, [r7, #4]
 4068 00c6 DB6D     		ldr	r3, [r3, #92]
 4069 00c8 43F00402 		orr	r2, r3, #4
 4070 00cc 7B68     		ldr	r3, [r7, #4]
 4071 00ce DA65     		str	r2, [r3, #92]
 4072              	.L219:
2135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART noise error interrupt occurred --------------------------------------*/
2138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 4073              		.loc 1 2138 20
 4074 00d0 FB69     		ldr	r3, [r7, #28]
 4075 00d2 03F00403 		and	r3, r3, #4
 4076              		.loc 1 2138 8
 4077 00d6 002B     		cmp	r3, #0
 4078 00d8 0ED0     		beq	.L220
 4079              		.loc 1 2138 55 discriminator 1
 4080 00da 7B69     		ldr	r3, [r7, #20]
 4081 00dc 03F00103 		and	r3, r3, #1
 4082              		.loc 1 2138 43 discriminator 1
 4083 00e0 002B     		cmp	r3, #0
 4084 00e2 09D0     		beq	.L220
2139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_IT(husart, USART_CLEAR_NEF);
 4085              		.loc 1 2140 7
 4086 00e4 7B68     		ldr	r3, [r7, #4]
 4087 00e6 1B68     		ldr	r3, [r3]
 4088 00e8 0422     		movs	r2, #4
 4089 00ea 1A62     		str	r2, [r3, #32]
2141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_NE;
 4090              		.loc 1 2142 25
 4091 00ec 7B68     		ldr	r3, [r7, #4]
 4092 00ee DB6D     		ldr	r3, [r3, #92]
 4093 00f0 43F00202 		orr	r2, r3, #2
 4094 00f4 7B68     		ldr	r3, [r7, #4]
 4095 00f6 DA65     		str	r2, [r3, #92]
 4096              	.L220:
ARM GAS  /tmp/ccUeuQwq.s 			page 110


2143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART Over-Run interrupt occurred -----------------------------------------*/
2146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 4097              		.loc 1 2146 20
 4098 00f8 FB69     		ldr	r3, [r7, #28]
 4099 00fa 03F00803 		and	r3, r3, #8
 4100              		.loc 1 2146 8
 4101 00fe 002B     		cmp	r3, #0
 4102 0100 13D0     		beq	.L221
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 4103              		.loc 1 2147 22
 4104 0102 BB69     		ldr	r3, [r7, #24]
 4105 0104 03F02003 		and	r3, r3, #32
 4106              		.loc 1 2147 9
 4107 0108 002B     		cmp	r3, #0
 4108 010a 04D1     		bne	.L222
2148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 4109              		.loc 1 2148 22 discriminator 1
 4110 010c 7A69     		ldr	r2, [r7, #20]
 4111 010e 7B4B     		ldr	r3, .L244
 4112 0110 1340     		ands	r3, r3, r2
2147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 4113              		.loc 1 2147 57 discriminator 1
 4114 0112 002B     		cmp	r3, #0
 4115 0114 09D0     		beq	.L221
 4116              	.L222:
2149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_IT(husart, USART_CLEAR_OREF);
 4117              		.loc 1 2150 7
 4118 0116 7B68     		ldr	r3, [r7, #4]
 4119 0118 1B68     		ldr	r3, [r3]
 4120 011a 0822     		movs	r2, #8
 4121 011c 1A62     		str	r2, [r3, #32]
2151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_ORE;
 4122              		.loc 1 2152 25
 4123 011e 7B68     		ldr	r3, [r7, #4]
 4124 0120 DB6D     		ldr	r3, [r3, #92]
 4125 0122 43F00802 		orr	r2, r3, #8
 4126 0126 7B68     		ldr	r3, [r7, #4]
 4127 0128 DA65     		str	r2, [r3, #92]
 4128              	.L221:
2153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART Receiver Timeout interrupt occurred ---------------------------------*/
2156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
 4129              		.loc 1 2156 20
 4130 012a FB69     		ldr	r3, [r7, #28]
 4131 012c 03F40063 		and	r3, r3, #2048
 4132              		.loc 1 2156 8
 4133 0130 002B     		cmp	r3, #0
 4134 0132 0FD0     		beq	.L223
 4135              		.loc 1 2156 57 discriminator 1
 4136 0134 BB69     		ldr	r3, [r7, #24]
 4137 0136 03F08063 		and	r3, r3, #67108864
 4138              		.loc 1 2156 45 discriminator 1
ARM GAS  /tmp/ccUeuQwq.s 			page 111


 4139 013a 002B     		cmp	r3, #0
 4140 013c 0AD0     		beq	.L223
2157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_CLEAR_IT(husart, USART_CLEAR_RTOF);
 4141              		.loc 1 2158 7
 4142 013e 7B68     		ldr	r3, [r7, #4]
 4143 0140 1B68     		ldr	r3, [r3]
 4144 0142 4FF40062 		mov	r2, #2048
 4145 0146 1A62     		str	r2, [r3, #32]
2159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->ErrorCode |= HAL_USART_ERROR_RTO;
 4146              		.loc 1 2160 25
 4147 0148 7B68     		ldr	r3, [r7, #4]
 4148 014a DB6D     		ldr	r3, [r3, #92]
 4149 014c 43F08002 		orr	r2, r3, #128
 4150 0150 7B68     		ldr	r3, [r7, #4]
 4151 0152 DA65     		str	r2, [r3, #92]
 4152              	.L223:
2161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* USART SPI slave underrun error interrupt occurred -------------------------*/
2164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((isrflags & USART_ISR_UDR) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 4153              		.loc 1 2164 20
 4154 0154 FB69     		ldr	r3, [r7, #28]
 4155 0156 03F40053 		and	r3, r3, #8192
 4156              		.loc 1 2164 8
 4157 015a 002B     		cmp	r3, #0
 4158 015c 1BD0     		beq	.L224
 4159              		.loc 1 2164 56 discriminator 1
 4160 015e 7B69     		ldr	r3, [r7, #20]
 4161 0160 03F00103 		and	r3, r3, #1
 4162              		.loc 1 2164 44 discriminator 1
 4163 0164 002B     		cmp	r3, #0
 4164 0166 16D0     		beq	.L224
2165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Ignore SPI slave underrun errors when reception is going on */
2167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->State == HAL_USART_STATE_BUSY_RX)
 4165              		.loc 1 2167 17
 4166 0168 7B68     		ldr	r3, [r7, #4]
 4167 016a 93F85930 		ldrb	r3, [r3, #89]
 4168 016e DBB2     		uxtb	r3, r3
 4169              		.loc 1 2167 10
 4170 0170 222B     		cmp	r3, #34
 4171 0172 05D1     		bne	.L225
2168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_CLEAR_UDRFLAG(husart);
 4172              		.loc 1 2169 9
 4173 0174 7B68     		ldr	r3, [r7, #4]
 4174 0176 1B68     		ldr	r3, [r3]
 4175 0178 4FF40052 		mov	r2, #8192
 4176 017c 1A62     		str	r2, [r3, #32]
2170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return;
 4177              		.loc 1 2170 9
 4178 017e C6E0     		b	.L211
 4179              	.L225:
2171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
ARM GAS  /tmp/ccUeuQwq.s 			page 112


2173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_CLEAR_UDRFLAG(husart);
 4180              		.loc 1 2174 9
 4181 0180 7B68     		ldr	r3, [r7, #4]
 4182 0182 1B68     		ldr	r3, [r3]
 4183 0184 4FF40052 		mov	r2, #8192
 4184 0188 1A62     		str	r2, [r3, #32]
2175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode |= HAL_USART_ERROR_UDR;
 4185              		.loc 1 2175 27
 4186 018a 7B68     		ldr	r3, [r7, #4]
 4187 018c DB6D     		ldr	r3, [r3, #92]
 4188 018e 43F02002 		orr	r2, r3, #32
 4189 0192 7B68     		ldr	r3, [r7, #4]
 4190 0194 DA65     		str	r2, [r3, #92]
 4191              	.L224:
2176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call USART Error Call back function if need be --------------------------*/
2180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->ErrorCode != HAL_USART_ERROR_NONE)
 4192              		.loc 1 2180 15
 4193 0196 7B68     		ldr	r3, [r7, #4]
 4194 0198 DB6D     		ldr	r3, [r3, #92]
 4195              		.loc 1 2180 8
 4196 019a 002B     		cmp	r3, #0
 4197 019c 00F0B480 		beq	.L241
2181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* USART in mode Receiver ---------------------------------------------------*/
2183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
 4198              		.loc 1 2183 22
 4199 01a0 FB69     		ldr	r3, [r7, #28]
 4200 01a2 03F02003 		and	r3, r3, #32
 4201              		.loc 1 2183 10
 4202 01a6 002B     		cmp	r3, #0
 4203 01a8 11D0     		beq	.L227
2184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 4204              		.loc 1 2184 24
 4205 01aa BB69     		ldr	r3, [r7, #24]
 4206 01ac 03F02003 		and	r3, r3, #32
 4207              		.loc 1 2184 11
 4208 01b0 002B     		cmp	r3, #0
 4209 01b2 04D1     		bne	.L228
2185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 4210              		.loc 1 2185 27
 4211 01b4 7B69     		ldr	r3, [r7, #20]
 4212 01b6 03F08053 		and	r3, r3, #268435456
 4213              		.loc 1 2185 15
 4214 01ba 002B     		cmp	r3, #0
 4215 01bc 07D0     		beq	.L227
 4216              	.L228:
2186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (husart->RxISR != NULL)
 4217              		.loc 1 2187 19
 4218 01be 7B68     		ldr	r3, [r7, #4]
 4219 01c0 9B6C     		ldr	r3, [r3, #72]
 4220              		.loc 1 2187 12
 4221 01c2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccUeuQwq.s 			page 113


 4222 01c4 03D0     		beq	.L227
2188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
2189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->RxISR(husart);
 4223              		.loc 1 2189 17
 4224 01c6 7B68     		ldr	r3, [r7, #4]
 4225 01c8 9B6C     		ldr	r3, [r3, #72]
 4226              		.loc 1 2189 11
 4227 01ca 7868     		ldr	r0, [r7, #4]
 4228 01cc 9847     		blx	r3
 4229              	.LVL1:
 4230              	.L227:
2190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
2191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          consider error as blocking */
2195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       errorcode = husart->ErrorCode & HAL_USART_ERROR_ORE;
 4231              		.loc 1 2195 25
 4232 01ce 7B68     		ldr	r3, [r7, #4]
 4233 01d0 DB6D     		ldr	r3, [r3, #92]
 4234              		.loc 1 2195 17
 4235 01d2 03F00803 		and	r3, r3, #8
 4236 01d6 FB60     		str	r3, [r7, #12]
2196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR)) ||
 4237              		.loc 1 2196 12
 4238 01d8 7B68     		ldr	r3, [r7, #4]
 4239 01da 1B68     		ldr	r3, [r3]
 4240 01dc 9B68     		ldr	r3, [r3, #8]
 4241 01de 03F04003 		and	r3, r3, #64
 4242              		.loc 1 2196 10
 4243 01e2 402B     		cmp	r3, #64
 4244 01e4 02D0     		beq	.L229
 4245              		.loc 1 2196 67 discriminator 1
 4246 01e6 FB68     		ldr	r3, [r7, #12]
 4247 01e8 002B     		cmp	r3, #0
 4248 01ea 3ED0     		beq	.L230
 4249              	.L229:
2197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (errorcode != 0U))
2198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Blocking error : transfer is aborted
2200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            Set the USART state ready to be able to start again the process,
2201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            Disable Interrupts, and disable DMA requests, if ongoing */
2202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         USART_EndTransfer(husart);
 4250              		.loc 1 2202 9
 4251 01ec 7868     		ldr	r0, [r7, #4]
 4252 01ee FFF7FEFF 		bl	USART_EndTransfer
2203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Disable the USART DMA Rx request if enabled */
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (HAL_IS_BIT_SET(husart->Instance->CR3, USART_CR3_DMAR))
 4253              		.loc 1 2205 13
 4254 01f2 7B68     		ldr	r3, [r7, #4]
 4255 01f4 1B68     		ldr	r3, [r3]
 4256 01f6 9B68     		ldr	r3, [r3, #8]
 4257 01f8 03F04003 		and	r3, r3, #64
 4258              		.loc 1 2205 12
 4259 01fc 402B     		cmp	r3, #64
 4260 01fe 30D1     		bne	.L231
ARM GAS  /tmp/ccUeuQwq.s 			page 114


2206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
2207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR | USART_CR3_DMAR);
 4261              		.loc 1 2207 11
 4262 0200 7B68     		ldr	r3, [r7, #4]
 4263 0202 1B68     		ldr	r3, [r3]
 4264 0204 9A68     		ldr	r2, [r3, #8]
 4265 0206 7B68     		ldr	r3, [r7, #4]
 4266 0208 1B68     		ldr	r3, [r3]
 4267 020a 22F04002 		bic	r2, r2, #64
 4268 020e 9A60     		str	r2, [r3, #8]
2208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Abort the USART DMA Tx channel */
2210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           if (husart->hdmatx != NULL)
 4269              		.loc 1 2210 21
 4270 0210 7B68     		ldr	r3, [r7, #4]
 4271 0212 1B6D     		ldr	r3, [r3, #80]
 4272              		.loc 1 2210 14
 4273 0214 002B     		cmp	r3, #0
 4274 0216 08D0     		beq	.L232
2211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
2212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Set the USART Tx DMA Abort callback to NULL : no callback
2213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                executed at end of DMA abort procedure */
2214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->hdmatx->XferAbortCallback = NULL;
 4275              		.loc 1 2214 19
 4276 0218 7B68     		ldr	r3, [r7, #4]
 4277 021a 1B6D     		ldr	r3, [r3, #80]
 4278              		.loc 1 2214 47
 4279 021c 0022     		movs	r2, #0
 4280 021e 1A65     		str	r2, [r3, #80]
2215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Abort DMA TX */
2217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             (void)HAL_DMA_Abort_IT(husart->hdmatx);
 4281              		.loc 1 2217 19
 4282 0220 7B68     		ldr	r3, [r7, #4]
 4283 0222 1B6D     		ldr	r3, [r3, #80]
 4284 0224 1846     		mov	r0, r3
 4285 0226 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4286              	.L232:
2218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
2219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Abort the USART DMA Rx channel */
2221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           if (husart->hdmarx != NULL)
 4287              		.loc 1 2221 21
 4288 022a 7B68     		ldr	r3, [r7, #4]
 4289 022c 5B6D     		ldr	r3, [r3, #84]
 4290              		.loc 1 2221 14
 4291 022e 002B     		cmp	r3, #0
 4292 0230 13D0     		beq	.L233
2222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
2223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Set the USART Rx DMA Abort callback :
2224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                will lead to call HAL_USART_ErrorCallback() at end of DMA abort procedure */
2225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->hdmarx->XferAbortCallback = USART_DMAAbortOnError;
 4293              		.loc 1 2225 19
 4294 0232 7B68     		ldr	r3, [r7, #4]
 4295 0234 5B6D     		ldr	r3, [r3, #84]
 4296              		.loc 1 2225 47
 4297 0236 324A     		ldr	r2, .L244+4
ARM GAS  /tmp/ccUeuQwq.s 			page 115


 4298 0238 1A65     		str	r2, [r3, #80]
2226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Abort DMA RX */
2228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             if (HAL_DMA_Abort_IT(husart->hdmarx) != HAL_OK)
 4299              		.loc 1 2228 17
 4300 023a 7B68     		ldr	r3, [r7, #4]
 4301 023c 5B6D     		ldr	r3, [r3, #84]
 4302 023e 1846     		mov	r0, r3
 4303 0240 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4304 0244 0346     		mov	r3, r0
 4305              		.loc 1 2228 16
 4306 0246 002B     		cmp	r3, #0
 4307 0248 16D0     		beq	.L242
2229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             {
2230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               /* Call Directly husart->hdmarx->XferAbortCallback function in case of error */
2231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               husart->hdmarx->XferAbortCallback(husart->hdmarx);
 4308              		.loc 1 2231 21
 4309 024a 7B68     		ldr	r3, [r7, #4]
 4310 024c 5B6D     		ldr	r3, [r3, #84]
 4311              		.loc 1 2231 29
 4312 024e 1B6D     		ldr	r3, [r3, #80]
 4313              		.loc 1 2231 55
 4314 0250 7A68     		ldr	r2, [r7, #4]
 4315 0252 526D     		ldr	r2, [r2, #84]
 4316              		.loc 1 2231 15
 4317 0254 1046     		mov	r0, r2
 4318 0256 9847     		blx	r3
 4319              	.LVL2:
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 4320              		.loc 1 2205 12
 4321 0258 0EE0     		b	.L242
 4322              	.L233:
2232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             }
2233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
2234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           else
2235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
2236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call user error callback */
2237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call registered Error Callback */
2239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->ErrorCallback(husart);
2240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call legacy weak Error Callback */
2242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             HAL_USART_ErrorCallback(husart);
 4323              		.loc 1 2242 13
 4324 025a 7868     		ldr	r0, [r7, #4]
 4325 025c FFF7FEFF 		bl	HAL_USART_ErrorCallback
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 4326              		.loc 1 2205 12
 4327 0260 0AE0     		b	.L242
 4328              	.L231:
2243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
2245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
2246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else
2247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
2248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Call user error callback */
2249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/ccUeuQwq.s 			page 116


2250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Call registered Error Callback */
2251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->ErrorCallback(husart);
2252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Call legacy weak Error Callback */
2254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           HAL_USART_ErrorCallback(husart);
 4329              		.loc 1 2254 11
 4330 0262 7868     		ldr	r0, [r7, #4]
 4331 0264 FFF7FEFF 		bl	HAL_USART_ErrorCallback
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 4332              		.loc 1 2205 12
 4333 0268 06E0     		b	.L242
 4334              	.L230:
2255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
2257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
2259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Non Blocking error : transfer could go on.
2261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            Error is notified to user through user error callback */
2262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call registered Error Callback */
2264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCallback(husart);
2265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call legacy weak Error Callback */
2267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_USART_ErrorCallback(husart);
 4335              		.loc 1 2267 9
 4336 026a 7868     		ldr	r0, [r7, #4]
 4337 026c FFF7FEFF 		bl	HAL_USART_ErrorCallback
2268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->ErrorCode = HAL_USART_ERROR_NONE;
 4338              		.loc 1 2269 27
 4339 0270 7B68     		ldr	r3, [r7, #4]
 4340 0272 0022     		movs	r2, #0
 4341 0274 DA65     		str	r2, [r3, #92]
2270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return;
 4342              		.loc 1 2272 5
 4343 0276 47E0     		b	.L241
 4344              	.L242:
2205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
 4345              		.loc 1 2205 12
 4346 0278 00BF     		nop
 4347              		.loc 1 2272 5
 4348 027a 45E0     		b	.L241
 4349              	.L216:
2273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   } /* End if some error occurs */
2275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* USART in mode Transmitter ------------------------------------------------*/
2278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
 4350              		.loc 1 2278 18
 4351 027c FB69     		ldr	r3, [r7, #28]
 4352 027e 03F08003 		and	r3, r3, #128
 4353              		.loc 1 2278 6
 4354 0282 002B     		cmp	r3, #0
ARM GAS  /tmp/ccUeuQwq.s 			page 117


 4355 0284 12D0     		beq	.L235
2279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 4356              		.loc 1 2279 20
 4357 0286 BB69     		ldr	r3, [r7, #24]
 4358 0288 03F08003 		and	r3, r3, #128
 4359              		.loc 1 2279 7
 4360 028c 002B     		cmp	r3, #0
 4361 028e 04D1     		bne	.L236
2280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 4362              		.loc 1 2280 23
 4363 0290 7B69     		ldr	r3, [r7, #20]
 4364 0292 03F40003 		and	r3, r3, #8388608
 4365              		.loc 1 2280 11
 4366 0296 002B     		cmp	r3, #0
 4367 0298 08D0     		beq	.L235
 4368              	.L236:
2281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->TxISR != NULL)
 4369              		.loc 1 2282 15
 4370 029a 7B68     		ldr	r3, [r7, #4]
 4371 029c DB6C     		ldr	r3, [r3, #76]
 4372              		.loc 1 2282 8
 4373 029e 002B     		cmp	r3, #0
 4374 02a0 34D0     		beq	.L243
2283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxISR(husart);
 4375              		.loc 1 2284 13
 4376 02a2 7B68     		ldr	r3, [r7, #4]
 4377 02a4 DB6C     		ldr	r3, [r3, #76]
 4378              		.loc 1 2284 7
 4379 02a6 7868     		ldr	r0, [r7, #4]
 4380 02a8 9847     		blx	r3
 4381              	.LVL3:
2285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return;
 4382              		.loc 1 2286 5
 4383 02aa 2FE0     		b	.L243
 4384              	.L235:
2287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* USART in mode Transmitter (transmission end) -----------------------------*/
2290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 4385              		.loc 1 2290 18
 4386 02ac FB69     		ldr	r3, [r7, #28]
 4387 02ae 03F04003 		and	r3, r3, #64
 4388              		.loc 1 2290 6
 4389 02b2 002B     		cmp	r3, #0
 4390 02b4 08D0     		beq	.L238
 4391              		.loc 1 2290 53 discriminator 1
 4392 02b6 BB69     		ldr	r3, [r7, #24]
 4393 02b8 03F04003 		and	r3, r3, #64
 4394              		.loc 1 2290 41 discriminator 1
 4395 02bc 002B     		cmp	r3, #0
 4396 02be 03D0     		beq	.L238
2291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     USART_EndTransmit_IT(husart);
 4397              		.loc 1 2292 5
ARM GAS  /tmp/ccUeuQwq.s 			page 118


 4398 02c0 7868     		ldr	r0, [r7, #4]
 4399 02c2 FFF7FEFF 		bl	USART_EndTransmit_IT
2293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return;
 4400              		.loc 1 2293 5
 4401 02c6 22E0     		b	.L211
 4402              	.L238:
2294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* USART TX Fifo Empty occurred ----------------------------------------------*/
2297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
 4403              		.loc 1 2297 18
 4404 02c8 FB69     		ldr	r3, [r7, #28]
 4405 02ca 03F40003 		and	r3, r3, #8388608
 4406              		.loc 1 2297 6
 4407 02ce 002B     		cmp	r3, #0
 4408 02d0 08D0     		beq	.L239
 4409              		.loc 1 2297 55 discriminator 1
 4410 02d2 BB69     		ldr	r3, [r7, #24]
 4411 02d4 03F08043 		and	r3, r3, #1073741824
 4412              		.loc 1 2297 43 discriminator 1
 4413 02d8 002B     		cmp	r3, #0
 4414 02da 03D0     		beq	.L239
2298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call registered Tx Fifo Empty Callback */
2301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxFifoEmptyCallback(husart);
2302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USARTEx_TxFifoEmptyCallback(husart);
 4415              		.loc 1 2304 5
 4416 02dc 7868     		ldr	r0, [r7, #4]
 4417 02de FFF7FEFF 		bl	HAL_USARTEx_TxFifoEmptyCallback
2305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return;
 4418              		.loc 1 2306 5
 4419 02e2 14E0     		b	.L211
 4420              	.L239:
2307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* USART RX Fifo Full occurred ----------------------------------------------*/
2310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
 4421              		.loc 1 2310 18
 4422 02e4 FB69     		ldr	r3, [r7, #28]
 4423 02e6 03F08073 		and	r3, r3, #16777216
 4424              		.loc 1 2310 6
 4425 02ea 002B     		cmp	r3, #0
 4426 02ec 0FD0     		beq	.L211
 4427              		.loc 1 2310 75 discriminator 1
 4428 02ee BB69     		ldr	r3, [r7, #24]
 4429              		.loc 1 2310 43 discriminator 1
 4430 02f0 002B     		cmp	r3, #0
 4431 02f2 0CDA     		bge	.L211
2311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call registered Rx Fifo Full Callback */
2314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxFifoFullCallback(husart);
2315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
ARM GAS  /tmp/ccUeuQwq.s 			page 119


2316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USARTEx_RxFifoFullCallback(husart);
 4432              		.loc 1 2317 5
 4433 02f4 7868     		ldr	r0, [r7, #4]
 4434 02f6 FFF7FEFF 		bl	HAL_USARTEx_RxFifoFullCallback
2318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     return;
 4435              		.loc 1 2319 5
 4436 02fa 08E0     		b	.L211
 4437              	.L245:
 4438              		.align	2
 4439              	.L244:
 4440 02fc 01000010 		.word	268435457
 4441 0300 00000000 		.word	USART_DMAAbortOnError
 4442              	.L240:
2112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 4443              		.loc 1 2112 7
 4444 0304 00BF     		nop
 4445 0306 02E0     		b	.L211
 4446              	.L241:
2272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 4447              		.loc 1 2272 5
 4448 0308 00BF     		nop
 4449 030a 00E0     		b	.L211
 4450              	.L243:
2286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
 4451              		.loc 1 2286 5
 4452 030c 00BF     		nop
 4453              	.L211:
2320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4454              		.loc 1 2321 1
 4455 030e 2037     		adds	r7, r7, #32
 4456              	.LCFI100:
 4457              		.cfi_def_cfa_offset 8
 4458 0310 BD46     		mov	sp, r7
 4459              	.LCFI101:
 4460              		.cfi_def_cfa_register 13
 4461              		@ sp needed
 4462 0312 80BD     		pop	{r7, pc}
 4463              		.cfi_endproc
 4464              	.LFE349:
 4466              		.section	.text.HAL_USART_TxCpltCallback,"ax",%progbits
 4467              		.align	1
 4468              		.weak	HAL_USART_TxCpltCallback
 4469              		.syntax unified
 4470              		.thumb
 4471              		.thumb_func
 4472              		.fpu fpv5-d16
 4474              	HAL_USART_TxCpltCallback:
 4475              	.LFB350:
2322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Tx Transfer completed callback.
2325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
ARM GAS  /tmp/ccUeuQwq.s 			page 120


2328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_TxCpltCallback(USART_HandleTypeDef *husart)
2329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4476              		.loc 1 2329 1
 4477              		.cfi_startproc
 4478              		@ args = 0, pretend = 0, frame = 8
 4479              		@ frame_needed = 1, uses_anonymous_args = 0
 4480              		@ link register save eliminated.
 4481 0000 80B4     		push	{r7}
 4482              	.LCFI102:
 4483              		.cfi_def_cfa_offset 4
 4484              		.cfi_offset 7, -4
 4485 0002 83B0     		sub	sp, sp, #12
 4486              	.LCFI103:
 4487              		.cfi_def_cfa_offset 16
 4488 0004 00AF     		add	r7, sp, #0
 4489              	.LCFI104:
 4490              		.cfi_def_cfa_register 7
 4491 0006 7860     		str	r0, [r7, #4]
2330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_TxCpltCallback can be implemented in the user file.
2335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4492              		.loc 1 2336 1
 4493 0008 00BF     		nop
 4494 000a 0C37     		adds	r7, r7, #12
 4495              	.LCFI105:
 4496              		.cfi_def_cfa_offset 4
 4497 000c BD46     		mov	sp, r7
 4498              	.LCFI106:
 4499              		.cfi_def_cfa_register 13
 4500              		@ sp needed
 4501 000e 5DF8047B 		ldr	r7, [sp], #4
 4502              	.LCFI107:
 4503              		.cfi_restore 7
 4504              		.cfi_def_cfa_offset 0
 4505 0012 7047     		bx	lr
 4506              		.cfi_endproc
 4507              	.LFE350:
 4509              		.section	.text.HAL_USART_TxHalfCpltCallback,"ax",%progbits
 4510              		.align	1
 4511              		.weak	HAL_USART_TxHalfCpltCallback
 4512              		.syntax unified
 4513              		.thumb
 4514              		.thumb_func
 4515              		.fpu fpv5-d16
 4517              	HAL_USART_TxHalfCpltCallback:
 4518              	.LFB351:
2337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Tx Half Transfer completed callback.
2340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_TxHalfCpltCallback(USART_HandleTypeDef *husart)
ARM GAS  /tmp/ccUeuQwq.s 			page 121


2344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4519              		.loc 1 2344 1
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 8
 4522              		@ frame_needed = 1, uses_anonymous_args = 0
 4523              		@ link register save eliminated.
 4524 0000 80B4     		push	{r7}
 4525              	.LCFI108:
 4526              		.cfi_def_cfa_offset 4
 4527              		.cfi_offset 7, -4
 4528 0002 83B0     		sub	sp, sp, #12
 4529              	.LCFI109:
 4530              		.cfi_def_cfa_offset 16
 4531 0004 00AF     		add	r7, sp, #0
 4532              	.LCFI110:
 4533              		.cfi_def_cfa_register 7
 4534 0006 7860     		str	r0, [r7, #4]
2345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            the HAL_USART_TxHalfCpltCallback can be implemented in the user file.
2350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4535              		.loc 1 2351 1
 4536 0008 00BF     		nop
 4537 000a 0C37     		adds	r7, r7, #12
 4538              	.LCFI111:
 4539              		.cfi_def_cfa_offset 4
 4540 000c BD46     		mov	sp, r7
 4541              	.LCFI112:
 4542              		.cfi_def_cfa_register 13
 4543              		@ sp needed
 4544 000e 5DF8047B 		ldr	r7, [sp], #4
 4545              	.LCFI113:
 4546              		.cfi_restore 7
 4547              		.cfi_def_cfa_offset 0
 4548 0012 7047     		bx	lr
 4549              		.cfi_endproc
 4550              	.LFE351:
 4552              		.section	.text.HAL_USART_RxCpltCallback,"ax",%progbits
 4553              		.align	1
 4554              		.weak	HAL_USART_RxCpltCallback
 4555              		.syntax unified
 4556              		.thumb
 4557              		.thumb_func
 4558              		.fpu fpv5-d16
 4560              	HAL_USART_RxCpltCallback:
 4561              	.LFB352:
2352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Rx Transfer completed callback.
2355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_RxCpltCallback(USART_HandleTypeDef *husart)
2359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
ARM GAS  /tmp/ccUeuQwq.s 			page 122


 4562              		.loc 1 2359 1
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 8
 4565              		@ frame_needed = 1, uses_anonymous_args = 0
 4566              		@ link register save eliminated.
 4567 0000 80B4     		push	{r7}
 4568              	.LCFI114:
 4569              		.cfi_def_cfa_offset 4
 4570              		.cfi_offset 7, -4
 4571 0002 83B0     		sub	sp, sp, #12
 4572              	.LCFI115:
 4573              		.cfi_def_cfa_offset 16
 4574 0004 00AF     		add	r7, sp, #0
 4575              	.LCFI116:
 4576              		.cfi_def_cfa_register 7
 4577 0006 7860     		str	r0, [r7, #4]
2360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****            the HAL_USART_RxCpltCallback can be implemented in the user file.
2365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4578              		.loc 1 2366 1
 4579 0008 00BF     		nop
 4580 000a 0C37     		adds	r7, r7, #12
 4581              	.LCFI117:
 4582              		.cfi_def_cfa_offset 4
 4583 000c BD46     		mov	sp, r7
 4584              	.LCFI118:
 4585              		.cfi_def_cfa_register 13
 4586              		@ sp needed
 4587 000e 5DF8047B 		ldr	r7, [sp], #4
 4588              	.LCFI119:
 4589              		.cfi_restore 7
 4590              		.cfi_def_cfa_offset 0
 4591 0012 7047     		bx	lr
 4592              		.cfi_endproc
 4593              	.LFE352:
 4595              		.section	.text.HAL_USART_RxHalfCpltCallback,"ax",%progbits
 4596              		.align	1
 4597              		.weak	HAL_USART_RxHalfCpltCallback
 4598              		.syntax unified
 4599              		.thumb
 4600              		.thumb_func
 4601              		.fpu fpv5-d16
 4603              	HAL_USART_RxHalfCpltCallback:
 4604              	.LFB353:
2367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Rx Half Transfer completed callback.
2370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_RxHalfCpltCallback(USART_HandleTypeDef *husart)
2374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4605              		.loc 1 2374 1
ARM GAS  /tmp/ccUeuQwq.s 			page 123


 4606              		.cfi_startproc
 4607              		@ args = 0, pretend = 0, frame = 8
 4608              		@ frame_needed = 1, uses_anonymous_args = 0
 4609              		@ link register save eliminated.
 4610 0000 80B4     		push	{r7}
 4611              	.LCFI120:
 4612              		.cfi_def_cfa_offset 4
 4613              		.cfi_offset 7, -4
 4614 0002 83B0     		sub	sp, sp, #12
 4615              	.LCFI121:
 4616              		.cfi_def_cfa_offset 16
 4617 0004 00AF     		add	r7, sp, #0
 4618              	.LCFI122:
 4619              		.cfi_def_cfa_register 7
 4620 0006 7860     		str	r0, [r7, #4]
2375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_RxHalfCpltCallback can be implemented in the user file
2380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4621              		.loc 1 2381 1
 4622 0008 00BF     		nop
 4623 000a 0C37     		adds	r7, r7, #12
 4624              	.LCFI123:
 4625              		.cfi_def_cfa_offset 4
 4626 000c BD46     		mov	sp, r7
 4627              	.LCFI124:
 4628              		.cfi_def_cfa_register 13
 4629              		@ sp needed
 4630 000e 5DF8047B 		ldr	r7, [sp], #4
 4631              	.LCFI125:
 4632              		.cfi_restore 7
 4633              		.cfi_def_cfa_offset 0
 4634 0012 7047     		bx	lr
 4635              		.cfi_endproc
 4636              	.LFE353:
 4638              		.section	.text.HAL_USART_TxRxCpltCallback,"ax",%progbits
 4639              		.align	1
 4640              		.weak	HAL_USART_TxRxCpltCallback
 4641              		.syntax unified
 4642              		.thumb
 4643              		.thumb_func
 4644              		.fpu fpv5-d16
 4646              	HAL_USART_TxRxCpltCallback:
 4647              	.LFB354:
2382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Tx/Rx Transfers completed callback for the non-blocking process.
2385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_TxRxCpltCallback(USART_HandleTypeDef *husart)
2389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4648              		.loc 1 2389 1
 4649              		.cfi_startproc
ARM GAS  /tmp/ccUeuQwq.s 			page 124


 4650              		@ args = 0, pretend = 0, frame = 8
 4651              		@ frame_needed = 1, uses_anonymous_args = 0
 4652              		@ link register save eliminated.
 4653 0000 80B4     		push	{r7}
 4654              	.LCFI126:
 4655              		.cfi_def_cfa_offset 4
 4656              		.cfi_offset 7, -4
 4657 0002 83B0     		sub	sp, sp, #12
 4658              	.LCFI127:
 4659              		.cfi_def_cfa_offset 16
 4660 0004 00AF     		add	r7, sp, #0
 4661              	.LCFI128:
 4662              		.cfi_def_cfa_register 7
 4663 0006 7860     		str	r0, [r7, #4]
2390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_TxRxCpltCallback can be implemented in the user file
2395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4664              		.loc 1 2396 1
 4665 0008 00BF     		nop
 4666 000a 0C37     		adds	r7, r7, #12
 4667              	.LCFI129:
 4668              		.cfi_def_cfa_offset 4
 4669 000c BD46     		mov	sp, r7
 4670              	.LCFI130:
 4671              		.cfi_def_cfa_register 13
 4672              		@ sp needed
 4673 000e 5DF8047B 		ldr	r7, [sp], #4
 4674              	.LCFI131:
 4675              		.cfi_restore 7
 4676              		.cfi_def_cfa_offset 0
 4677 0012 7047     		bx	lr
 4678              		.cfi_endproc
 4679              	.LFE354:
 4681              		.section	.text.HAL_USART_ErrorCallback,"ax",%progbits
 4682              		.align	1
 4683              		.weak	HAL_USART_ErrorCallback
 4684              		.syntax unified
 4685              		.thumb
 4686              		.thumb_func
 4687              		.fpu fpv5-d16
 4689              	HAL_USART_ErrorCallback:
 4690              	.LFB355:
2397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief USART error callback.
2400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_ErrorCallback(USART_HandleTypeDef *husart)
2404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4691              		.loc 1 2404 1
 4692              		.cfi_startproc
 4693              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccUeuQwq.s 			page 125


 4694              		@ frame_needed = 1, uses_anonymous_args = 0
 4695              		@ link register save eliminated.
 4696 0000 80B4     		push	{r7}
 4697              	.LCFI132:
 4698              		.cfi_def_cfa_offset 4
 4699              		.cfi_offset 7, -4
 4700 0002 83B0     		sub	sp, sp, #12
 4701              	.LCFI133:
 4702              		.cfi_def_cfa_offset 16
 4703 0004 00AF     		add	r7, sp, #0
 4704              	.LCFI134:
 4705              		.cfi_def_cfa_register 7
 4706 0006 7860     		str	r0, [r7, #4]
2405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_ErrorCallback can be implemented in the user file.
2410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4707              		.loc 1 2411 1
 4708 0008 00BF     		nop
 4709 000a 0C37     		adds	r7, r7, #12
 4710              	.LCFI135:
 4711              		.cfi_def_cfa_offset 4
 4712 000c BD46     		mov	sp, r7
 4713              	.LCFI136:
 4714              		.cfi_def_cfa_register 13
 4715              		@ sp needed
 4716 000e 5DF8047B 		ldr	r7, [sp], #4
 4717              	.LCFI137:
 4718              		.cfi_restore 7
 4719              		.cfi_def_cfa_offset 0
 4720 0012 7047     		bx	lr
 4721              		.cfi_endproc
 4722              	.LFE355:
 4724              		.section	.text.HAL_USART_AbortCpltCallback,"ax",%progbits
 4725              		.align	1
 4726              		.weak	HAL_USART_AbortCpltCallback
 4727              		.syntax unified
 4728              		.thumb
 4729              		.thumb_func
 4730              		.fpu fpv5-d16
 4732              	HAL_USART_AbortCpltCallback:
 4733              	.LFB356:
2412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  USART Abort Complete callback.
2415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
2416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** __weak void HAL_USART_AbortCpltCallback(USART_HandleTypeDef *husart)
2419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4734              		.loc 1 2419 1
 4735              		.cfi_startproc
 4736              		@ args = 0, pretend = 0, frame = 8
 4737              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccUeuQwq.s 			page 126


 4738              		@ link register save eliminated.
 4739 0000 80B4     		push	{r7}
 4740              	.LCFI138:
 4741              		.cfi_def_cfa_offset 4
 4742              		.cfi_offset 7, -4
 4743 0002 83B0     		sub	sp, sp, #12
 4744              	.LCFI139:
 4745              		.cfi_def_cfa_offset 16
 4746 0004 00AF     		add	r7, sp, #0
 4747              	.LCFI140:
 4748              		.cfi_def_cfa_register 7
 4749 0006 7860     		str	r0, [r7, #4]
2420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Prevent unused argument(s) compilation warning */
2421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   UNUSED(husart);
2422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             the HAL_USART_AbortCpltCallback can be implemented in the user file.
2425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    */
2426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4750              		.loc 1 2426 1
 4751 0008 00BF     		nop
 4752 000a 0C37     		adds	r7, r7, #12
 4753              	.LCFI141:
 4754              		.cfi_def_cfa_offset 4
 4755 000c BD46     		mov	sp, r7
 4756              	.LCFI142:
 4757              		.cfi_def_cfa_register 13
 4758              		@ sp needed
 4759 000e 5DF8047B 		ldr	r7, [sp], #4
 4760              	.LCFI143:
 4761              		.cfi_restore 7
 4762              		.cfi_def_cfa_offset 0
 4763 0012 7047     		bx	lr
 4764              		.cfi_endproc
 4765              	.LFE356:
 4767              		.section	.text.HAL_USART_GetState,"ax",%progbits
 4768              		.align	1
 4769              		.global	HAL_USART_GetState
 4770              		.syntax unified
 4771              		.thumb
 4772              		.thumb_func
 4773              		.fpu fpv5-d16
 4775              	HAL_USART_GetState:
 4776              	.LFB357:
2427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
2430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Exported_Functions_Group4 Peripheral State and Error functions
2433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  @brief   USART Peripheral State and Error functions
2434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *
2435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @verbatim
2436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   ==============================================================================
2437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             ##### Peripheral State and Error functions #####
2438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   ==============================================================================
2439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     [..]
ARM GAS  /tmp/ccUeuQwq.s 			page 127


2440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     This subsection provides functions allowing to :
2441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (+) Return the USART handle state
2442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (+) Return the USART handle error code
2443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** @endverbatim
2445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
2446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Return the USART handle state.
2451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart pointer to a USART_HandleTypeDef structure that contains
2452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *              the configuration information for the specified USART.
2453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval USART handle state
2454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** HAL_USART_StateTypeDef HAL_USART_GetState(USART_HandleTypeDef *husart)
2456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4777              		.loc 1 2456 1
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 8
 4780              		@ frame_needed = 1, uses_anonymous_args = 0
 4781              		@ link register save eliminated.
 4782 0000 80B4     		push	{r7}
 4783              	.LCFI144:
 4784              		.cfi_def_cfa_offset 4
 4785              		.cfi_offset 7, -4
 4786 0002 83B0     		sub	sp, sp, #12
 4787              	.LCFI145:
 4788              		.cfi_def_cfa_offset 16
 4789 0004 00AF     		add	r7, sp, #0
 4790              	.LCFI146:
 4791              		.cfi_def_cfa_register 7
 4792 0006 7860     		str	r0, [r7, #4]
2457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return husart->State;
 4793              		.loc 1 2457 16
 4794 0008 7B68     		ldr	r3, [r7, #4]
 4795 000a 93F85930 		ldrb	r3, [r3, #89]
 4796 000e DBB2     		uxtb	r3, r3
2458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4797              		.loc 1 2458 1
 4798 0010 1846     		mov	r0, r3
 4799 0012 0C37     		adds	r7, r7, #12
 4800              	.LCFI147:
 4801              		.cfi_def_cfa_offset 4
 4802 0014 BD46     		mov	sp, r7
 4803              	.LCFI148:
 4804              		.cfi_def_cfa_register 13
 4805              		@ sp needed
 4806 0016 5DF8047B 		ldr	r7, [sp], #4
 4807              	.LCFI149:
 4808              		.cfi_restore 7
 4809              		.cfi_def_cfa_offset 0
 4810 001a 7047     		bx	lr
 4811              		.cfi_endproc
 4812              	.LFE357:
 4814              		.section	.text.HAL_USART_GetError,"ax",%progbits
 4815              		.align	1
ARM GAS  /tmp/ccUeuQwq.s 			page 128


 4816              		.global	HAL_USART_GetError
 4817              		.syntax unified
 4818              		.thumb
 4819              		.thumb_func
 4820              		.fpu fpv5-d16
 4822              	HAL_USART_GetError:
 4823              	.LFB358:
2459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Return the USART error code.
2462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart pointer to a USART_HandleTypeDef structure that contains
2463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *              the configuration information for the specified USART.
2464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval USART handle Error Code
2465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** uint32_t HAL_USART_GetError(USART_HandleTypeDef *husart)
2467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4824              		.loc 1 2467 1
 4825              		.cfi_startproc
 4826              		@ args = 0, pretend = 0, frame = 8
 4827              		@ frame_needed = 1, uses_anonymous_args = 0
 4828              		@ link register save eliminated.
 4829 0000 80B4     		push	{r7}
 4830              	.LCFI150:
 4831              		.cfi_def_cfa_offset 4
 4832              		.cfi_offset 7, -4
 4833 0002 83B0     		sub	sp, sp, #12
 4834              	.LCFI151:
 4835              		.cfi_def_cfa_offset 16
 4836 0004 00AF     		add	r7, sp, #0
 4837              	.LCFI152:
 4838              		.cfi_def_cfa_register 7
 4839 0006 7860     		str	r0, [r7, #4]
2468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return husart->ErrorCode;
 4840              		.loc 1 2468 16
 4841 0008 7B68     		ldr	r3, [r7, #4]
 4842 000a DB6D     		ldr	r3, [r3, #92]
2469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4843              		.loc 1 2469 1
 4844 000c 1846     		mov	r0, r3
 4845 000e 0C37     		adds	r7, r7, #12
 4846              	.LCFI153:
 4847              		.cfi_def_cfa_offset 4
 4848 0010 BD46     		mov	sp, r7
 4849              	.LCFI154:
 4850              		.cfi_def_cfa_register 13
 4851              		@ sp needed
 4852 0012 5DF8047B 		ldr	r7, [sp], #4
 4853              	.LCFI155:
 4854              		.cfi_restore 7
 4855              		.cfi_def_cfa_offset 0
 4856 0016 7047     		bx	lr
 4857              		.cfi_endproc
 4858              	.LFE358:
 4860              		.section	.text.USART_EndTransfer,"ax",%progbits
 4861              		.align	1
 4862              		.syntax unified
 4863              		.thumb
ARM GAS  /tmp/ccUeuQwq.s 			page 129


 4864              		.thumb_func
 4865              		.fpu fpv5-d16
 4867              	USART_EndTransfer:
 4868              	.LFB359:
2470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
2473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @}
2477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /** @defgroup USART_Private_Functions USART Private Functions
2480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @{
2481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Initialize the callbacks to their default values.
2485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
2486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval none
2487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** void USART_InitCallbacksToDefault(USART_HandleTypeDef *husart)
2490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
2491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Init the USART Callback settings */
2492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxHalfCpltCallback        = HAL_USART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpl
2493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxCpltCallback            = HAL_USART_TxCpltCallback;            /* Legacy weak TxCpltCal
2494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxHalfCpltCallback        = HAL_USART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpl
2495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxCpltCallback            = HAL_USART_RxCpltCallback;            /* Legacy weak RxCpltCal
2496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxRxCpltCallback          = HAL_USART_TxRxCpltCallback;          /* Legacy weak TxRxCpltC
2497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCallback             = HAL_USART_ErrorCallback;             /* Legacy weak ErrorCall
2498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->AbortCpltCallback         = HAL_USART_AbortCpltCallback;         /* Legacy weak AbortCplt
2499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxFifoFullCallback        = HAL_USARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFul
2500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxFifoEmptyCallback       = HAL_USARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmp
2501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
2502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  End ongoing transfer on USART peripheral (following error detection or Transfer complet
2506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
2507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_EndTransfer(USART_HandleTypeDef *husart)
2510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4869              		.loc 1 2510 1
 4870              		.cfi_startproc
 4871              		@ args = 0, pretend = 0, frame = 8
 4872              		@ frame_needed = 1, uses_anonymous_args = 0
 4873              		@ link register save eliminated.
 4874 0000 80B4     		push	{r7}
 4875              	.LCFI156:
 4876              		.cfi_def_cfa_offset 4
 4877              		.cfi_offset 7, -4
 4878 0002 83B0     		sub	sp, sp, #12
 4879              	.LCFI157:
 4880              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccUeuQwq.s 			page 130


 4881 0004 00AF     		add	r7, sp, #0
 4882              	.LCFI158:
 4883              		.cfi_def_cfa_register 7
 4884 0006 7860     		str	r0, [r7, #4]
2511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable TXEIE, TCIE, RXNE, RXFT, TXFT, PE and ERR (Frame error, noise error, overrun error) in
2512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXF
 4885              		.loc 1 2512 3
 4886 0008 7B68     		ldr	r3, [r7, #4]
 4887 000a 1B68     		ldr	r3, [r3]
 4888 000c 1A68     		ldr	r2, [r3]
 4889 000e 7B68     		ldr	r3, [r7, #4]
 4890 0010 1B68     		ldr	r3, [r3]
 4891 0012 22F4F072 		bic	r2, r2, #480
 4892 0016 1A60     		str	r2, [r3]
2513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                     USART_CR1_TCIE));
2514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   CLEAR_BIT(husart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
 4893              		.loc 1 2514 3
 4894 0018 7B68     		ldr	r3, [r7, #4]
 4895 001a 1B68     		ldr	r3, [r3]
 4896 001c 9968     		ldr	r1, [r3, #8]
 4897 001e 7B68     		ldr	r3, [r7, #4]
 4898 0020 1A68     		ldr	r2, [r3]
 4899 0022 064B     		ldr	r3, .L258
 4900 0024 0B40     		ands	r3, r3, r1
 4901 0026 9360     		str	r3, [r2, #8]
2515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* At end of process, restore husart->State to Ready */
2517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 4902              		.loc 1 2517 17
 4903 0028 7B68     		ldr	r3, [r7, #4]
 4904 002a 0122     		movs	r2, #1
 4905 002c 83F85920 		strb	r2, [r3, #89]
2518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4906              		.loc 1 2518 1
 4907 0030 00BF     		nop
 4908 0032 0C37     		adds	r7, r7, #12
 4909              	.LCFI159:
 4910              		.cfi_def_cfa_offset 4
 4911 0034 BD46     		mov	sp, r7
 4912              	.LCFI160:
 4913              		.cfi_def_cfa_register 13
 4914              		@ sp needed
 4915 0036 5DF8047B 		ldr	r7, [sp], #4
 4916              	.LCFI161:
 4917              		.cfi_restore 7
 4918              		.cfi_def_cfa_offset 0
 4919 003a 7047     		bx	lr
 4920              	.L259:
 4921              		.align	2
 4922              	.L258:
 4923 003c FEFF7FEF 		.word	-276824066
 4924              		.cfi_endproc
 4925              	.LFE359:
 4927              		.section	.text.USART_DMATransmitCplt,"ax",%progbits
 4928              		.align	1
 4929              		.syntax unified
 4930              		.thumb
ARM GAS  /tmp/ccUeuQwq.s 			page 131


 4931              		.thumb_func
 4932              		.fpu fpv5-d16
 4934              	USART_DMATransmitCplt:
 4935              	.LFB360:
2519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DMA USART transmit process complete callback.
2522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 4936              		.loc 1 2526 1
 4937              		.cfi_startproc
 4938              		@ args = 0, pretend = 0, frame = 16
 4939              		@ frame_needed = 1, uses_anonymous_args = 0
 4940 0000 80B5     		push	{r7, lr}
 4941              	.LCFI162:
 4942              		.cfi_def_cfa_offset 8
 4943              		.cfi_offset 7, -8
 4944              		.cfi_offset 14, -4
 4945 0002 84B0     		sub	sp, sp, #16
 4946              	.LCFI163:
 4947              		.cfi_def_cfa_offset 24
 4948 0004 00AF     		add	r7, sp, #0
 4949              	.LCFI164:
 4950              		.cfi_def_cfa_register 7
 4951 0006 7860     		str	r0, [r7, #4]
2527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 4952              		.loc 1 2527 24
 4953 0008 7B68     		ldr	r3, [r7, #4]
 4954 000a 9B6B     		ldr	r3, [r3, #56]
 4955 000c FB60     		str	r3, [r7, #12]
2528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA Normal mode */
2530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 4956              		.loc 1 2530 17
 4957 000e 7B68     		ldr	r3, [r7, #4]
 4958 0010 DB69     		ldr	r3, [r3, #28]
 4959              		.loc 1 2530 6
 4960 0012 B3F5807F 		cmp	r3, #256
 4961 0016 19D0     		beq	.L261
2531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxXferCount = 0U;
 4962              		.loc 1 2532 25
 4963 0018 FB68     		ldr	r3, [r7, #12]
 4964 001a 0022     		movs	r2, #0
 4965 001c DA85     		strh	r2, [r3, #46]	@ movhi
2533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
 4966              		.loc 1 2534 15
 4967 001e FB68     		ldr	r3, [r7, #12]
 4968 0020 93F85930 		ldrb	r3, [r3, #89]
 4969 0024 DBB2     		uxtb	r3, r3
 4970              		.loc 1 2534 8
 4971 0026 122B     		cmp	r3, #18
 4972 0028 19D1     		bne	.L263
ARM GAS  /tmp/ccUeuQwq.s 			page 132


2535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****          in the USART CR3 register */
2538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 4973              		.loc 1 2538 7
 4974 002a FB68     		ldr	r3, [r7, #12]
 4975 002c 1B68     		ldr	r3, [r3]
 4976 002e 9A68     		ldr	r2, [r3, #8]
 4977 0030 FB68     		ldr	r3, [r7, #12]
 4978 0032 1B68     		ldr	r3, [r3]
 4979 0034 22F08002 		bic	r2, r2, #128
 4980 0038 9A60     		str	r2, [r3, #8]
2539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
2541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 4981              		.loc 1 2541 7
 4982 003a FB68     		ldr	r3, [r7, #12]
 4983 003c 1B68     		ldr	r3, [r3]
 4984 003e 1A68     		ldr	r2, [r3]
 4985 0040 FB68     		ldr	r3, [r7, #12]
 4986 0042 1B68     		ldr	r3, [r3]
 4987 0044 42F04002 		orr	r2, r2, #64
 4988 0048 1A60     		str	r2, [r3]
2542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA Circular mode */
2545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
2546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_TX)
2548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call registered Tx Complete Callback */
2551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxCpltCallback(husart);
2552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call legacy weak Tx Complete Callback */
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_USART_TxCpltCallback(husart);
2555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 4989              		.loc 1 2558 1
 4990 004a 08E0     		b	.L263
 4991              	.L261:
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 4992              		.loc 1 2547 15
 4993 004c FB68     		ldr	r3, [r7, #12]
 4994 004e 93F85930 		ldrb	r3, [r3, #89]
 4995 0052 DBB2     		uxtb	r3, r3
2547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 4996              		.loc 1 2547 8
 4997 0054 122B     		cmp	r3, #18
 4998 0056 02D1     		bne	.L263
2554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 4999              		.loc 1 2554 7
 5000 0058 F868     		ldr	r0, [r7, #12]
 5001 005a FFF7FEFF 		bl	HAL_USART_TxCpltCallback
 5002              	.L263:
ARM GAS  /tmp/ccUeuQwq.s 			page 133


 5003              		.loc 1 2558 1
 5004 005e 00BF     		nop
 5005 0060 1037     		adds	r7, r7, #16
 5006              	.LCFI165:
 5007              		.cfi_def_cfa_offset 8
 5008 0062 BD46     		mov	sp, r7
 5009              	.LCFI166:
 5010              		.cfi_def_cfa_register 13
 5011              		@ sp needed
 5012 0064 80BD     		pop	{r7, pc}
 5013              		.cfi_endproc
 5014              	.LFE360:
 5016              		.section	.text.USART_DMATxHalfCplt,"ax",%progbits
 5017              		.align	1
 5018              		.syntax unified
 5019              		.thumb
 5020              		.thumb_func
 5021              		.fpu fpv5-d16
 5023              	USART_DMATxHalfCplt:
 5024              	.LFB361:
2559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DMA USART transmit process half complete callback.
2562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5025              		.loc 1 2566 1
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 16
 5028              		@ frame_needed = 1, uses_anonymous_args = 0
 5029 0000 80B5     		push	{r7, lr}
 5030              	.LCFI167:
 5031              		.cfi_def_cfa_offset 8
 5032              		.cfi_offset 7, -8
 5033              		.cfi_offset 14, -4
 5034 0002 84B0     		sub	sp, sp, #16
 5035              	.LCFI168:
 5036              		.cfi_def_cfa_offset 24
 5037 0004 00AF     		add	r7, sp, #0
 5038              	.LCFI169:
 5039              		.cfi_def_cfa_register 7
 5040 0006 7860     		str	r0, [r7, #4]
2567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5041              		.loc 1 2567 24
 5042 0008 7B68     		ldr	r3, [r7, #4]
 5043 000a 9B6B     		ldr	r3, [r3, #56]
 5044 000c FB60     		str	r3, [r7, #12]
2568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Tx Half Complete Callback */
2571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxHalfCpltCallback(husart);
2572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Tx Half Complete Callback */
2574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_TxHalfCpltCallback(husart);
 5045              		.loc 1 2574 3
ARM GAS  /tmp/ccUeuQwq.s 			page 134


 5046 000e F868     		ldr	r0, [r7, #12]
 5047 0010 FFF7FEFF 		bl	HAL_USART_TxHalfCpltCallback
2575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5048              		.loc 1 2576 1
 5049 0014 00BF     		nop
 5050 0016 1037     		adds	r7, r7, #16
 5051              	.LCFI170:
 5052              		.cfi_def_cfa_offset 8
 5053 0018 BD46     		mov	sp, r7
 5054              	.LCFI171:
 5055              		.cfi_def_cfa_register 13
 5056              		@ sp needed
 5057 001a 80BD     		pop	{r7, pc}
 5058              		.cfi_endproc
 5059              	.LFE361:
 5061              		.section	.text.USART_DMAReceiveCplt,"ax",%progbits
 5062              		.align	1
 5063              		.syntax unified
 5064              		.thumb
 5065              		.thumb_func
 5066              		.fpu fpv5-d16
 5068              	USART_DMAReceiveCplt:
 5069              	.LFB362:
2577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DMA USART receive process complete callback.
2580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5070              		.loc 1 2584 1
 5071              		.cfi_startproc
 5072              		@ args = 0, pretend = 0, frame = 16
 5073              		@ frame_needed = 1, uses_anonymous_args = 0
 5074 0000 80B5     		push	{r7, lr}
 5075              	.LCFI172:
 5076              		.cfi_def_cfa_offset 8
 5077              		.cfi_offset 7, -8
 5078              		.cfi_offset 14, -4
 5079 0002 84B0     		sub	sp, sp, #16
 5080              	.LCFI173:
 5081              		.cfi_def_cfa_offset 24
 5082 0004 00AF     		add	r7, sp, #0
 5083              	.LCFI174:
 5084              		.cfi_def_cfa_register 7
 5085 0006 7860     		str	r0, [r7, #4]
2585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5086              		.loc 1 2585 24
 5087 0008 7B68     		ldr	r3, [r7, #4]
 5088 000a 9B6B     		ldr	r3, [r3, #56]
 5089 000c FB60     		str	r3, [r7, #12]
2586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA Normal mode */
2588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
 5090              		.loc 1 2588 17
ARM GAS  /tmp/ccUeuQwq.s 			page 135


 5091 000e 7B68     		ldr	r3, [r7, #4]
 5092 0010 DB69     		ldr	r3, [r3, #28]
 5093              		.loc 1 2588 6
 5094 0012 B3F5807F 		cmp	r3, #256
 5095 0016 34D0     		beq	.L266
2589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount = 0U;
 5096              		.loc 1 2590 25
 5097 0018 FB68     		ldr	r3, [r7, #12]
 5098 001a 0022     		movs	r2, #0
 5099 001c DA86     		strh	r2, [r3, #54]	@ movhi
2591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 5100              		.loc 1 2593 5
 5101 001e FB68     		ldr	r3, [r7, #12]
 5102 0020 1B68     		ldr	r3, [r3]
 5103 0022 1A68     		ldr	r2, [r3]
 5104 0024 FB68     		ldr	r3, [r7, #12]
 5105 0026 1B68     		ldr	r3, [r3]
 5106 0028 22F48072 		bic	r2, r2, #256
 5107 002c 1A60     		str	r2, [r3]
2594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 5108              		.loc 1 2594 5
 5109 002e FB68     		ldr	r3, [r7, #12]
 5110 0030 1B68     		ldr	r3, [r3]
 5111 0032 9A68     		ldr	r2, [r3, #8]
 5112 0034 FB68     		ldr	r3, [r7, #12]
 5113 0036 1B68     		ldr	r3, [r3]
 5114 0038 22F00102 		bic	r2, r2, #1
 5115 003c 9A60     		str	r2, [r3, #8]
2595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Disable the DMA RX transfer for the receiver request by resetting the DMAR bit
2597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****        in USART CR3 register */
2598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAR);
 5116              		.loc 1 2598 5
 5117 003e FB68     		ldr	r3, [r7, #12]
 5118 0040 1B68     		ldr	r3, [r3]
 5119 0042 9A68     		ldr	r2, [r3, #8]
 5120 0044 FB68     		ldr	r3, [r7, #12]
 5121 0046 1B68     		ldr	r3, [r3]
 5122 0048 22F04002 		bic	r2, r2, #64
 5123 004c 9A60     		str	r2, [r3, #8]
2599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* similarly, disable the DMA TX transfer that was started to provide the
2600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****        clock to the slave device */
2601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     CLEAR_BIT(husart->Instance->CR3, USART_CR3_DMAT);
 5124              		.loc 1 2601 5
 5125 004e FB68     		ldr	r3, [r7, #12]
 5126 0050 1B68     		ldr	r3, [r3]
 5127 0052 9A68     		ldr	r2, [r3, #8]
 5128 0054 FB68     		ldr	r3, [r7, #12]
 5129 0056 1B68     		ldr	r3, [r3]
 5130 0058 22F08002 		bic	r2, r2, #128
 5131 005c 9A60     		str	r2, [r3, #8]
2602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_RX)
 5132              		.loc 1 2603 15
ARM GAS  /tmp/ccUeuQwq.s 			page 136


 5133 005e FB68     		ldr	r3, [r7, #12]
 5134 0060 93F85930 		ldrb	r3, [r3, #89]
 5135 0064 DBB2     		uxtb	r3, r3
 5136              		.loc 1 2603 8
 5137 0066 222B     		cmp	r3, #34
 5138 0068 03D1     		bne	.L267
2604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call registered Rx Complete Callback */
2607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxCpltCallback(husart);
2608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call legacy weak Rx Complete Callback */
2610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
 5139              		.loc 1 2610 7
 5140 006a F868     		ldr	r0, [r7, #12]
 5141 006c FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 5142 0070 02E0     		b	.L268
 5143              	.L267:
2611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
2614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
2615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call registered Tx Rx Complete Callback */
2618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxRxCpltCallback(husart);
2619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call legacy weak Tx Rx Complete Callback */
2621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
 5144              		.loc 1 2621 7
 5145 0072 F868     		ldr	r0, [r7, #12]
 5146 0074 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 5147              	.L268:
2622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 5148              		.loc 1 2624 19
 5149 0078 FB68     		ldr	r3, [r7, #12]
 5150 007a 0122     		movs	r2, #1
 5151 007c 83F85920 		strb	r2, [r3, #89]
2625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* DMA circular mode */
2627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
2628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->State == HAL_USART_STATE_BUSY_RX)
2630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call registered Rx Complete Callback */
2633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxCpltCallback(husart);
2634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call legacy weak Rx Complete Callback */
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_USART_RxCpltCallback(husart);
2637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* The USART state is HAL_USART_STATE_BUSY_TX_RX */
2640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
2641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
ARM GAS  /tmp/ccUeuQwq.s 			page 137


2642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call registered Tx Rx Complete Callback */
2644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxRxCpltCallback(husart);
2645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Call legacy weak Tx Rx Complete Callback */
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_USART_TxRxCpltCallback(husart);
2648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5152              		.loc 1 2651 1
 5153 0080 0CE0     		b	.L271
 5154              	.L266:
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 5155              		.loc 1 2629 15
 5156 0082 FB68     		ldr	r3, [r7, #12]
 5157 0084 93F85930 		ldrb	r3, [r3, #89]
 5158 0088 DBB2     		uxtb	r3, r3
2629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 5159              		.loc 1 2629 8
 5160 008a 222B     		cmp	r3, #34
 5161 008c 03D1     		bne	.L270
2636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 5162              		.loc 1 2636 7
 5163 008e F868     		ldr	r0, [r7, #12]
 5164 0090 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 5165              		.loc 1 2651 1
 5166 0094 02E0     		b	.L271
 5167              	.L270:
2647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 5168              		.loc 1 2647 7
 5169 0096 F868     		ldr	r0, [r7, #12]
 5170 0098 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 5171              	.L271:
 5172              		.loc 1 2651 1
 5173 009c 00BF     		nop
 5174 009e 1037     		adds	r7, r7, #16
 5175              	.LCFI175:
 5176              		.cfi_def_cfa_offset 8
 5177 00a0 BD46     		mov	sp, r7
 5178              	.LCFI176:
 5179              		.cfi_def_cfa_register 13
 5180              		@ sp needed
 5181 00a2 80BD     		pop	{r7, pc}
 5182              		.cfi_endproc
 5183              	.LFE362:
 5185              		.section	.text.USART_DMARxHalfCplt,"ax",%progbits
 5186              		.align	1
 5187              		.syntax unified
 5188              		.thumb
 5189              		.thumb_func
 5190              		.fpu fpv5-d16
 5192              	USART_DMARxHalfCplt:
 5193              	.LFB363:
2652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DMA USART receive process half complete callback.
ARM GAS  /tmp/ccUeuQwq.s 			page 138


2655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5194              		.loc 1 2659 1
 5195              		.cfi_startproc
 5196              		@ args = 0, pretend = 0, frame = 16
 5197              		@ frame_needed = 1, uses_anonymous_args = 0
 5198 0000 80B5     		push	{r7, lr}
 5199              	.LCFI177:
 5200              		.cfi_def_cfa_offset 8
 5201              		.cfi_offset 7, -8
 5202              		.cfi_offset 14, -4
 5203 0002 84B0     		sub	sp, sp, #16
 5204              	.LCFI178:
 5205              		.cfi_def_cfa_offset 24
 5206 0004 00AF     		add	r7, sp, #0
 5207              	.LCFI179:
 5208              		.cfi_def_cfa_register 7
 5209 0006 7860     		str	r0, [r7, #4]
2660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5210              		.loc 1 2660 24
 5211 0008 7B68     		ldr	r3, [r7, #4]
 5212 000a 9B6B     		ldr	r3, [r3, #56]
 5213 000c FB60     		str	r3, [r7, #12]
2661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Rx Half Complete Callback */
2664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxHalfCpltCallback(husart);
2665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Rx Half Complete Callback */
2667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_RxHalfCpltCallback(husart);
 5214              		.loc 1 2667 3
 5215 000e F868     		ldr	r0, [r7, #12]
 5216 0010 FFF7FEFF 		bl	HAL_USART_RxHalfCpltCallback
2668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5217              		.loc 1 2669 1
 5218 0014 00BF     		nop
 5219 0016 1037     		adds	r7, r7, #16
 5220              	.LCFI180:
 5221              		.cfi_def_cfa_offset 8
 5222 0018 BD46     		mov	sp, r7
 5223              	.LCFI181:
 5224              		.cfi_def_cfa_register 13
 5225              		@ sp needed
 5226 001a 80BD     		pop	{r7, pc}
 5227              		.cfi_endproc
 5228              	.LFE363:
 5230              		.section	.text.USART_DMAError,"ax",%progbits
 5231              		.align	1
 5232              		.syntax unified
 5233              		.thumb
 5234              		.thumb_func
 5235              		.fpu fpv5-d16
 5237              	USART_DMAError:
ARM GAS  /tmp/ccUeuQwq.s 			page 139


 5238              	.LFB364:
2670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief DMA USART communication error callback.
2673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAError(DMA_HandleTypeDef *hdma)
2677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5239              		.loc 1 2677 1
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 16
 5242              		@ frame_needed = 1, uses_anonymous_args = 0
 5243 0000 80B5     		push	{r7, lr}
 5244              	.LCFI182:
 5245              		.cfi_def_cfa_offset 8
 5246              		.cfi_offset 7, -8
 5247              		.cfi_offset 14, -4
 5248 0002 84B0     		sub	sp, sp, #16
 5249              	.LCFI183:
 5250              		.cfi_def_cfa_offset 24
 5251 0004 00AF     		add	r7, sp, #0
 5252              	.LCFI184:
 5253              		.cfi_def_cfa_register 7
 5254 0006 7860     		str	r0, [r7, #4]
2678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5255              		.loc 1 2678 24
 5256 0008 7B68     		ldr	r3, [r7, #4]
 5257 000a 9B6B     		ldr	r3, [r3, #56]
 5258 000c FB60     		str	r3, [r7, #12]
2679:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2680:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxXferCount = 0U;
 5259              		.loc 1 2680 23
 5260 000e FB68     		ldr	r3, [r7, #12]
 5261 0010 0022     		movs	r2, #0
 5262 0012 DA86     		strh	r2, [r3, #54]	@ movhi
2681:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxXferCount = 0U;
 5263              		.loc 1 2681 23
 5264 0014 FB68     		ldr	r3, [r7, #12]
 5265 0016 0022     		movs	r2, #0
 5266 0018 DA85     		strh	r2, [r3, #46]	@ movhi
2682:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_EndTransfer(husart);
 5267              		.loc 1 2682 3
 5268 001a F868     		ldr	r0, [r7, #12]
 5269 001c FFF7FEFF 		bl	USART_EndTransfer
2683:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2684:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode |= HAL_USART_ERROR_DMA;
 5270              		.loc 1 2684 21
 5271 0020 FB68     		ldr	r3, [r7, #12]
 5272 0022 DB6D     		ldr	r3, [r3, #92]
 5273 0024 43F01002 		orr	r2, r3, #16
 5274 0028 FB68     		ldr	r3, [r7, #12]
 5275 002a DA65     		str	r2, [r3, #92]
2685:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 5276              		.loc 1 2685 17
 5277 002c FB68     		ldr	r3, [r7, #12]
 5278 002e 0122     		movs	r2, #1
ARM GAS  /tmp/ccUeuQwq.s 			page 140


 5279 0030 83F85920 		strb	r2, [r3, #89]
2686:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2687:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2688:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Error Callback */
2689:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCallback(husart);
2690:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2691:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Error Callback */
2692:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
 5280              		.loc 1 2692 3
 5281 0034 F868     		ldr	r0, [r7, #12]
 5282 0036 FFF7FEFF 		bl	HAL_USART_ErrorCallback
2693:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2694:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5283              		.loc 1 2694 1
 5284 003a 00BF     		nop
 5285 003c 1037     		adds	r7, r7, #16
 5286              	.LCFI185:
 5287              		.cfi_def_cfa_offset 8
 5288 003e BD46     		mov	sp, r7
 5289              	.LCFI186:
 5290              		.cfi_def_cfa_register 13
 5291              		@ sp needed
 5292 0040 80BD     		pop	{r7, pc}
 5293              		.cfi_endproc
 5294              	.LFE364:
 5296              		.section	.text.USART_DMAAbortOnError,"ax",%progbits
 5297              		.align	1
 5298              		.syntax unified
 5299              		.thumb
 5300              		.thumb_func
 5301              		.fpu fpv5-d16
 5303              	USART_DMAAbortOnError:
 5304              	.LFB365:
2695:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2696:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2697:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  DMA USART communication abort callback, when initiated by HAL services on Error
2698:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2699:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2700:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2701:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2702:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2703:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5305              		.loc 1 2703 1
 5306              		.cfi_startproc
 5307              		@ args = 0, pretend = 0, frame = 16
 5308              		@ frame_needed = 1, uses_anonymous_args = 0
 5309 0000 80B5     		push	{r7, lr}
 5310              	.LCFI187:
 5311              		.cfi_def_cfa_offset 8
 5312              		.cfi_offset 7, -8
 5313              		.cfi_offset 14, -4
 5314 0002 84B0     		sub	sp, sp, #16
 5315              	.LCFI188:
 5316              		.cfi_def_cfa_offset 24
 5317 0004 00AF     		add	r7, sp, #0
 5318              	.LCFI189:
 5319              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccUeuQwq.s 			page 141


 5320 0006 7860     		str	r0, [r7, #4]
2704:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5321              		.loc 1 2704 24
 5322 0008 7B68     		ldr	r3, [r7, #4]
 5323 000a 9B6B     		ldr	r3, [r3, #56]
 5324 000c FB60     		str	r3, [r7, #12]
2705:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxXferCount = 0U;
 5325              		.loc 1 2705 23
 5326 000e FB68     		ldr	r3, [r7, #12]
 5327 0010 0022     		movs	r2, #0
 5328 0012 DA86     		strh	r2, [r3, #54]	@ movhi
2706:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxXferCount = 0U;
 5329              		.loc 1 2706 23
 5330 0014 FB68     		ldr	r3, [r7, #12]
 5331 0016 0022     		movs	r2, #0
 5332 0018 DA85     		strh	r2, [r3, #46]	@ movhi
2707:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2708:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2709:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Error Callback */
2710:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCallback(husart);
2711:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2712:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Error Callback */
2713:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_ErrorCallback(husart);
 5333              		.loc 1 2713 3
 5334 001a F868     		ldr	r0, [r7, #12]
 5335 001c FFF7FEFF 		bl	HAL_USART_ErrorCallback
2714:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2715:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5336              		.loc 1 2715 1
 5337 0020 00BF     		nop
 5338 0022 1037     		adds	r7, r7, #16
 5339              	.LCFI190:
 5340              		.cfi_def_cfa_offset 8
 5341 0024 BD46     		mov	sp, r7
 5342              	.LCFI191:
 5343              		.cfi_def_cfa_register 13
 5344              		@ sp needed
 5345 0026 80BD     		pop	{r7, pc}
 5346              		.cfi_endproc
 5347              	.LFE365:
 5349              		.section	.text.USART_DMATxAbortCallback,"ax",%progbits
 5350              		.align	1
 5351              		.syntax unified
 5352              		.thumb
 5353              		.thumb_func
 5354              		.fpu fpv5-d16
 5356              	USART_DMATxAbortCallback:
 5357              	.LFB366:
2716:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2717:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2718:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  DMA USART Tx communication abort callback, when initiated by user
2719:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2720:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2721:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         Abort still ongoing for Rx DMA Handle.
2722:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2723:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2724:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
ARM GAS  /tmp/ccUeuQwq.s 			page 142


2725:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2726:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5358              		.loc 1 2726 1
 5359              		.cfi_startproc
 5360              		@ args = 0, pretend = 0, frame = 16
 5361              		@ frame_needed = 1, uses_anonymous_args = 0
 5362 0000 80B5     		push	{r7, lr}
 5363              	.LCFI192:
 5364              		.cfi_def_cfa_offset 8
 5365              		.cfi_offset 7, -8
 5366              		.cfi_offset 14, -4
 5367 0002 84B0     		sub	sp, sp, #16
 5368              	.LCFI193:
 5369              		.cfi_def_cfa_offset 24
 5370 0004 00AF     		add	r7, sp, #0
 5371              	.LCFI194:
 5372              		.cfi_def_cfa_register 7
 5373 0006 7860     		str	r0, [r7, #4]
2727:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5374              		.loc 1 2727 24
 5375 0008 7B68     		ldr	r3, [r7, #4]
 5376 000a 9B6B     		ldr	r3, [r3, #56]
 5377 000c FB60     		str	r3, [r7, #12]
2728:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2729:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->hdmatx->XferAbortCallback = NULL;
 5378              		.loc 1 2729 9
 5379 000e FB68     		ldr	r3, [r7, #12]
 5380 0010 1B6D     		ldr	r3, [r3, #80]
 5381              		.loc 1 2729 37
 5382 0012 0022     		movs	r2, #0
 5383 0014 1A65     		str	r2, [r3, #80]
2730:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2731:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
2732:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmarx != NULL)
 5384              		.loc 1 2732 13
 5385 0016 FB68     		ldr	r3, [r7, #12]
 5386 0018 5B6D     		ldr	r3, [r3, #84]
 5387              		.loc 1 2732 6
 5388 001a 002B     		cmp	r3, #0
 5389 001c 04D0     		beq	.L276
2733:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2734:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmarx->XferAbortCallback != NULL)
 5390              		.loc 1 2734 15
 5391 001e FB68     		ldr	r3, [r7, #12]
 5392 0020 5B6D     		ldr	r3, [r3, #84]
 5393              		.loc 1 2734 23
 5394 0022 1B6D     		ldr	r3, [r3, #80]
 5395              		.loc 1 2734 8
 5396 0024 002B     		cmp	r3, #0
 5397 0026 14D1     		bne	.L278
 5398              	.L276:
2735:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return;
2737:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2738:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2739:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2740:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
ARM GAS  /tmp/ccUeuQwq.s 			page 143


2741:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxXferCount = 0U;
 5399              		.loc 1 2741 23
 5400 0028 FB68     		ldr	r3, [r7, #12]
 5401 002a 0022     		movs	r2, #0
 5402 002c DA85     		strh	r2, [r3, #46]	@ movhi
2742:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxXferCount = 0U;
 5403              		.loc 1 2742 23
 5404 002e FB68     		ldr	r3, [r7, #12]
 5405 0030 0022     		movs	r2, #0
 5406 0032 DA86     		strh	r2, [r3, #54]	@ movhi
2743:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2744:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Reset errorCode */
2745:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 5407              		.loc 1 2745 21
 5408 0034 FB68     		ldr	r3, [r7, #12]
 5409 0036 0022     		movs	r2, #0
 5410 0038 DA65     		str	r2, [r3, #92]
2746:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2747:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear the Error flags in the ICR register */
2748:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF | USART_CLEAR_NEF | USART_CLEAR_PEF | USART_CLEAR
 5411              		.loc 1 2748 3
 5412 003a FB68     		ldr	r3, [r7, #12]
 5413 003c 1B68     		ldr	r3, [r3]
 5414 003e 0F22     		movs	r2, #15
 5415 0040 1A62     		str	r2, [r3, #32]
2749:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2750:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Restore husart->State to Ready */
2751:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 5416              		.loc 1 2751 17
 5417 0042 FB68     		ldr	r3, [r7, #12]
 5418 0044 0122     		movs	r2, #1
 5419 0046 83F85920 		strb	r2, [r3, #89]
2752:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2753:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call user Abort complete callback */
2754:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2755:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Abort Complete Callback */
2756:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->AbortCpltCallback(husart);
2757:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2758:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Abort Complete Callback */
2759:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
 5420              		.loc 1 2759 3
 5421 004a F868     		ldr	r0, [r7, #12]
 5422 004c FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 5423 0050 00E0     		b	.L275
 5424              	.L278:
2736:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 5425              		.loc 1 2736 7
 5426 0052 00BF     		nop
 5427              	.L275:
2760:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2761:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2762:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5428              		.loc 1 2762 1
 5429 0054 1037     		adds	r7, r7, #16
 5430              	.LCFI195:
 5431              		.cfi_def_cfa_offset 8
 5432 0056 BD46     		mov	sp, r7
ARM GAS  /tmp/ccUeuQwq.s 			page 144


 5433              	.LCFI196:
 5434              		.cfi_def_cfa_register 13
 5435              		@ sp needed
 5436 0058 80BD     		pop	{r7, pc}
 5437              		.cfi_endproc
 5438              	.LFE366:
 5440              		.section	.text.USART_DMARxAbortCallback,"ax",%progbits
 5441              		.align	1
 5442              		.syntax unified
 5443              		.thumb
 5444              		.thumb_func
 5445              		.fpu fpv5-d16
 5447              	USART_DMARxAbortCallback:
 5448              	.LFB367:
2763:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2764:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2765:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2766:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  DMA USART Rx communication abort callback, when initiated by user
2767:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2768:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2769:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         Abort still ongoing for Tx DMA Handle.
2770:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  hdma DMA handle.
2771:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
2772:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2773:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2774:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5449              		.loc 1 2774 1
 5450              		.cfi_startproc
 5451              		@ args = 0, pretend = 0, frame = 16
 5452              		@ frame_needed = 1, uses_anonymous_args = 0
 5453 0000 80B5     		push	{r7, lr}
 5454              	.LCFI197:
 5455              		.cfi_def_cfa_offset 8
 5456              		.cfi_offset 7, -8
 5457              		.cfi_offset 14, -4
 5458 0002 84B0     		sub	sp, sp, #16
 5459              	.LCFI198:
 5460              		.cfi_def_cfa_offset 24
 5461 0004 00AF     		add	r7, sp, #0
 5462              	.LCFI199:
 5463              		.cfi_def_cfa_register 7
 5464 0006 7860     		str	r0, [r7, #4]
2775:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_HandleTypeDef *husart = (USART_HandleTypeDef *)(hdma->Parent);
 5465              		.loc 1 2775 24
 5466 0008 7B68     		ldr	r3, [r7, #4]
 5467 000a 9B6B     		ldr	r3, [r3, #56]
 5468 000c FB60     		str	r3, [r7, #12]
2776:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2777:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->hdmarx->XferAbortCallback = NULL;
 5469              		.loc 1 2777 9
 5470 000e FB68     		ldr	r3, [r7, #12]
 5471 0010 5B6D     		ldr	r3, [r3, #84]
 5472              		.loc 1 2777 37
 5473 0012 0022     		movs	r2, #0
 5474 0014 1A65     		str	r2, [r3, #80]
2778:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2779:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check if an Abort process is still ongoing */
ARM GAS  /tmp/ccUeuQwq.s 			page 145


2780:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->hdmatx != NULL)
 5475              		.loc 1 2780 13
 5476 0016 FB68     		ldr	r3, [r7, #12]
 5477 0018 1B6D     		ldr	r3, [r3, #80]
 5478              		.loc 1 2780 6
 5479 001a 002B     		cmp	r3, #0
 5480 001c 04D0     		beq	.L280
2781:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2782:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->hdmatx->XferAbortCallback != NULL)
 5481              		.loc 1 2782 15
 5482 001e FB68     		ldr	r3, [r7, #12]
 5483 0020 1B6D     		ldr	r3, [r3, #80]
 5484              		.loc 1 2782 23
 5485 0022 1B6D     		ldr	r3, [r3, #80]
 5486              		.loc 1 2782 8
 5487 0024 002B     		cmp	r3, #0
 5488 0026 14D1     		bne	.L282
 5489              	.L280:
2783:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return;
2785:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2786:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2787:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2788:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2789:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxXferCount = 0U;
 5490              		.loc 1 2789 23
 5491 0028 FB68     		ldr	r3, [r7, #12]
 5492 002a 0022     		movs	r2, #0
 5493 002c DA85     		strh	r2, [r3, #46]	@ movhi
2790:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxXferCount = 0U;
 5494              		.loc 1 2790 23
 5495 002e FB68     		ldr	r3, [r7, #12]
 5496 0030 0022     		movs	r2, #0
 5497 0032 DA86     		strh	r2, [r3, #54]	@ movhi
2791:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2792:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Reset errorCode */
2793:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 5498              		.loc 1 2793 21
 5499 0034 FB68     		ldr	r3, [r7, #12]
 5500 0036 0022     		movs	r2, #0
 5501 0038 DA65     		str	r2, [r3, #92]
2794:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2795:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear the Error flags in the ICR register */
2796:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_CLEAR_FLAG(husart, USART_CLEAR_OREF | USART_CLEAR_NEF | USART_CLEAR_PEF | USART_CLEAR
 5502              		.loc 1 2796 3
 5503 003a FB68     		ldr	r3, [r7, #12]
 5504 003c 1B68     		ldr	r3, [r3]
 5505 003e 0F22     		movs	r2, #15
 5506 0040 1A62     		str	r2, [r3, #32]
2797:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2798:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Restore husart->State to Ready */
2799:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State  = HAL_USART_STATE_READY;
 5507              		.loc 1 2799 18
 5508 0042 FB68     		ldr	r3, [r7, #12]
 5509 0044 0122     		movs	r2, #1
 5510 0046 83F85920 		strb	r2, [r3, #89]
2800:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 146


2801:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call user Abort complete callback */
2802:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
2803:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call registered Abort Complete Callback */
2804:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->AbortCpltCallback(husart);
2805:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
2806:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Call legacy weak Abort Complete Callback */
2807:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_AbortCpltCallback(husart);
 5511              		.loc 1 2807 3
 5512 004a F868     		ldr	r0, [r7, #12]
 5513 004c FFF7FEFF 		bl	HAL_USART_AbortCpltCallback
 5514 0050 00E0     		b	.L279
 5515              	.L282:
2784:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 5516              		.loc 1 2784 7
 5517 0052 00BF     		nop
 5518              	.L279:
2808:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
2809:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5519              		.loc 1 2809 1
 5520 0054 1037     		adds	r7, r7, #16
 5521              	.LCFI200:
 5522              		.cfi_def_cfa_offset 8
 5523 0056 BD46     		mov	sp, r7
 5524              	.LCFI201:
 5525              		.cfi_def_cfa_register 13
 5526              		@ sp needed
 5527 0058 80BD     		pop	{r7, pc}
 5528              		.cfi_endproc
 5529              	.LFE367:
 5531              		.section	.text.USART_WaitOnFlagUntilTimeout,"ax",%progbits
 5532              		.align	1
 5533              		.syntax unified
 5534              		.thumb
 5535              		.thumb_func
 5536              		.fpu fpv5-d16
 5538              	USART_WaitOnFlagUntilTimeout:
 5539              	.LFB368:
2810:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2811:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2812:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2813:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Handle USART Communication Timeout.
2814:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
2815:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Flag Specifies the USART flag to check.
2816:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Status the Flag status (SET or RESET).
2817:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Tickstart Tick start value
2818:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  Timeout timeout duration.
2819:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
2820:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2821:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_WaitOnFlagUntilTimeout(USART_HandleTypeDef *husart, uint32_t Flag, F
2822:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                       uint32_t Tickstart, uint32_t Timeout)
2823:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5540              		.loc 1 2823 1
 5541              		.cfi_startproc
 5542              		@ args = 4, pretend = 0, frame = 16
 5543              		@ frame_needed = 1, uses_anonymous_args = 0
 5544 0000 80B5     		push	{r7, lr}
 5545              	.LCFI202:
ARM GAS  /tmp/ccUeuQwq.s 			page 147


 5546              		.cfi_def_cfa_offset 8
 5547              		.cfi_offset 7, -8
 5548              		.cfi_offset 14, -4
 5549 0002 84B0     		sub	sp, sp, #16
 5550              	.LCFI203:
 5551              		.cfi_def_cfa_offset 24
 5552 0004 00AF     		add	r7, sp, #0
 5553              	.LCFI204:
 5554              		.cfi_def_cfa_register 7
 5555 0006 F860     		str	r0, [r7, #12]
 5556 0008 B960     		str	r1, [r7, #8]
 5557 000a 3B60     		str	r3, [r7]
 5558 000c 1346     		mov	r3, r2
 5559 000e FB71     		strb	r3, [r7, #7]
2824:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Wait until flag is set */
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   while ((__HAL_USART_GET_FLAG(husart, Flag) ? SET : RESET) == Status)
 5560              		.loc 1 2825 9
 5561 0010 18E0     		b	.L284
 5562              	.L287:
2826:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2827:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Check for the Timeout */
2828:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (Timeout != HAL_MAX_DELAY)
 5563              		.loc 1 2828 8
 5564 0012 BB69     		ldr	r3, [r7, #24]
 5565 0014 B3F1FF3F 		cmp	r3, #-1
 5566 0018 14D0     		beq	.L284
2829:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2830:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 5567              		.loc 1 2830 13
 5568 001a FFF7FEFF 		bl	HAL_GetTick
 5569 001e 0246     		mov	r2, r0
 5570              		.loc 1 2830 27
 5571 0020 3B68     		ldr	r3, [r7]
 5572 0022 D31A     		subs	r3, r2, r3
 5573              		.loc 1 2830 10
 5574 0024 BA69     		ldr	r2, [r7, #24]
 5575 0026 9A42     		cmp	r2, r3
 5576 0028 02D3     		bcc	.L285
 5577              		.loc 1 2830 51 discriminator 1
 5578 002a BB69     		ldr	r3, [r7, #24]
 5579 002c 002B     		cmp	r3, #0
 5580 002e 09D1     		bne	.L284
 5581              	.L285:
2831:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2832:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
 5582              		.loc 1 2832 23
 5583 0030 FB68     		ldr	r3, [r7, #12]
 5584 0032 0122     		movs	r2, #1
 5585 0034 83F85920 		strb	r2, [r3, #89]
2833:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2834:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Process Unlocked */
2835:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_UNLOCK(husart);
 5586              		.loc 1 2835 9
 5587 0038 FB68     		ldr	r3, [r7, #12]
 5588 003a 0022     		movs	r2, #0
 5589 003c 83F85820 		strb	r2, [r3, #88]
2836:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 148


2837:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         return HAL_TIMEOUT;
 5590              		.loc 1 2837 16
 5591 0040 0323     		movs	r3, #3
 5592 0042 0FE0     		b	.L286
 5593              	.L284:
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 5594              		.loc 1 2825 11
 5595 0044 FB68     		ldr	r3, [r7, #12]
 5596 0046 1B68     		ldr	r3, [r3]
 5597 0048 DA69     		ldr	r2, [r3, #28]
 5598 004a BB68     		ldr	r3, [r7, #8]
 5599 004c 1340     		ands	r3, r3, r2
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 5600              		.loc 1 2825 52
 5601 004e BA68     		ldr	r2, [r7, #8]
 5602 0050 9A42     		cmp	r2, r3
 5603 0052 0CBF     		ite	eq
 5604 0054 0123     		moveq	r3, #1
 5605 0056 0023     		movne	r3, #0
 5606 0058 DBB2     		uxtb	r3, r3
 5607 005a 1A46     		mov	r2, r3
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 5608              		.loc 1 2825 61
 5609 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2825:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 5610              		.loc 1 2825 9
 5611 005e 9A42     		cmp	r2, r3
 5612 0060 D7D0     		beq	.L287
2838:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2839:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2840:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2841:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 5613              		.loc 1 2841 10
 5614 0062 0023     		movs	r3, #0
 5615              	.L286:
2842:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 5616              		.loc 1 2842 1
 5617 0064 1846     		mov	r0, r3
 5618 0066 1037     		adds	r7, r7, #16
 5619              	.LCFI205:
 5620              		.cfi_def_cfa_offset 8
 5621 0068 BD46     		mov	sp, r7
 5622              	.LCFI206:
 5623              		.cfi_def_cfa_register 13
 5624              		@ sp needed
 5625 006a 80BD     		pop	{r7, pc}
 5626              		.cfi_endproc
 5627              	.LFE368:
 5629              		.section	.text.USART_SetConfig,"ax",%progbits
 5630              		.align	1
 5631              		.syntax unified
 5632              		.thumb
 5633              		.thumb_func
 5634              		.fpu fpv5-d16
 5636              	USART_SetConfig:
 5637              	.LFB369:
2843:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 149


2844:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2845:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Configure the USART peripheral.
2846:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2847:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
2848:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2849:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_SetConfig(USART_HandleTypeDef *husart)
2850:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 5638              		.loc 1 2850 1
 5639              		.cfi_startproc
 5640              		@ args = 0, pretend = 0, frame = 56
 5641              		@ frame_needed = 1, uses_anonymous_args = 0
 5642 0000 80B5     		push	{r7, lr}
 5643              	.LCFI207:
 5644              		.cfi_def_cfa_offset 8
 5645              		.cfi_offset 7, -8
 5646              		.cfi_offset 14, -4
 5647 0002 8EB0     		sub	sp, sp, #56
 5648              	.LCFI208:
 5649              		.cfi_def_cfa_offset 64
 5650 0004 00AF     		add	r7, sp, #0
 5651              	.LCFI209:
 5652              		.cfi_def_cfa_register 7
 5653 0006 7860     		str	r0, [r7, #4]
2851:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t tmpreg;
2852:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_ClockSourceTypeDef clocksource;
2853:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_StatusTypeDef ret                = HAL_OK;
 5654              		.loc 1 2853 21
 5655 0008 0023     		movs	r3, #0
 5656 000a 87F83630 		strb	r3, [r7, #54]
2854:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t brrtemp;
2855:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t usartdiv                    = 0x00000000;
 5657              		.loc 1 2855 12
 5658 000e 0023     		movs	r3, #0
 5659 0010 3B63     		str	r3, [r7, #48]
2856:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   PLL2_ClocksTypeDef pll2_clocks;
2857:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   PLL3_ClocksTypeDef pll3_clocks;
2858:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t pclk;
2859:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2860:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check the parameters */
2861:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_POLARITY(husart->Init.CLKPolarity));
2862:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_PHASE(husart->Init.CLKPhase));
2863:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_LASTBIT(husart->Init.CLKLastBit));
2864:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_BAUDRATE(husart->Init.BaudRate));
2865:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_WORD_LENGTH(husart->Init.WordLength));
2866:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_STOPBITS(husart->Init.StopBits));
2867:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_PARITY(husart->Init.Parity));
2868:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_MODE(husart->Init.Mode));
2869:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   assert_param(IS_USART_PRESCALER(husart->Init.ClockPrescaler));
2870:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2871:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2872:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear M, PCE, PS, TE and RE bits and configure
2873:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  the USART Word Length, Parity and Mode:
2874:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  set the M bits according to husart->Init.WordLength value
2875:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  set PCE and PS bits according to husart->Init.Parity value
2876:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  set TE and RE bits according to husart->Init.Mode value
2877:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *  force OVER8 to 1 to allow to reach the maximum speed (Fclock/8) */
2878:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tmpreg = (uint32_t)husart->Init.WordLength | husart->Init.Parity | husart->Init.Mode | USART_CR1_
ARM GAS  /tmp/ccUeuQwq.s 			page 150


 5660              		.loc 1 2878 34
 5661 0012 7B68     		ldr	r3, [r7, #4]
 5662 0014 9A68     		ldr	r2, [r3, #8]
 5663              		.loc 1 2878 60
 5664 0016 7B68     		ldr	r3, [r7, #4]
 5665 0018 1B69     		ldr	r3, [r3, #16]
 5666              		.loc 1 2878 46
 5667 001a 1A43     		orrs	r2, r2, r3
 5668              		.loc 1 2878 82
 5669 001c 7B68     		ldr	r3, [r7, #4]
 5670 001e 5B69     		ldr	r3, [r3, #20]
 5671              		.loc 1 2878 68
 5672 0020 1343     		orrs	r3, r3, r2
 5673              		.loc 1 2878 10
 5674 0022 43F40043 		orr	r3, r3, #32768
 5675 0026 FB62     		str	r3, [r7, #44]
2879:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   MODIFY_REG(husart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 5676              		.loc 1 2879 3
 5677 0028 7B68     		ldr	r3, [r7, #4]
 5678 002a 1B68     		ldr	r3, [r3]
 5679 002c 1A68     		ldr	r2, [r3]
 5680 002e C94B     		ldr	r3, .L537
 5681 0030 1340     		ands	r3, r3, r2
 5682 0032 7A68     		ldr	r2, [r7, #4]
 5683 0034 1268     		ldr	r2, [r2]
 5684 0036 F96A     		ldr	r1, [r7, #44]
 5685 0038 0B43     		orrs	r3, r3, r1
 5686 003a 1360     		str	r3, [r2]
2880:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2881:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /*---------------------------- USART CR2 Configuration ---------------------*/
2882:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear and configure the USART Clock, CPOL, CPHA, LBCL STOP and SLVEN bits:
2883:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    * set CPOL bit according to husart->Init.CLKPolarity value
2884:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    * set CPHA bit according to husart->Init.CLKPhase value
2885:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    * set LBCL bit according to husart->Init.CLKLastBit value (used in SPI master mode only)
2886:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    * set STOP[13:12] bits according to husart->Init.StopBits value */
2887:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tmpreg = (uint32_t)(USART_CLOCK_ENABLE);
 5687              		.loc 1 2887 10
 5688 003c 4FF40063 		mov	r3, #2048
 5689 0040 FB62     		str	r3, [r7, #44]
2888:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tmpreg |= (uint32_t)husart->Init.CLKLastBit;
 5690              		.loc 1 2888 35
 5691 0042 7B68     		ldr	r3, [r7, #4]
 5692 0044 1B6A     		ldr	r3, [r3, #32]
 5693              		.loc 1 2888 10
 5694 0046 FA6A     		ldr	r2, [r7, #44]
 5695 0048 1343     		orrs	r3, r3, r2
 5696 004a FB62     		str	r3, [r7, #44]
2889:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tmpreg |= ((uint32_t)husart->Init.CLKPolarity | (uint32_t)husart->Init.CLKPhase);
 5697              		.loc 1 2889 36
 5698 004c 7B68     		ldr	r3, [r7, #4]
 5699 004e 9A69     		ldr	r2, [r3, #24]
 5700              		.loc 1 2889 73
 5701 0050 7B68     		ldr	r3, [r7, #4]
 5702 0052 DB69     		ldr	r3, [r3, #28]
 5703              		.loc 1 2889 49
 5704 0054 1343     		orrs	r3, r3, r2
 5705              		.loc 1 2889 10
ARM GAS  /tmp/ccUeuQwq.s 			page 151


 5706 0056 FA6A     		ldr	r2, [r7, #44]
 5707 0058 1343     		orrs	r3, r3, r2
 5708 005a FB62     		str	r3, [r7, #44]
2890:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tmpreg |= (uint32_t)husart->Init.StopBits;
 5709              		.loc 1 2890 35
 5710 005c 7B68     		ldr	r3, [r7, #4]
 5711 005e DB68     		ldr	r3, [r3, #12]
 5712              		.loc 1 2890 10
 5713 0060 FA6A     		ldr	r2, [r7, #44]
 5714 0062 1343     		orrs	r3, r3, r2
 5715 0064 FB62     		str	r3, [r7, #44]
2891:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   MODIFY_REG(husart->Instance->CR2, USART_CR2_FIELDS, tmpreg);
 5716              		.loc 1 2891 3
 5717 0066 7B68     		ldr	r3, [r7, #4]
 5718 0068 1B68     		ldr	r3, [r3]
 5719 006a 5A68     		ldr	r2, [r3, #4]
 5720 006c BA4B     		ldr	r3, .L537+4
 5721 006e 1340     		ands	r3, r3, r2
 5722 0070 7A68     		ldr	r2, [r7, #4]
 5723 0072 1268     		ldr	r2, [r2]
 5724 0074 F96A     		ldr	r1, [r7, #44]
 5725 0076 0B43     		orrs	r3, r3, r1
 5726 0078 5360     		str	r3, [r2, #4]
2892:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2893:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2894:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Configure
2895:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****    * - USART Clock Prescaler : set PRESCALER according to husart->Init.ClockPrescaler value */
2896:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   MODIFY_REG(husart->Instance->PRESC, USART_PRESC_PRESCALER, husart->Init.ClockPrescaler);
 5727              		.loc 1 2896 3
 5728 007a 7B68     		ldr	r3, [r7, #4]
 5729 007c 1B68     		ldr	r3, [r3]
 5730 007e DB6A     		ldr	r3, [r3, #44]
 5731 0080 23F00F01 		bic	r1, r3, #15
 5732 0084 7B68     		ldr	r3, [r7, #4]
 5733 0086 5A6A     		ldr	r2, [r3, #36]
 5734 0088 7B68     		ldr	r3, [r7, #4]
 5735 008a 1B68     		ldr	r3, [r3]
 5736 008c 0A43     		orrs	r2, r2, r1
 5737 008e DA62     		str	r2, [r3, #44]
2897:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2898:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2899:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* BRR is filled-up according to OVER8 bit setting which is forced to 1     */
2900:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   USART_GETCLOCKSOURCE(husart, clocksource);
 5738              		.loc 1 2900 3
 5739 0090 7B68     		ldr	r3, [r7, #4]
 5740 0092 1B68     		ldr	r3, [r3]
 5741 0094 B14A     		ldr	r2, .L537+8
 5742 0096 9342     		cmp	r3, r2
 5743 0098 76D1     		bne	.L289
 5744              		.loc 1 2900 3 is_stmt 0 discriminator 1
 5745 009a B14B     		ldr	r3, .L537+12
 5746 009c 5B6D     		ldr	r3, [r3, #84]
 5747 009e 03F03803 		and	r3, r3, #56
 5748 00a2 282B     		cmp	r3, #40
 5749 00a4 6CD8     		bhi	.L290
 5750 00a6 01A2     		adr	r2, .L292
 5751 00a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  /tmp/ccUeuQwq.s 			page 152


 5752              		.p2align 2
 5753              	.L292:
 5754 00ac 51010000 		.word	.L297+1
 5755 00b0 81010000 		.word	.L290+1
 5756 00b4 81010000 		.word	.L290+1
 5757 00b8 81010000 		.word	.L290+1
 5758 00bc 81010000 		.word	.L290+1
 5759 00c0 81010000 		.word	.L290+1
 5760 00c4 81010000 		.word	.L290+1
 5761 00c8 81010000 		.word	.L290+1
 5762 00cc 59010000 		.word	.L296+1
 5763 00d0 81010000 		.word	.L290+1
 5764 00d4 81010000 		.word	.L290+1
 5765 00d8 81010000 		.word	.L290+1
 5766 00dc 81010000 		.word	.L290+1
 5767 00e0 81010000 		.word	.L290+1
 5768 00e4 81010000 		.word	.L290+1
 5769 00e8 81010000 		.word	.L290+1
 5770 00ec 61010000 		.word	.L295+1
 5771 00f0 81010000 		.word	.L290+1
 5772 00f4 81010000 		.word	.L290+1
 5773 00f8 81010000 		.word	.L290+1
 5774 00fc 81010000 		.word	.L290+1
 5775 0100 81010000 		.word	.L290+1
 5776 0104 81010000 		.word	.L290+1
 5777 0108 81010000 		.word	.L290+1
 5778 010c 69010000 		.word	.L294+1
 5779 0110 81010000 		.word	.L290+1
 5780 0114 81010000 		.word	.L290+1
 5781 0118 81010000 		.word	.L290+1
 5782 011c 81010000 		.word	.L290+1
 5783 0120 81010000 		.word	.L290+1
 5784 0124 81010000 		.word	.L290+1
 5785 0128 81010000 		.word	.L290+1
 5786 012c 71010000 		.word	.L293+1
 5787 0130 81010000 		.word	.L290+1
 5788 0134 81010000 		.word	.L290+1
 5789 0138 81010000 		.word	.L290+1
 5790 013c 81010000 		.word	.L290+1
 5791 0140 81010000 		.word	.L290+1
 5792 0144 81010000 		.word	.L290+1
 5793 0148 81010000 		.word	.L290+1
 5794 014c 79010000 		.word	.L291+1
 5795              		.p2align 1
 5796              	.L297:
 5797              		.loc 1 2900 3 discriminator 4
 5798 0150 0123     		movs	r3, #1
 5799 0152 87F83730 		strb	r3, [r7, #55]
 5800 0156 12E1     		b	.L299
 5801              	.L296:
 5802              		.loc 1 2900 3 discriminator 5
 5803 0158 0223     		movs	r3, #2
 5804 015a 87F83730 		strb	r3, [r7, #55]
 5805 015e 0EE1     		b	.L299
 5806              	.L295:
 5807              		.loc 1 2900 3 discriminator 6
 5808 0160 0423     		movs	r3, #4
ARM GAS  /tmp/ccUeuQwq.s 			page 153


 5809 0162 87F83730 		strb	r3, [r7, #55]
 5810 0166 0AE1     		b	.L299
 5811              	.L294:
 5812              		.loc 1 2900 3 discriminator 7
 5813 0168 0823     		movs	r3, #8
 5814 016a 87F83730 		strb	r3, [r7, #55]
 5815 016e 06E1     		b	.L299
 5816              	.L293:
 5817              		.loc 1 2900 3 discriminator 8
 5818 0170 1023     		movs	r3, #16
 5819 0172 87F83730 		strb	r3, [r7, #55]
 5820 0176 02E1     		b	.L299
 5821              	.L291:
 5822              		.loc 1 2900 3 discriminator 9
 5823 0178 2023     		movs	r3, #32
 5824 017a 87F83730 		strb	r3, [r7, #55]
 5825 017e FEE0     		b	.L299
 5826              	.L290:
 5827              		.loc 1 2900 3 discriminator 3
 5828 0180 4023     		movs	r3, #64
 5829 0182 87F83730 		strb	r3, [r7, #55]
 5830 0186 FAE0     		b	.L299
 5831              	.L289:
 5832              		.loc 1 2900 3 discriminator 2
 5833 0188 7B68     		ldr	r3, [r7, #4]
 5834 018a 1B68     		ldr	r3, [r3]
 5835 018c 754A     		ldr	r2, .L537+16
 5836 018e 9342     		cmp	r3, r2
 5837 0190 30D1     		bne	.L300
 5838              		.loc 1 2900 3 discriminator 17
 5839 0192 734B     		ldr	r3, .L537+12
 5840 0194 5B6D     		ldr	r3, [r3, #84]
 5841 0196 03F00703 		and	r3, r3, #7
 5842 019a 052B     		cmp	r3, #5
 5843 019c 26D8     		bhi	.L301
 5844 019e 01A2     		adr	r2, .L303
 5845 01a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5846              		.p2align 2
 5847              	.L303:
 5848 01a4 BD010000 		.word	.L308+1
 5849 01a8 C5010000 		.word	.L307+1
 5850 01ac CD010000 		.word	.L306+1
 5851 01b0 D5010000 		.word	.L305+1
 5852 01b4 DD010000 		.word	.L304+1
 5853 01b8 E5010000 		.word	.L302+1
 5854              		.p2align 1
 5855              	.L308:
 5856              		.loc 1 2900 3 discriminator 20
 5857 01bc 0023     		movs	r3, #0
 5858 01be 87F83730 		strb	r3, [r7, #55]
 5859 01c2 DCE0     		b	.L299
 5860              	.L307:
 5861              		.loc 1 2900 3 discriminator 21
 5862 01c4 0223     		movs	r3, #2
 5863 01c6 87F83730 		strb	r3, [r7, #55]
 5864 01ca D8E0     		b	.L299
 5865              	.L306:
ARM GAS  /tmp/ccUeuQwq.s 			page 154


 5866              		.loc 1 2900 3 discriminator 22
 5867 01cc 0423     		movs	r3, #4
 5868 01ce 87F83730 		strb	r3, [r7, #55]
 5869 01d2 D4E0     		b	.L299
 5870              	.L305:
 5871              		.loc 1 2900 3 discriminator 23
 5872 01d4 0823     		movs	r3, #8
 5873 01d6 87F83730 		strb	r3, [r7, #55]
 5874 01da D0E0     		b	.L299
 5875              	.L304:
 5876              		.loc 1 2900 3 discriminator 24
 5877 01dc 1023     		movs	r3, #16
 5878 01de 87F83730 		strb	r3, [r7, #55]
 5879 01e2 CCE0     		b	.L299
 5880              	.L302:
 5881              		.loc 1 2900 3 discriminator 25
 5882 01e4 2023     		movs	r3, #32
 5883 01e6 87F83730 		strb	r3, [r7, #55]
 5884 01ea C8E0     		b	.L299
 5885              	.L301:
 5886              		.loc 1 2900 3 discriminator 19
 5887 01ec 4023     		movs	r3, #64
 5888 01ee 87F83730 		strb	r3, [r7, #55]
 5889 01f2 C4E0     		b	.L299
 5890              	.L300:
 5891              		.loc 1 2900 3 discriminator 18
 5892 01f4 7B68     		ldr	r3, [r7, #4]
 5893 01f6 1B68     		ldr	r3, [r3]
 5894 01f8 5B4A     		ldr	r2, .L537+20
 5895 01fa 9342     		cmp	r3, r2
 5896 01fc 30D1     		bne	.L310
 5897              		.loc 1 2900 3 discriminator 33
 5898 01fe 584B     		ldr	r3, .L537+12
 5899 0200 5B6D     		ldr	r3, [r3, #84]
 5900 0202 03F00703 		and	r3, r3, #7
 5901 0206 052B     		cmp	r3, #5
 5902 0208 26D8     		bhi	.L311
 5903 020a 01A2     		adr	r2, .L313
 5904 020c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5905              		.p2align 2
 5906              	.L313:
 5907 0210 29020000 		.word	.L318+1
 5908 0214 31020000 		.word	.L317+1
 5909 0218 39020000 		.word	.L316+1
 5910 021c 41020000 		.word	.L315+1
 5911 0220 49020000 		.word	.L314+1
 5912 0224 51020000 		.word	.L312+1
 5913              		.p2align 1
 5914              	.L318:
 5915              		.loc 1 2900 3 discriminator 36
 5916 0228 0023     		movs	r3, #0
 5917 022a 87F83730 		strb	r3, [r7, #55]
 5918 022e A6E0     		b	.L299
 5919              	.L317:
 5920              		.loc 1 2900 3 discriminator 37
 5921 0230 0223     		movs	r3, #2
 5922 0232 87F83730 		strb	r3, [r7, #55]
ARM GAS  /tmp/ccUeuQwq.s 			page 155


 5923 0236 A2E0     		b	.L299
 5924              	.L316:
 5925              		.loc 1 2900 3 discriminator 38
 5926 0238 0423     		movs	r3, #4
 5927 023a 87F83730 		strb	r3, [r7, #55]
 5928 023e 9EE0     		b	.L299
 5929              	.L315:
 5930              		.loc 1 2900 3 discriminator 39
 5931 0240 0823     		movs	r3, #8
 5932 0242 87F83730 		strb	r3, [r7, #55]
 5933 0246 9AE0     		b	.L299
 5934              	.L314:
 5935              		.loc 1 2900 3 discriminator 40
 5936 0248 1023     		movs	r3, #16
 5937 024a 87F83730 		strb	r3, [r7, #55]
 5938 024e 96E0     		b	.L299
 5939              	.L312:
 5940              		.loc 1 2900 3 discriminator 41
 5941 0250 2023     		movs	r3, #32
 5942 0252 87F83730 		strb	r3, [r7, #55]
 5943 0256 92E0     		b	.L299
 5944              	.L311:
 5945              		.loc 1 2900 3 discriminator 35
 5946 0258 4023     		movs	r3, #64
 5947 025a 87F83730 		strb	r3, [r7, #55]
 5948 025e 8EE0     		b	.L299
 5949              	.L310:
 5950              		.loc 1 2900 3 discriminator 34
 5951 0260 7B68     		ldr	r3, [r7, #4]
 5952 0262 1B68     		ldr	r3, [r3]
 5953 0264 414A     		ldr	r2, .L537+24
 5954 0266 9342     		cmp	r3, r2
 5955 0268 40F08680 		bne	.L320
 5956              		.loc 1 2900 3 discriminator 49
 5957 026c 3C4B     		ldr	r3, .L537+12
 5958 026e 5B6D     		ldr	r3, [r3, #84]
 5959 0270 03F03803 		and	r3, r3, #56
 5960 0274 282B     		cmp	r3, #40
 5961 0276 7BD8     		bhi	.L321
 5962 0278 01A2     		adr	r2, .L323
 5963 027a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5964 027e 00BF     		.p2align 2
 5965              	.L323:
 5966 0280 25030000 		.word	.L328+1
 5967 0284 71030000 		.word	.L321+1
 5968 0288 71030000 		.word	.L321+1
 5969 028c 71030000 		.word	.L321+1
 5970 0290 71030000 		.word	.L321+1
 5971 0294 71030000 		.word	.L321+1
 5972 0298 71030000 		.word	.L321+1
 5973 029c 71030000 		.word	.L321+1
 5974 02a0 2D030000 		.word	.L327+1
 5975 02a4 71030000 		.word	.L321+1
 5976 02a8 71030000 		.word	.L321+1
 5977 02ac 71030000 		.word	.L321+1
 5978 02b0 71030000 		.word	.L321+1
 5979 02b4 71030000 		.word	.L321+1
ARM GAS  /tmp/ccUeuQwq.s 			page 156


 5980 02b8 71030000 		.word	.L321+1
 5981 02bc 71030000 		.word	.L321+1
 5982 02c0 35030000 		.word	.L326+1
 5983 02c4 71030000 		.word	.L321+1
 5984 02c8 71030000 		.word	.L321+1
 5985 02cc 71030000 		.word	.L321+1
 5986 02d0 71030000 		.word	.L321+1
 5987 02d4 71030000 		.word	.L321+1
 5988 02d8 71030000 		.word	.L321+1
 5989 02dc 71030000 		.word	.L321+1
 5990 02e0 3D030000 		.word	.L325+1
 5991 02e4 71030000 		.word	.L321+1
 5992 02e8 71030000 		.word	.L321+1
 5993 02ec 71030000 		.word	.L321+1
 5994 02f0 71030000 		.word	.L321+1
 5995 02f4 71030000 		.word	.L321+1
 5996 02f8 71030000 		.word	.L321+1
 5997 02fc 71030000 		.word	.L321+1
 5998 0300 45030000 		.word	.L324+1
 5999 0304 71030000 		.word	.L321+1
 6000 0308 71030000 		.word	.L321+1
 6001 030c 71030000 		.word	.L321+1
 6002 0310 71030000 		.word	.L321+1
 6003 0314 71030000 		.word	.L321+1
 6004 0318 71030000 		.word	.L321+1
 6005 031c 71030000 		.word	.L321+1
 6006 0320 4D030000 		.word	.L322+1
 6007              		.p2align 1
 6008              	.L328:
 6009              		.loc 1 2900 3 discriminator 52
 6010 0324 0123     		movs	r3, #1
 6011 0326 87F83730 		strb	r3, [r7, #55]
 6012 032a 28E0     		b	.L299
 6013              	.L327:
 6014              		.loc 1 2900 3 discriminator 53
 6015 032c 0223     		movs	r3, #2
 6016 032e 87F83730 		strb	r3, [r7, #55]
 6017 0332 24E0     		b	.L299
 6018              	.L326:
 6019              		.loc 1 2900 3 discriminator 54
 6020 0334 0423     		movs	r3, #4
 6021 0336 87F83730 		strb	r3, [r7, #55]
 6022 033a 20E0     		b	.L299
 6023              	.L325:
 6024              		.loc 1 2900 3 discriminator 55
 6025 033c 0823     		movs	r3, #8
 6026 033e 87F83730 		strb	r3, [r7, #55]
 6027 0342 1CE0     		b	.L299
 6028              	.L324:
 6029              		.loc 1 2900 3 discriminator 56
 6030 0344 1023     		movs	r3, #16
 6031 0346 87F83730 		strb	r3, [r7, #55]
 6032 034a 18E0     		b	.L299
 6033              	.L322:
 6034              		.loc 1 2900 3 discriminator 57
 6035 034c 2023     		movs	r3, #32
 6036 034e 87F83730 		strb	r3, [r7, #55]
ARM GAS  /tmp/ccUeuQwq.s 			page 157


 6037 0352 14E0     		b	.L299
 6038              	.L538:
 6039              		.align	2
 6040              	.L537:
 6041 0354 F369FFCF 		.word	-805344781
 6042 0358 F6C0FFFF 		.word	-16138
 6043 035c 00100140 		.word	1073811456
 6044 0360 00440258 		.word	1476543488
 6045 0364 00440040 		.word	1073759232
 6046 0368 00480040 		.word	1073760256
 6047 036c 00140140 		.word	1073812480
 6048              	.L321:
 6049              		.loc 1 2900 3 discriminator 51
 6050 0370 4023     		movs	r3, #64
 6051 0372 87F83730 		strb	r3, [r7, #55]
 6052 0376 02E0     		b	.L299
 6053              	.L320:
 6054              		.loc 1 2900 3 discriminator 50
 6055 0378 4023     		movs	r3, #64
 6056 037a 87F83730 		strb	r3, [r7, #55]
 6057              	.L299:
2901:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2902:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   switch (clocksource)
 6058              		.loc 1 2902 3 is_stmt 1
 6059 037e 97F83730 		ldrb	r3, [r7, #55]	@ zero_extendqisi2
 6060 0382 202B     		cmp	r3, #32
 6061 0384 00F22983 		bhi	.L330
 6062 0388 01A2     		adr	r2, .L332
 6063 038a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6064 038e 00BF     		.p2align 2
 6065              	.L332:
 6066 0390 15040000 		.word	.L338+1
 6067 0394 CB040000 		.word	.L337+1
 6068 0398 81050000 		.word	.L336+1
 6069 039c DB090000 		.word	.L330+1
 6070 03a0 3B060000 		.word	.L335+1
 6071 03a4 DB090000 		.word	.L330+1
 6072 03a8 DB090000 		.word	.L330+1
 6073 03ac DB090000 		.word	.L330+1
 6074 03b0 F5060000 		.word	.L334+1
 6075 03b4 DB090000 		.word	.L330+1
 6076 03b8 DB090000 		.word	.L330+1
 6077 03bc DB090000 		.word	.L330+1
 6078 03c0 DB090000 		.word	.L330+1
 6079 03c4 DB090000 		.word	.L330+1
 6080 03c8 DB090000 		.word	.L330+1
 6081 03cc DB090000 		.word	.L330+1
 6082 03d0 6D080000 		.word	.L333+1
 6083 03d4 DB090000 		.word	.L330+1
 6084 03d8 DB090000 		.word	.L330+1
 6085 03dc DB090000 		.word	.L330+1
 6086 03e0 DB090000 		.word	.L330+1
 6087 03e4 DB090000 		.word	.L330+1
 6088 03e8 DB090000 		.word	.L330+1
 6089 03ec DB090000 		.word	.L330+1
 6090 03f0 DB090000 		.word	.L330+1
 6091 03f4 DB090000 		.word	.L330+1
ARM GAS  /tmp/ccUeuQwq.s 			page 158


 6092 03f8 DB090000 		.word	.L330+1
 6093 03fc DB090000 		.word	.L330+1
 6094 0400 DB090000 		.word	.L330+1
 6095 0404 DB090000 		.word	.L330+1
 6096 0408 DB090000 		.word	.L330+1
 6097 040c DB090000 		.word	.L330+1
 6098 0410 29090000 		.word	.L331+1
 6099              		.p2align 1
 6100              	.L338:
2903:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2904:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_D2PCLK1:
2905:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 6101              		.loc 1 2905 14
 6102 0414 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 6103 0418 B862     		str	r0, [r7, #40]
2906:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(pclk, husart->Init.BaudRate, husart->Init.ClockPres
 6104              		.loc 1 2906 29
 6105 041a 7B68     		ldr	r3, [r7, #4]
 6106 041c 5B6A     		ldr	r3, [r3, #36]
 6107 041e 002B     		cmp	r3, #0
 6108 0420 44D0     		beq	.L339
 6109              		.loc 1 2906 29 is_stmt 0 discriminator 1
 6110 0422 7B68     		ldr	r3, [r7, #4]
 6111 0424 5B6A     		ldr	r3, [r3, #36]
 6112 0426 012B     		cmp	r3, #1
 6113 0428 3ED0     		beq	.L340
 6114              		.loc 1 2906 29 discriminator 3
 6115 042a 7B68     		ldr	r3, [r7, #4]
 6116 042c 5B6A     		ldr	r3, [r3, #36]
 6117 042e 022B     		cmp	r3, #2
 6118 0430 38D0     		beq	.L341
 6119              		.loc 1 2906 29 discriminator 5
 6120 0432 7B68     		ldr	r3, [r7, #4]
 6121 0434 5B6A     		ldr	r3, [r3, #36]
 6122 0436 032B     		cmp	r3, #3
 6123 0438 32D0     		beq	.L342
 6124              		.loc 1 2906 29 discriminator 7
 6125 043a 7B68     		ldr	r3, [r7, #4]
 6126 043c 5B6A     		ldr	r3, [r3, #36]
 6127 043e 042B     		cmp	r3, #4
 6128 0440 2CD0     		beq	.L343
 6129              		.loc 1 2906 29 discriminator 9
 6130 0442 7B68     		ldr	r3, [r7, #4]
 6131 0444 5B6A     		ldr	r3, [r3, #36]
 6132 0446 052B     		cmp	r3, #5
 6133 0448 26D0     		beq	.L344
 6134              		.loc 1 2906 29 discriminator 11
 6135 044a 7B68     		ldr	r3, [r7, #4]
 6136 044c 5B6A     		ldr	r3, [r3, #36]
 6137 044e 062B     		cmp	r3, #6
 6138 0450 20D0     		beq	.L345
 6139              		.loc 1 2906 29 discriminator 13
 6140 0452 7B68     		ldr	r3, [r7, #4]
 6141 0454 5B6A     		ldr	r3, [r3, #36]
 6142 0456 072B     		cmp	r3, #7
 6143 0458 1AD0     		beq	.L346
 6144              		.loc 1 2906 29 discriminator 15
ARM GAS  /tmp/ccUeuQwq.s 			page 159


 6145 045a 7B68     		ldr	r3, [r7, #4]
 6146 045c 5B6A     		ldr	r3, [r3, #36]
 6147 045e 082B     		cmp	r3, #8
 6148 0460 14D0     		beq	.L347
 6149              		.loc 1 2906 29 discriminator 17
 6150 0462 7B68     		ldr	r3, [r7, #4]
 6151 0464 5B6A     		ldr	r3, [r3, #36]
 6152 0466 092B     		cmp	r3, #9
 6153 0468 0ED0     		beq	.L348
 6154              		.loc 1 2906 29 discriminator 19
 6155 046a 7B68     		ldr	r3, [r7, #4]
 6156 046c 5B6A     		ldr	r3, [r3, #36]
 6157 046e 0A2B     		cmp	r3, #10
 6158 0470 08D0     		beq	.L349
 6159              		.loc 1 2906 29 discriminator 21
 6160 0472 7B68     		ldr	r3, [r7, #4]
 6161 0474 5B6A     		ldr	r3, [r3, #36]
 6162 0476 0B2B     		cmp	r3, #11
 6163 0478 02D1     		bne	.L350
 6164              		.loc 1 2906 29 discriminator 23
 6165 047a 4FF48073 		mov	r3, #256
 6166 047e 16E0     		b	.L362
 6167              	.L350:
 6168              		.loc 1 2906 29 discriminator 24
 6169 0480 0123     		movs	r3, #1
 6170 0482 14E0     		b	.L362
 6171              	.L349:
 6172              		.loc 1 2906 29 discriminator 22
 6173 0484 8023     		movs	r3, #128
 6174 0486 12E0     		b	.L362
 6175              	.L348:
 6176              		.loc 1 2906 29 discriminator 20
 6177 0488 4023     		movs	r3, #64
 6178 048a 10E0     		b	.L362
 6179              	.L347:
 6180              		.loc 1 2906 29 discriminator 18
 6181 048c 2023     		movs	r3, #32
 6182 048e 0EE0     		b	.L362
 6183              	.L346:
 6184              		.loc 1 2906 29 discriminator 16
 6185 0490 1023     		movs	r3, #16
 6186 0492 0CE0     		b	.L362
 6187              	.L345:
 6188              		.loc 1 2906 29 discriminator 14
 6189 0494 0C23     		movs	r3, #12
 6190 0496 0AE0     		b	.L362
 6191              	.L344:
 6192              		.loc 1 2906 29 discriminator 12
 6193 0498 0A23     		movs	r3, #10
 6194 049a 08E0     		b	.L362
 6195              	.L343:
 6196              		.loc 1 2906 29 discriminator 10
 6197 049c 0823     		movs	r3, #8
 6198 049e 06E0     		b	.L362
 6199              	.L342:
 6200              		.loc 1 2906 29 discriminator 8
 6201 04a0 0623     		movs	r3, #6
ARM GAS  /tmp/ccUeuQwq.s 			page 160


 6202 04a2 04E0     		b	.L362
 6203              	.L341:
 6204              		.loc 1 2906 29 discriminator 6
 6205 04a4 0423     		movs	r3, #4
 6206 04a6 02E0     		b	.L362
 6207              	.L340:
 6208              		.loc 1 2906 29 discriminator 4
 6209 04a8 0223     		movs	r3, #2
 6210 04aa 00E0     		b	.L362
 6211              	.L339:
 6212              		.loc 1 2906 29 discriminator 2
 6213 04ac 0123     		movs	r3, #1
 6214              	.L362:
 6215              		.loc 1 2906 29 discriminator 48
 6216 04ae BA6A     		ldr	r2, [r7, #40]
 6217 04b0 B2FBF3F3 		udiv	r3, r2, r3
 6218 04b4 5A00     		lsls	r2, r3, #1
 6219 04b6 7B68     		ldr	r3, [r7, #4]
 6220 04b8 5B68     		ldr	r3, [r3, #4]
 6221 04ba 5B08     		lsrs	r3, r3, #1
 6222 04bc 1A44     		add	r2, r2, r3
 6223 04be 7B68     		ldr	r3, [r7, #4]
 6224 04c0 5B68     		ldr	r3, [r3, #4]
 6225              		.loc 1 2906 16 is_stmt 1 discriminator 48
 6226 04c2 B2FBF3F3 		udiv	r3, r2, r3
 6227 04c6 3B63     		str	r3, [r7, #48]
2907:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 6228              		.loc 1 2907 7 discriminator 48
 6229 04c8 8BE2     		b	.L363
 6230              	.L337:
2908:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_D2PCLK2:
2909:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 6231              		.loc 1 2909 14
 6232 04ca FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 6233 04ce B862     		str	r0, [r7, #40]
2910:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(pclk, husart->Init.BaudRate, husart->Init.ClockPres
 6234              		.loc 1 2910 29
 6235 04d0 7B68     		ldr	r3, [r7, #4]
 6236 04d2 5B6A     		ldr	r3, [r3, #36]
 6237 04d4 002B     		cmp	r3, #0
 6238 04d6 44D0     		beq	.L364
 6239              		.loc 1 2910 29 is_stmt 0 discriminator 1
 6240 04d8 7B68     		ldr	r3, [r7, #4]
 6241 04da 5B6A     		ldr	r3, [r3, #36]
 6242 04dc 012B     		cmp	r3, #1
 6243 04de 3ED0     		beq	.L365
 6244              		.loc 1 2910 29 discriminator 3
 6245 04e0 7B68     		ldr	r3, [r7, #4]
 6246 04e2 5B6A     		ldr	r3, [r3, #36]
 6247 04e4 022B     		cmp	r3, #2
 6248 04e6 38D0     		beq	.L366
 6249              		.loc 1 2910 29 discriminator 5
 6250 04e8 7B68     		ldr	r3, [r7, #4]
 6251 04ea 5B6A     		ldr	r3, [r3, #36]
 6252 04ec 032B     		cmp	r3, #3
 6253 04ee 32D0     		beq	.L367
 6254              		.loc 1 2910 29 discriminator 7
ARM GAS  /tmp/ccUeuQwq.s 			page 161


 6255 04f0 7B68     		ldr	r3, [r7, #4]
 6256 04f2 5B6A     		ldr	r3, [r3, #36]
 6257 04f4 042B     		cmp	r3, #4
 6258 04f6 2CD0     		beq	.L368
 6259              		.loc 1 2910 29 discriminator 9
 6260 04f8 7B68     		ldr	r3, [r7, #4]
 6261 04fa 5B6A     		ldr	r3, [r3, #36]
 6262 04fc 052B     		cmp	r3, #5
 6263 04fe 26D0     		beq	.L369
 6264              		.loc 1 2910 29 discriminator 11
 6265 0500 7B68     		ldr	r3, [r7, #4]
 6266 0502 5B6A     		ldr	r3, [r3, #36]
 6267 0504 062B     		cmp	r3, #6
 6268 0506 20D0     		beq	.L370
 6269              		.loc 1 2910 29 discriminator 13
 6270 0508 7B68     		ldr	r3, [r7, #4]
 6271 050a 5B6A     		ldr	r3, [r3, #36]
 6272 050c 072B     		cmp	r3, #7
 6273 050e 1AD0     		beq	.L371
 6274              		.loc 1 2910 29 discriminator 15
 6275 0510 7B68     		ldr	r3, [r7, #4]
 6276 0512 5B6A     		ldr	r3, [r3, #36]
 6277 0514 082B     		cmp	r3, #8
 6278 0516 14D0     		beq	.L372
 6279              		.loc 1 2910 29 discriminator 17
 6280 0518 7B68     		ldr	r3, [r7, #4]
 6281 051a 5B6A     		ldr	r3, [r3, #36]
 6282 051c 092B     		cmp	r3, #9
 6283 051e 0ED0     		beq	.L373
 6284              		.loc 1 2910 29 discriminator 19
 6285 0520 7B68     		ldr	r3, [r7, #4]
 6286 0522 5B6A     		ldr	r3, [r3, #36]
 6287 0524 0A2B     		cmp	r3, #10
 6288 0526 08D0     		beq	.L374
 6289              		.loc 1 2910 29 discriminator 21
 6290 0528 7B68     		ldr	r3, [r7, #4]
 6291 052a 5B6A     		ldr	r3, [r3, #36]
 6292 052c 0B2B     		cmp	r3, #11
 6293 052e 02D1     		bne	.L375
 6294              		.loc 1 2910 29 discriminator 23
 6295 0530 4FF48073 		mov	r3, #256
 6296 0534 16E0     		b	.L387
 6297              	.L375:
 6298              		.loc 1 2910 29 discriminator 24
 6299 0536 0123     		movs	r3, #1
 6300 0538 14E0     		b	.L387
 6301              	.L374:
 6302              		.loc 1 2910 29 discriminator 22
 6303 053a 8023     		movs	r3, #128
 6304 053c 12E0     		b	.L387
 6305              	.L373:
 6306              		.loc 1 2910 29 discriminator 20
 6307 053e 4023     		movs	r3, #64
 6308 0540 10E0     		b	.L387
 6309              	.L372:
 6310              		.loc 1 2910 29 discriminator 18
 6311 0542 2023     		movs	r3, #32
ARM GAS  /tmp/ccUeuQwq.s 			page 162


 6312 0544 0EE0     		b	.L387
 6313              	.L371:
 6314              		.loc 1 2910 29 discriminator 16
 6315 0546 1023     		movs	r3, #16
 6316 0548 0CE0     		b	.L387
 6317              	.L370:
 6318              		.loc 1 2910 29 discriminator 14
 6319 054a 0C23     		movs	r3, #12
 6320 054c 0AE0     		b	.L387
 6321              	.L369:
 6322              		.loc 1 2910 29 discriminator 12
 6323 054e 0A23     		movs	r3, #10
 6324 0550 08E0     		b	.L387
 6325              	.L368:
 6326              		.loc 1 2910 29 discriminator 10
 6327 0552 0823     		movs	r3, #8
 6328 0554 06E0     		b	.L387
 6329              	.L367:
 6330              		.loc 1 2910 29 discriminator 8
 6331 0556 0623     		movs	r3, #6
 6332 0558 04E0     		b	.L387
 6333              	.L366:
 6334              		.loc 1 2910 29 discriminator 6
 6335 055a 0423     		movs	r3, #4
 6336 055c 02E0     		b	.L387
 6337              	.L365:
 6338              		.loc 1 2910 29 discriminator 4
 6339 055e 0223     		movs	r3, #2
 6340 0560 00E0     		b	.L387
 6341              	.L364:
 6342              		.loc 1 2910 29 discriminator 2
 6343 0562 0123     		movs	r3, #1
 6344              	.L387:
 6345              		.loc 1 2910 29 discriminator 48
 6346 0564 BA6A     		ldr	r2, [r7, #40]
 6347 0566 B2FBF3F3 		udiv	r3, r2, r3
 6348 056a 5A00     		lsls	r2, r3, #1
 6349 056c 7B68     		ldr	r3, [r7, #4]
 6350 056e 5B68     		ldr	r3, [r3, #4]
 6351 0570 5B08     		lsrs	r3, r3, #1
 6352 0572 1A44     		add	r2, r2, r3
 6353 0574 7B68     		ldr	r3, [r7, #4]
 6354 0576 5B68     		ldr	r3, [r3, #4]
 6355              		.loc 1 2910 16 is_stmt 1 discriminator 48
 6356 0578 B2FBF3F3 		udiv	r3, r2, r3
 6357 057c 3B63     		str	r3, [r7, #48]
2911:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 6358              		.loc 1 2911 7 discriminator 48
 6359 057e 30E2     		b	.L363
 6360              	.L336:
2912:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_PLL2:
2913:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 6361              		.loc 1 2913 7
 6362 0580 07F11803 		add	r3, r7, #24
 6363 0584 1846     		mov	r0, r3
 6364 0586 FFF7FEFF 		bl	HAL_RCCEx_GetPLL2ClockFreq
2914:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(pll2_clocks.PLL2_Q_Frequency, husart->Init.BaudRate
ARM GAS  /tmp/ccUeuQwq.s 			page 163


 6365              		.loc 1 2914 29
 6366 058a FA69     		ldr	r2, [r7, #28]
 6367 058c 7B68     		ldr	r3, [r7, #4]
 6368 058e 5B6A     		ldr	r3, [r3, #36]
 6369 0590 002B     		cmp	r3, #0
 6370 0592 44D0     		beq	.L388
 6371              		.loc 1 2914 29 is_stmt 0 discriminator 1
 6372 0594 7B68     		ldr	r3, [r7, #4]
 6373 0596 5B6A     		ldr	r3, [r3, #36]
 6374 0598 012B     		cmp	r3, #1
 6375 059a 3ED0     		beq	.L389
 6376              		.loc 1 2914 29 discriminator 3
 6377 059c 7B68     		ldr	r3, [r7, #4]
 6378 059e 5B6A     		ldr	r3, [r3, #36]
 6379 05a0 022B     		cmp	r3, #2
 6380 05a2 38D0     		beq	.L390
 6381              		.loc 1 2914 29 discriminator 5
 6382 05a4 7B68     		ldr	r3, [r7, #4]
 6383 05a6 5B6A     		ldr	r3, [r3, #36]
 6384 05a8 032B     		cmp	r3, #3
 6385 05aa 32D0     		beq	.L391
 6386              		.loc 1 2914 29 discriminator 7
 6387 05ac 7B68     		ldr	r3, [r7, #4]
 6388 05ae 5B6A     		ldr	r3, [r3, #36]
 6389 05b0 042B     		cmp	r3, #4
 6390 05b2 2CD0     		beq	.L392
 6391              		.loc 1 2914 29 discriminator 9
 6392 05b4 7B68     		ldr	r3, [r7, #4]
 6393 05b6 5B6A     		ldr	r3, [r3, #36]
 6394 05b8 052B     		cmp	r3, #5
 6395 05ba 26D0     		beq	.L393
 6396              		.loc 1 2914 29 discriminator 11
 6397 05bc 7B68     		ldr	r3, [r7, #4]
 6398 05be 5B6A     		ldr	r3, [r3, #36]
 6399 05c0 062B     		cmp	r3, #6
 6400 05c2 20D0     		beq	.L394
 6401              		.loc 1 2914 29 discriminator 13
 6402 05c4 7B68     		ldr	r3, [r7, #4]
 6403 05c6 5B6A     		ldr	r3, [r3, #36]
 6404 05c8 072B     		cmp	r3, #7
 6405 05ca 1AD0     		beq	.L395
 6406              		.loc 1 2914 29 discriminator 15
 6407 05cc 7B68     		ldr	r3, [r7, #4]
 6408 05ce 5B6A     		ldr	r3, [r3, #36]
 6409 05d0 082B     		cmp	r3, #8
 6410 05d2 14D0     		beq	.L396
 6411              		.loc 1 2914 29 discriminator 17
 6412 05d4 7B68     		ldr	r3, [r7, #4]
 6413 05d6 5B6A     		ldr	r3, [r3, #36]
 6414 05d8 092B     		cmp	r3, #9
 6415 05da 0ED0     		beq	.L397
 6416              		.loc 1 2914 29 discriminator 19
 6417 05dc 7B68     		ldr	r3, [r7, #4]
 6418 05de 5B6A     		ldr	r3, [r3, #36]
 6419 05e0 0A2B     		cmp	r3, #10
 6420 05e2 08D0     		beq	.L398
 6421              		.loc 1 2914 29 discriminator 21
ARM GAS  /tmp/ccUeuQwq.s 			page 164


 6422 05e4 7B68     		ldr	r3, [r7, #4]
 6423 05e6 5B6A     		ldr	r3, [r3, #36]
 6424 05e8 0B2B     		cmp	r3, #11
 6425 05ea 02D1     		bne	.L399
 6426              		.loc 1 2914 29 discriminator 23
 6427 05ec 4FF48073 		mov	r3, #256
 6428 05f0 16E0     		b	.L411
 6429              	.L399:
 6430              		.loc 1 2914 29 discriminator 24
 6431 05f2 0123     		movs	r3, #1
 6432 05f4 14E0     		b	.L411
 6433              	.L398:
 6434              		.loc 1 2914 29 discriminator 22
 6435 05f6 8023     		movs	r3, #128
 6436 05f8 12E0     		b	.L411
 6437              	.L397:
 6438              		.loc 1 2914 29 discriminator 20
 6439 05fa 4023     		movs	r3, #64
 6440 05fc 10E0     		b	.L411
 6441              	.L396:
 6442              		.loc 1 2914 29 discriminator 18
 6443 05fe 2023     		movs	r3, #32
 6444 0600 0EE0     		b	.L411
 6445              	.L395:
 6446              		.loc 1 2914 29 discriminator 16
 6447 0602 1023     		movs	r3, #16
 6448 0604 0CE0     		b	.L411
 6449              	.L394:
 6450              		.loc 1 2914 29 discriminator 14
 6451 0606 0C23     		movs	r3, #12
 6452 0608 0AE0     		b	.L411
 6453              	.L393:
 6454              		.loc 1 2914 29 discriminator 12
 6455 060a 0A23     		movs	r3, #10
 6456 060c 08E0     		b	.L411
 6457              	.L392:
 6458              		.loc 1 2914 29 discriminator 10
 6459 060e 0823     		movs	r3, #8
 6460 0610 06E0     		b	.L411
 6461              	.L391:
 6462              		.loc 1 2914 29 discriminator 8
 6463 0612 0623     		movs	r3, #6
 6464 0614 04E0     		b	.L411
 6465              	.L390:
 6466              		.loc 1 2914 29 discriminator 6
 6467 0616 0423     		movs	r3, #4
 6468 0618 02E0     		b	.L411
 6469              	.L389:
 6470              		.loc 1 2914 29 discriminator 4
 6471 061a 0223     		movs	r3, #2
 6472 061c 00E0     		b	.L411
 6473              	.L388:
 6474              		.loc 1 2914 29 discriminator 2
 6475 061e 0123     		movs	r3, #1
 6476              	.L411:
 6477              		.loc 1 2914 29 discriminator 48
 6478 0620 B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /tmp/ccUeuQwq.s 			page 165


 6479 0624 5A00     		lsls	r2, r3, #1
 6480 0626 7B68     		ldr	r3, [r7, #4]
 6481 0628 5B68     		ldr	r3, [r3, #4]
 6482 062a 5B08     		lsrs	r3, r3, #1
 6483 062c 1A44     		add	r2, r2, r3
 6484 062e 7B68     		ldr	r3, [r7, #4]
 6485 0630 5B68     		ldr	r3, [r3, #4]
 6486              		.loc 1 2914 16 is_stmt 1 discriminator 48
 6487 0632 B2FBF3F3 		udiv	r3, r2, r3
 6488 0636 3B63     		str	r3, [r7, #48]
2915:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                 husart->Init.ClockPrescaler));
2916:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 6489              		.loc 1 2916 7 discriminator 48
 6490 0638 D3E1     		b	.L363
 6491              	.L335:
2917:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_PLL3:
2918:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 6492              		.loc 1 2918 7
 6493 063a 07F10C03 		add	r3, r7, #12
 6494 063e 1846     		mov	r0, r3
 6495 0640 FFF7FEFF 		bl	HAL_RCCEx_GetPLL3ClockFreq
2919:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(pll3_clocks.PLL3_Q_Frequency, husart->Init.BaudRate
 6496              		.loc 1 2919 29
 6497 0644 3A69     		ldr	r2, [r7, #16]
 6498 0646 7B68     		ldr	r3, [r7, #4]
 6499 0648 5B6A     		ldr	r3, [r3, #36]
 6500 064a 002B     		cmp	r3, #0
 6501 064c 44D0     		beq	.L412
 6502              		.loc 1 2919 29 is_stmt 0 discriminator 1
 6503 064e 7B68     		ldr	r3, [r7, #4]
 6504 0650 5B6A     		ldr	r3, [r3, #36]
 6505 0652 012B     		cmp	r3, #1
 6506 0654 3ED0     		beq	.L413
 6507              		.loc 1 2919 29 discriminator 3
 6508 0656 7B68     		ldr	r3, [r7, #4]
 6509 0658 5B6A     		ldr	r3, [r3, #36]
 6510 065a 022B     		cmp	r3, #2
 6511 065c 38D0     		beq	.L414
 6512              		.loc 1 2919 29 discriminator 5
 6513 065e 7B68     		ldr	r3, [r7, #4]
 6514 0660 5B6A     		ldr	r3, [r3, #36]
 6515 0662 032B     		cmp	r3, #3
 6516 0664 32D0     		beq	.L415
 6517              		.loc 1 2919 29 discriminator 7
 6518 0666 7B68     		ldr	r3, [r7, #4]
 6519 0668 5B6A     		ldr	r3, [r3, #36]
 6520 066a 042B     		cmp	r3, #4
 6521 066c 2CD0     		beq	.L416
 6522              		.loc 1 2919 29 discriminator 9
 6523 066e 7B68     		ldr	r3, [r7, #4]
 6524 0670 5B6A     		ldr	r3, [r3, #36]
 6525 0672 052B     		cmp	r3, #5
 6526 0674 26D0     		beq	.L417
 6527              		.loc 1 2919 29 discriminator 11
 6528 0676 7B68     		ldr	r3, [r7, #4]
 6529 0678 5B6A     		ldr	r3, [r3, #36]
 6530 067a 062B     		cmp	r3, #6
ARM GAS  /tmp/ccUeuQwq.s 			page 166


 6531 067c 20D0     		beq	.L418
 6532              		.loc 1 2919 29 discriminator 13
 6533 067e 7B68     		ldr	r3, [r7, #4]
 6534 0680 5B6A     		ldr	r3, [r3, #36]
 6535 0682 072B     		cmp	r3, #7
 6536 0684 1AD0     		beq	.L419
 6537              		.loc 1 2919 29 discriminator 15
 6538 0686 7B68     		ldr	r3, [r7, #4]
 6539 0688 5B6A     		ldr	r3, [r3, #36]
 6540 068a 082B     		cmp	r3, #8
 6541 068c 14D0     		beq	.L420
 6542              		.loc 1 2919 29 discriminator 17
 6543 068e 7B68     		ldr	r3, [r7, #4]
 6544 0690 5B6A     		ldr	r3, [r3, #36]
 6545 0692 092B     		cmp	r3, #9
 6546 0694 0ED0     		beq	.L421
 6547              		.loc 1 2919 29 discriminator 19
 6548 0696 7B68     		ldr	r3, [r7, #4]
 6549 0698 5B6A     		ldr	r3, [r3, #36]
 6550 069a 0A2B     		cmp	r3, #10
 6551 069c 08D0     		beq	.L422
 6552              		.loc 1 2919 29 discriminator 21
 6553 069e 7B68     		ldr	r3, [r7, #4]
 6554 06a0 5B6A     		ldr	r3, [r3, #36]
 6555 06a2 0B2B     		cmp	r3, #11
 6556 06a4 02D1     		bne	.L423
 6557              		.loc 1 2919 29 discriminator 23
 6558 06a6 4FF48073 		mov	r3, #256
 6559 06aa 16E0     		b	.L435
 6560              	.L423:
 6561              		.loc 1 2919 29 discriminator 24
 6562 06ac 0123     		movs	r3, #1
 6563 06ae 14E0     		b	.L435
 6564              	.L422:
 6565              		.loc 1 2919 29 discriminator 22
 6566 06b0 8023     		movs	r3, #128
 6567 06b2 12E0     		b	.L435
 6568              	.L421:
 6569              		.loc 1 2919 29 discriminator 20
 6570 06b4 4023     		movs	r3, #64
 6571 06b6 10E0     		b	.L435
 6572              	.L420:
 6573              		.loc 1 2919 29 discriminator 18
 6574 06b8 2023     		movs	r3, #32
 6575 06ba 0EE0     		b	.L435
 6576              	.L419:
 6577              		.loc 1 2919 29 discriminator 16
 6578 06bc 1023     		movs	r3, #16
 6579 06be 0CE0     		b	.L435
 6580              	.L418:
 6581              		.loc 1 2919 29 discriminator 14
 6582 06c0 0C23     		movs	r3, #12
 6583 06c2 0AE0     		b	.L435
 6584              	.L417:
 6585              		.loc 1 2919 29 discriminator 12
 6586 06c4 0A23     		movs	r3, #10
 6587 06c6 08E0     		b	.L435
ARM GAS  /tmp/ccUeuQwq.s 			page 167


 6588              	.L416:
 6589              		.loc 1 2919 29 discriminator 10
 6590 06c8 0823     		movs	r3, #8
 6591 06ca 06E0     		b	.L435
 6592              	.L415:
 6593              		.loc 1 2919 29 discriminator 8
 6594 06cc 0623     		movs	r3, #6
 6595 06ce 04E0     		b	.L435
 6596              	.L414:
 6597              		.loc 1 2919 29 discriminator 6
 6598 06d0 0423     		movs	r3, #4
 6599 06d2 02E0     		b	.L435
 6600              	.L413:
 6601              		.loc 1 2919 29 discriminator 4
 6602 06d4 0223     		movs	r3, #2
 6603 06d6 00E0     		b	.L435
 6604              	.L412:
 6605              		.loc 1 2919 29 discriminator 2
 6606 06d8 0123     		movs	r3, #1
 6607              	.L435:
 6608              		.loc 1 2919 29 discriminator 48
 6609 06da B2FBF3F3 		udiv	r3, r2, r3
 6610 06de 5A00     		lsls	r2, r3, #1
 6611 06e0 7B68     		ldr	r3, [r7, #4]
 6612 06e2 5B68     		ldr	r3, [r3, #4]
 6613 06e4 5B08     		lsrs	r3, r3, #1
 6614 06e6 1A44     		add	r2, r2, r3
 6615 06e8 7B68     		ldr	r3, [r7, #4]
 6616 06ea 5B68     		ldr	r3, [r3, #4]
 6617              		.loc 1 2919 16 is_stmt 1 discriminator 48
 6618 06ec B2FBF3F3 		udiv	r3, r2, r3
 6619 06f0 3B63     		str	r3, [r7, #48]
2920:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                                                 husart->Init.ClockPrescaler));
2921:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 6620              		.loc 1 2921 7 discriminator 48
 6621 06f2 76E1     		b	.L363
 6622              	.L334:
2922:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_HSI:
2923:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 6623              		.loc 1 2923 11
 6624 06f4 894B     		ldr	r3, .L539
 6625 06f6 1B68     		ldr	r3, [r3]
 6626 06f8 03F02003 		and	r3, r3, #32
 6627              		.loc 1 2923 10
 6628 06fc 002B     		cmp	r3, #0
 6629 06fe 5DD0     		beq	.L436
2924:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2925:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         usartdiv = (uint32_t)(USART_DIV_SAMPLING8((HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U)
 6630              		.loc 1 2925 31
 6631 0700 864B     		ldr	r3, .L539
 6632 0702 1B68     		ldr	r3, [r3]
 6633 0704 DB08     		lsrs	r3, r3, #3
 6634 0706 03F00303 		and	r3, r3, #3
 6635 070a 854A     		ldr	r2, .L539+4
 6636 070c DA40     		lsrs	r2, r2, r3
 6637 070e 7B68     		ldr	r3, [r7, #4]
 6638 0710 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccUeuQwq.s 			page 168


 6639 0712 002B     		cmp	r3, #0
 6640 0714 44D0     		beq	.L437
 6641              		.loc 1 2925 31 is_stmt 0 discriminator 1
 6642 0716 7B68     		ldr	r3, [r7, #4]
 6643 0718 5B6A     		ldr	r3, [r3, #36]
 6644 071a 012B     		cmp	r3, #1
 6645 071c 3ED0     		beq	.L438
 6646              		.loc 1 2925 31 discriminator 3
 6647 071e 7B68     		ldr	r3, [r7, #4]
 6648 0720 5B6A     		ldr	r3, [r3, #36]
 6649 0722 022B     		cmp	r3, #2
 6650 0724 38D0     		beq	.L439
 6651              		.loc 1 2925 31 discriminator 5
 6652 0726 7B68     		ldr	r3, [r7, #4]
 6653 0728 5B6A     		ldr	r3, [r3, #36]
 6654 072a 032B     		cmp	r3, #3
 6655 072c 32D0     		beq	.L440
 6656              		.loc 1 2925 31 discriminator 7
 6657 072e 7B68     		ldr	r3, [r7, #4]
 6658 0730 5B6A     		ldr	r3, [r3, #36]
 6659 0732 042B     		cmp	r3, #4
 6660 0734 2CD0     		beq	.L441
 6661              		.loc 1 2925 31 discriminator 9
 6662 0736 7B68     		ldr	r3, [r7, #4]
 6663 0738 5B6A     		ldr	r3, [r3, #36]
 6664 073a 052B     		cmp	r3, #5
 6665 073c 26D0     		beq	.L442
 6666              		.loc 1 2925 31 discriminator 11
 6667 073e 7B68     		ldr	r3, [r7, #4]
 6668 0740 5B6A     		ldr	r3, [r3, #36]
 6669 0742 062B     		cmp	r3, #6
 6670 0744 20D0     		beq	.L443
 6671              		.loc 1 2925 31 discriminator 13
 6672 0746 7B68     		ldr	r3, [r7, #4]
 6673 0748 5B6A     		ldr	r3, [r3, #36]
 6674 074a 072B     		cmp	r3, #7
 6675 074c 1AD0     		beq	.L444
 6676              		.loc 1 2925 31 discriminator 15
 6677 074e 7B68     		ldr	r3, [r7, #4]
 6678 0750 5B6A     		ldr	r3, [r3, #36]
 6679 0752 082B     		cmp	r3, #8
 6680 0754 14D0     		beq	.L445
 6681              		.loc 1 2925 31 discriminator 17
 6682 0756 7B68     		ldr	r3, [r7, #4]
 6683 0758 5B6A     		ldr	r3, [r3, #36]
 6684 075a 092B     		cmp	r3, #9
 6685 075c 0ED0     		beq	.L446
 6686              		.loc 1 2925 31 discriminator 19
 6687 075e 7B68     		ldr	r3, [r7, #4]
 6688 0760 5B6A     		ldr	r3, [r3, #36]
 6689 0762 0A2B     		cmp	r3, #10
 6690 0764 08D0     		beq	.L447
 6691              		.loc 1 2925 31 discriminator 21
 6692 0766 7B68     		ldr	r3, [r7, #4]
 6693 0768 5B6A     		ldr	r3, [r3, #36]
 6694 076a 0B2B     		cmp	r3, #11
 6695 076c 02D1     		bne	.L448
ARM GAS  /tmp/ccUeuQwq.s 			page 169


 6696              		.loc 1 2925 31 discriminator 23
 6697 076e 4FF48073 		mov	r3, #256
 6698 0772 16E0     		b	.L460
 6699              	.L448:
 6700              		.loc 1 2925 31 discriminator 24
 6701 0774 0123     		movs	r3, #1
 6702 0776 14E0     		b	.L460
 6703              	.L447:
 6704              		.loc 1 2925 31 discriminator 22
 6705 0778 8023     		movs	r3, #128
 6706 077a 12E0     		b	.L460
 6707              	.L446:
 6708              		.loc 1 2925 31 discriminator 20
 6709 077c 4023     		movs	r3, #64
 6710 077e 10E0     		b	.L460
 6711              	.L445:
 6712              		.loc 1 2925 31 discriminator 18
 6713 0780 2023     		movs	r3, #32
 6714 0782 0EE0     		b	.L460
 6715              	.L444:
 6716              		.loc 1 2925 31 discriminator 16
 6717 0784 1023     		movs	r3, #16
 6718 0786 0CE0     		b	.L460
 6719              	.L443:
 6720              		.loc 1 2925 31 discriminator 14
 6721 0788 0C23     		movs	r3, #12
 6722 078a 0AE0     		b	.L460
 6723              	.L442:
 6724              		.loc 1 2925 31 discriminator 12
 6725 078c 0A23     		movs	r3, #10
 6726 078e 08E0     		b	.L460
 6727              	.L441:
 6728              		.loc 1 2925 31 discriminator 10
 6729 0790 0823     		movs	r3, #8
 6730 0792 06E0     		b	.L460
 6731              	.L440:
 6732              		.loc 1 2925 31 discriminator 8
 6733 0794 0623     		movs	r3, #6
 6734 0796 04E0     		b	.L460
 6735              	.L439:
 6736              		.loc 1 2925 31 discriminator 6
 6737 0798 0423     		movs	r3, #4
 6738 079a 02E0     		b	.L460
 6739              	.L438:
 6740              		.loc 1 2925 31 discriminator 4
 6741 079c 0223     		movs	r3, #2
 6742 079e 00E0     		b	.L460
 6743              	.L437:
 6744              		.loc 1 2925 31 discriminator 2
 6745 07a0 0123     		movs	r3, #1
 6746              	.L460:
 6747              		.loc 1 2925 31 discriminator 48
 6748 07a2 B2FBF3F3 		udiv	r3, r2, r3
 6749 07a6 5A00     		lsls	r2, r3, #1
 6750 07a8 7B68     		ldr	r3, [r7, #4]
 6751 07aa 5B68     		ldr	r3, [r3, #4]
 6752 07ac 5B08     		lsrs	r3, r3, #1
ARM GAS  /tmp/ccUeuQwq.s 			page 170


 6753 07ae 1A44     		add	r2, r2, r3
 6754 07b0 7B68     		ldr	r3, [r7, #4]
 6755 07b2 5B68     		ldr	r3, [r3, #4]
 6756              		.loc 1 2925 18 is_stmt 1 discriminator 48
 6757 07b4 B2FBF3F3 		udiv	r3, r2, r3
 6758 07b8 3B63     		str	r3, [r7, #48]
2926:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2927:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
2928:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         usartdiv = (uint32_t)(USART_DIV_SAMPLING8(HSI_VALUE, husart->Init.BaudRate, husart->Init.Cl
2930:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
2931:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 6759              		.loc 1 2931 7 discriminator 48
 6760 07ba 12E1     		b	.L363
 6761              	.L436:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6762              		.loc 1 2929 31
 6763 07bc 7B68     		ldr	r3, [r7, #4]
 6764 07be 5B6A     		ldr	r3, [r3, #36]
 6765 07c0 002B     		cmp	r3, #0
 6766 07c2 44D0     		beq	.L462
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6767              		.loc 1 2929 31 is_stmt 0 discriminator 1
 6768 07c4 7B68     		ldr	r3, [r7, #4]
 6769 07c6 5B6A     		ldr	r3, [r3, #36]
 6770 07c8 012B     		cmp	r3, #1
 6771 07ca 3ED0     		beq	.L463
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6772              		.loc 1 2929 31 discriminator 3
 6773 07cc 7B68     		ldr	r3, [r7, #4]
 6774 07ce 5B6A     		ldr	r3, [r3, #36]
 6775 07d0 022B     		cmp	r3, #2
 6776 07d2 38D0     		beq	.L464
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6777              		.loc 1 2929 31 discriminator 5
 6778 07d4 7B68     		ldr	r3, [r7, #4]
 6779 07d6 5B6A     		ldr	r3, [r3, #36]
 6780 07d8 032B     		cmp	r3, #3
 6781 07da 32D0     		beq	.L465
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6782              		.loc 1 2929 31 discriminator 7
 6783 07dc 7B68     		ldr	r3, [r7, #4]
 6784 07de 5B6A     		ldr	r3, [r3, #36]
 6785 07e0 042B     		cmp	r3, #4
 6786 07e2 2CD0     		beq	.L466
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6787              		.loc 1 2929 31 discriminator 9
 6788 07e4 7B68     		ldr	r3, [r7, #4]
 6789 07e6 5B6A     		ldr	r3, [r3, #36]
 6790 07e8 052B     		cmp	r3, #5
 6791 07ea 26D0     		beq	.L467
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6792              		.loc 1 2929 31 discriminator 11
 6793 07ec 7B68     		ldr	r3, [r7, #4]
 6794 07ee 5B6A     		ldr	r3, [r3, #36]
 6795 07f0 062B     		cmp	r3, #6
 6796 07f2 20D0     		beq	.L468
ARM GAS  /tmp/ccUeuQwq.s 			page 171


2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6797              		.loc 1 2929 31 discriminator 13
 6798 07f4 7B68     		ldr	r3, [r7, #4]
 6799 07f6 5B6A     		ldr	r3, [r3, #36]
 6800 07f8 072B     		cmp	r3, #7
 6801 07fa 1AD0     		beq	.L469
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6802              		.loc 1 2929 31 discriminator 15
 6803 07fc 7B68     		ldr	r3, [r7, #4]
 6804 07fe 5B6A     		ldr	r3, [r3, #36]
 6805 0800 082B     		cmp	r3, #8
 6806 0802 14D0     		beq	.L470
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6807              		.loc 1 2929 31 discriminator 17
 6808 0804 7B68     		ldr	r3, [r7, #4]
 6809 0806 5B6A     		ldr	r3, [r3, #36]
 6810 0808 092B     		cmp	r3, #9
 6811 080a 0ED0     		beq	.L471
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6812              		.loc 1 2929 31 discriminator 19
 6813 080c 7B68     		ldr	r3, [r7, #4]
 6814 080e 5B6A     		ldr	r3, [r3, #36]
 6815 0810 0A2B     		cmp	r3, #10
 6816 0812 08D0     		beq	.L472
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6817              		.loc 1 2929 31 discriminator 21
 6818 0814 7B68     		ldr	r3, [r7, #4]
 6819 0816 5B6A     		ldr	r3, [r3, #36]
 6820 0818 0B2B     		cmp	r3, #11
 6821 081a 02D1     		bne	.L473
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6822              		.loc 1 2929 31 discriminator 23
 6823 081c 4FF48073 		mov	r3, #256
 6824 0820 16E0     		b	.L485
 6825              	.L473:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6826              		.loc 1 2929 31 discriminator 24
 6827 0822 0123     		movs	r3, #1
 6828 0824 14E0     		b	.L485
 6829              	.L472:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6830              		.loc 1 2929 31 discriminator 22
 6831 0826 8023     		movs	r3, #128
 6832 0828 12E0     		b	.L485
 6833              	.L471:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6834              		.loc 1 2929 31 discriminator 20
 6835 082a 4023     		movs	r3, #64
 6836 082c 10E0     		b	.L485
 6837              	.L470:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6838              		.loc 1 2929 31 discriminator 18
 6839 082e 2023     		movs	r3, #32
 6840 0830 0EE0     		b	.L485
 6841              	.L469:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6842              		.loc 1 2929 31 discriminator 16
ARM GAS  /tmp/ccUeuQwq.s 			page 172


 6843 0832 1023     		movs	r3, #16
 6844 0834 0CE0     		b	.L485
 6845              	.L468:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6846              		.loc 1 2929 31 discriminator 14
 6847 0836 0C23     		movs	r3, #12
 6848 0838 0AE0     		b	.L485
 6849              	.L467:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6850              		.loc 1 2929 31 discriminator 12
 6851 083a 0A23     		movs	r3, #10
 6852 083c 08E0     		b	.L485
 6853              	.L466:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6854              		.loc 1 2929 31 discriminator 10
 6855 083e 0823     		movs	r3, #8
 6856 0840 06E0     		b	.L485
 6857              	.L465:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6858              		.loc 1 2929 31 discriminator 8
 6859 0842 0623     		movs	r3, #6
 6860 0844 04E0     		b	.L485
 6861              	.L464:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6862              		.loc 1 2929 31 discriminator 6
 6863 0846 0423     		movs	r3, #4
 6864 0848 02E0     		b	.L485
 6865              	.L463:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6866              		.loc 1 2929 31 discriminator 4
 6867 084a 0223     		movs	r3, #2
 6868 084c 00E0     		b	.L485
 6869              	.L462:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6870              		.loc 1 2929 31 discriminator 2
 6871 084e 0123     		movs	r3, #1
 6872              	.L485:
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6873              		.loc 1 2929 31 discriminator 48
 6874 0850 334A     		ldr	r2, .L539+4
 6875 0852 B2FBF3F3 		udiv	r3, r2, r3
 6876 0856 5A00     		lsls	r2, r3, #1
 6877 0858 7B68     		ldr	r3, [r7, #4]
 6878 085a 5B68     		ldr	r3, [r3, #4]
 6879 085c 5B08     		lsrs	r3, r3, #1
 6880 085e 1A44     		add	r2, r2, r3
 6881 0860 7B68     		ldr	r3, [r7, #4]
 6882 0862 5B68     		ldr	r3, [r3, #4]
2929:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 6883              		.loc 1 2929 18 is_stmt 1 discriminator 48
 6884 0864 B2FBF3F3 		udiv	r3, r2, r3
 6885 0868 3B63     		str	r3, [r7, #48]
 6886              		.loc 1 2931 7 discriminator 48
 6887 086a BAE0     		b	.L363
 6888              	.L333:
2932:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_CSI:
2933:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(CSI_VALUE, husart->Init.BaudRate, husart->Init.Cloc
ARM GAS  /tmp/ccUeuQwq.s 			page 173


 6889              		.loc 1 2933 29
 6890 086c 7B68     		ldr	r3, [r7, #4]
 6891 086e 5B6A     		ldr	r3, [r3, #36]
 6892 0870 002B     		cmp	r3, #0
 6893 0872 44D0     		beq	.L486
 6894              		.loc 1 2933 29 is_stmt 0 discriminator 1
 6895 0874 7B68     		ldr	r3, [r7, #4]
 6896 0876 5B6A     		ldr	r3, [r3, #36]
 6897 0878 012B     		cmp	r3, #1
 6898 087a 3ED0     		beq	.L487
 6899              		.loc 1 2933 29 discriminator 3
 6900 087c 7B68     		ldr	r3, [r7, #4]
 6901 087e 5B6A     		ldr	r3, [r3, #36]
 6902 0880 022B     		cmp	r3, #2
 6903 0882 38D0     		beq	.L488
 6904              		.loc 1 2933 29 discriminator 5
 6905 0884 7B68     		ldr	r3, [r7, #4]
 6906 0886 5B6A     		ldr	r3, [r3, #36]
 6907 0888 032B     		cmp	r3, #3
 6908 088a 32D0     		beq	.L489
 6909              		.loc 1 2933 29 discriminator 7
 6910 088c 7B68     		ldr	r3, [r7, #4]
 6911 088e 5B6A     		ldr	r3, [r3, #36]
 6912 0890 042B     		cmp	r3, #4
 6913 0892 2CD0     		beq	.L490
 6914              		.loc 1 2933 29 discriminator 9
 6915 0894 7B68     		ldr	r3, [r7, #4]
 6916 0896 5B6A     		ldr	r3, [r3, #36]
 6917 0898 052B     		cmp	r3, #5
 6918 089a 26D0     		beq	.L491
 6919              		.loc 1 2933 29 discriminator 11
 6920 089c 7B68     		ldr	r3, [r7, #4]
 6921 089e 5B6A     		ldr	r3, [r3, #36]
 6922 08a0 062B     		cmp	r3, #6
 6923 08a2 20D0     		beq	.L492
 6924              		.loc 1 2933 29 discriminator 13
 6925 08a4 7B68     		ldr	r3, [r7, #4]
 6926 08a6 5B6A     		ldr	r3, [r3, #36]
 6927 08a8 072B     		cmp	r3, #7
 6928 08aa 1AD0     		beq	.L493
 6929              		.loc 1 2933 29 discriminator 15
 6930 08ac 7B68     		ldr	r3, [r7, #4]
 6931 08ae 5B6A     		ldr	r3, [r3, #36]
 6932 08b0 082B     		cmp	r3, #8
 6933 08b2 14D0     		beq	.L494
 6934              		.loc 1 2933 29 discriminator 17
 6935 08b4 7B68     		ldr	r3, [r7, #4]
 6936 08b6 5B6A     		ldr	r3, [r3, #36]
 6937 08b8 092B     		cmp	r3, #9
 6938 08ba 0ED0     		beq	.L495
 6939              		.loc 1 2933 29 discriminator 19
 6940 08bc 7B68     		ldr	r3, [r7, #4]
 6941 08be 5B6A     		ldr	r3, [r3, #36]
 6942 08c0 0A2B     		cmp	r3, #10
 6943 08c2 08D0     		beq	.L496
 6944              		.loc 1 2933 29 discriminator 21
 6945 08c4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 174


 6946 08c6 5B6A     		ldr	r3, [r3, #36]
 6947 08c8 0B2B     		cmp	r3, #11
 6948 08ca 02D1     		bne	.L497
 6949              		.loc 1 2933 29 discriminator 23
 6950 08cc 4FF48073 		mov	r3, #256
 6951 08d0 16E0     		b	.L509
 6952              	.L497:
 6953              		.loc 1 2933 29 discriminator 24
 6954 08d2 0123     		movs	r3, #1
 6955 08d4 14E0     		b	.L509
 6956              	.L496:
 6957              		.loc 1 2933 29 discriminator 22
 6958 08d6 8023     		movs	r3, #128
 6959 08d8 12E0     		b	.L509
 6960              	.L495:
 6961              		.loc 1 2933 29 discriminator 20
 6962 08da 4023     		movs	r3, #64
 6963 08dc 10E0     		b	.L509
 6964              	.L494:
 6965              		.loc 1 2933 29 discriminator 18
 6966 08de 2023     		movs	r3, #32
 6967 08e0 0EE0     		b	.L509
 6968              	.L493:
 6969              		.loc 1 2933 29 discriminator 16
 6970 08e2 1023     		movs	r3, #16
 6971 08e4 0CE0     		b	.L509
 6972              	.L492:
 6973              		.loc 1 2933 29 discriminator 14
 6974 08e6 0C23     		movs	r3, #12
 6975 08e8 0AE0     		b	.L509
 6976              	.L491:
 6977              		.loc 1 2933 29 discriminator 12
 6978 08ea 0A23     		movs	r3, #10
 6979 08ec 08E0     		b	.L509
 6980              	.L490:
 6981              		.loc 1 2933 29 discriminator 10
 6982 08ee 0823     		movs	r3, #8
 6983 08f0 06E0     		b	.L509
 6984              	.L489:
 6985              		.loc 1 2933 29 discriminator 8
 6986 08f2 0623     		movs	r3, #6
 6987 08f4 04E0     		b	.L509
 6988              	.L488:
 6989              		.loc 1 2933 29 discriminator 6
 6990 08f6 0423     		movs	r3, #4
 6991 08f8 02E0     		b	.L509
 6992              	.L487:
 6993              		.loc 1 2933 29 discriminator 4
 6994 08fa 0223     		movs	r3, #2
 6995 08fc 00E0     		b	.L509
 6996              	.L486:
 6997              		.loc 1 2933 29 discriminator 2
 6998 08fe 0123     		movs	r3, #1
 6999              	.L509:
 7000              		.loc 1 2933 29 discriminator 48
 7001 0900 084A     		ldr	r2, .L539+8
 7002 0902 B2FBF3F3 		udiv	r3, r2, r3
ARM GAS  /tmp/ccUeuQwq.s 			page 175


 7003 0906 5A00     		lsls	r2, r3, #1
 7004 0908 7B68     		ldr	r3, [r7, #4]
 7005 090a 5B68     		ldr	r3, [r3, #4]
 7006 090c 5B08     		lsrs	r3, r3, #1
 7007 090e 1A44     		add	r2, r2, r3
 7008 0910 7B68     		ldr	r3, [r7, #4]
 7009 0912 5B68     		ldr	r3, [r3, #4]
 7010              		.loc 1 2933 16 is_stmt 1 discriminator 48
 7011 0914 B2FBF3F3 		udiv	r3, r2, r3
 7012 0918 3B63     		str	r3, [r7, #48]
2934:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 7013              		.loc 1 2934 7 discriminator 48
 7014 091a 62E0     		b	.L363
 7015              	.L540:
 7016              		.align	2
 7017              	.L539:
 7018 091c 00440258 		.word	1476543488
 7019 0920 0090D003 		.word	64000000
 7020 0924 00093D00 		.word	4000000
 7021              	.L331:
2935:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     case USART_CLOCKSOURCE_LSE:
2936:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       usartdiv = (uint32_t)(USART_DIV_SAMPLING8(LSE_VALUE, husart->Init.BaudRate, husart->Init.Cloc
 7022              		.loc 1 2936 29
 7023 0928 7B68     		ldr	r3, [r7, #4]
 7024 092a 5B6A     		ldr	r3, [r3, #36]
 7025 092c 002B     		cmp	r3, #0
 7026 092e 44D0     		beq	.L510
 7027              		.loc 1 2936 29 is_stmt 0 discriminator 1
 7028 0930 7B68     		ldr	r3, [r7, #4]
 7029 0932 5B6A     		ldr	r3, [r3, #36]
 7030 0934 012B     		cmp	r3, #1
 7031 0936 3ED0     		beq	.L511
 7032              		.loc 1 2936 29 discriminator 3
 7033 0938 7B68     		ldr	r3, [r7, #4]
 7034 093a 5B6A     		ldr	r3, [r3, #36]
 7035 093c 022B     		cmp	r3, #2
 7036 093e 38D0     		beq	.L512
 7037              		.loc 1 2936 29 discriminator 5
 7038 0940 7B68     		ldr	r3, [r7, #4]
 7039 0942 5B6A     		ldr	r3, [r3, #36]
 7040 0944 032B     		cmp	r3, #3
 7041 0946 32D0     		beq	.L513
 7042              		.loc 1 2936 29 discriminator 7
 7043 0948 7B68     		ldr	r3, [r7, #4]
 7044 094a 5B6A     		ldr	r3, [r3, #36]
 7045 094c 042B     		cmp	r3, #4
 7046 094e 2CD0     		beq	.L514
 7047              		.loc 1 2936 29 discriminator 9
 7048 0950 7B68     		ldr	r3, [r7, #4]
 7049 0952 5B6A     		ldr	r3, [r3, #36]
 7050 0954 052B     		cmp	r3, #5
 7051 0956 26D0     		beq	.L515
 7052              		.loc 1 2936 29 discriminator 11
 7053 0958 7B68     		ldr	r3, [r7, #4]
 7054 095a 5B6A     		ldr	r3, [r3, #36]
 7055 095c 062B     		cmp	r3, #6
 7056 095e 20D0     		beq	.L516
ARM GAS  /tmp/ccUeuQwq.s 			page 176


 7057              		.loc 1 2936 29 discriminator 13
 7058 0960 7B68     		ldr	r3, [r7, #4]
 7059 0962 5B6A     		ldr	r3, [r3, #36]
 7060 0964 072B     		cmp	r3, #7
 7061 0966 1AD0     		beq	.L517
 7062              		.loc 1 2936 29 discriminator 15
 7063 0968 7B68     		ldr	r3, [r7, #4]
 7064 096a 5B6A     		ldr	r3, [r3, #36]
 7065 096c 082B     		cmp	r3, #8
 7066 096e 14D0     		beq	.L518
 7067              		.loc 1 2936 29 discriminator 17
 7068 0970 7B68     		ldr	r3, [r7, #4]
 7069 0972 5B6A     		ldr	r3, [r3, #36]
 7070 0974 092B     		cmp	r3, #9
 7071 0976 0ED0     		beq	.L519
 7072              		.loc 1 2936 29 discriminator 19
 7073 0978 7B68     		ldr	r3, [r7, #4]
 7074 097a 5B6A     		ldr	r3, [r3, #36]
 7075 097c 0A2B     		cmp	r3, #10
 7076 097e 08D0     		beq	.L520
 7077              		.loc 1 2936 29 discriminator 21
 7078 0980 7B68     		ldr	r3, [r7, #4]
 7079 0982 5B6A     		ldr	r3, [r3, #36]
 7080 0984 0B2B     		cmp	r3, #11
 7081 0986 02D1     		bne	.L521
 7082              		.loc 1 2936 29 discriminator 23
 7083 0988 4FF48073 		mov	r3, #256
 7084 098c 16E0     		b	.L533
 7085              	.L521:
 7086              		.loc 1 2936 29 discriminator 24
 7087 098e 0123     		movs	r3, #1
 7088 0990 14E0     		b	.L533
 7089              	.L520:
 7090              		.loc 1 2936 29 discriminator 22
 7091 0992 8023     		movs	r3, #128
 7092 0994 12E0     		b	.L533
 7093              	.L519:
 7094              		.loc 1 2936 29 discriminator 20
 7095 0996 4023     		movs	r3, #64
 7096 0998 10E0     		b	.L533
 7097              	.L518:
 7098              		.loc 1 2936 29 discriminator 18
 7099 099a 2023     		movs	r3, #32
 7100 099c 0EE0     		b	.L533
 7101              	.L517:
 7102              		.loc 1 2936 29 discriminator 16
 7103 099e 1023     		movs	r3, #16
 7104 09a0 0CE0     		b	.L533
 7105              	.L516:
 7106              		.loc 1 2936 29 discriminator 14
 7107 09a2 0C23     		movs	r3, #12
 7108 09a4 0AE0     		b	.L533
 7109              	.L515:
 7110              		.loc 1 2936 29 discriminator 12
 7111 09a6 0A23     		movs	r3, #10
 7112 09a8 08E0     		b	.L533
 7113              	.L514:
ARM GAS  /tmp/ccUeuQwq.s 			page 177


 7114              		.loc 1 2936 29 discriminator 10
 7115 09aa 0823     		movs	r3, #8
 7116 09ac 06E0     		b	.L533
 7117              	.L513:
 7118              		.loc 1 2936 29 discriminator 8
 7119 09ae 0623     		movs	r3, #6
 7120 09b0 04E0     		b	.L533
 7121              	.L512:
 7122              		.loc 1 2936 29 discriminator 6
 7123 09b2 0423     		movs	r3, #4
 7124 09b4 02E0     		b	.L533
 7125              	.L511:
 7126              		.loc 1 2936 29 discriminator 4
 7127 09b6 0223     		movs	r3, #2
 7128 09b8 00E0     		b	.L533
 7129              	.L510:
 7130              		.loc 1 2936 29 discriminator 2
 7131 09ba 0123     		movs	r3, #1
 7132              	.L533:
 7133              		.loc 1 2936 29 discriminator 48
 7134 09bc 4FF40042 		mov	r2, #32768
 7135 09c0 B2FBF3F3 		udiv	r3, r2, r3
 7136 09c4 5A00     		lsls	r2, r3, #1
 7137 09c6 7B68     		ldr	r3, [r7, #4]
 7138 09c8 5B68     		ldr	r3, [r3, #4]
 7139 09ca 5B08     		lsrs	r3, r3, #1
 7140 09cc 1A44     		add	r2, r2, r3
 7141 09ce 7B68     		ldr	r3, [r7, #4]
 7142 09d0 5B68     		ldr	r3, [r3, #4]
 7143              		.loc 1 2936 16 is_stmt 1 discriminator 48
 7144 09d2 B2FBF3F3 		udiv	r3, r2, r3
 7145 09d6 3B63     		str	r3, [r7, #48]
2937:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 7146              		.loc 1 2937 7 discriminator 48
 7147 09d8 03E0     		b	.L363
 7148              	.L330:
2938:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     default:
2939:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       ret = HAL_ERROR;
 7149              		.loc 1 2939 11
 7150 09da 0123     		movs	r3, #1
 7151 09dc 87F83630 		strb	r3, [r7, #54]
2940:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       break;
 7152              		.loc 1 2940 7
 7153 09e0 00BF     		nop
 7154              	.L363:
2941:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2942:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2943:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* USARTDIV must be greater than or equal to 0d16 and smaller than or equal to ffff */
2944:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((usartdiv >= USART_BRR_MIN) && (usartdiv <= USART_BRR_MAX))
 7155              		.loc 1 2944 6
 7156 09e2 3B6B     		ldr	r3, [r7, #48]
 7157 09e4 0F2B     		cmp	r3, #15
 7158 09e6 16D9     		bls	.L534
 7159              		.loc 1 2944 35 discriminator 1
 7160 09e8 3B6B     		ldr	r3, [r7, #48]
 7161 09ea B3F5803F 		cmp	r3, #65536
 7162 09ee 12D2     		bcs	.L534
ARM GAS  /tmp/ccUeuQwq.s 			page 178


2945:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2946:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 7163              		.loc 1 2946 15
 7164 09f0 3B6B     		ldr	r3, [r7, #48]
 7165 09f2 9BB2     		uxth	r3, r3
 7166              		.loc 1 2946 13
 7167 09f4 23F00F03 		bic	r3, r3, #15
 7168 09f8 FB84     		strh	r3, [r7, #38]	@ movhi
2947:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 7169              		.loc 1 2947 58
 7170 09fa 3B6B     		ldr	r3, [r7, #48]
 7171 09fc 5B08     		lsrs	r3, r3, #1
 7172              		.loc 1 2947 16
 7173 09fe 9BB2     		uxth	r3, r3
 7174 0a00 03F00703 		and	r3, r3, #7
 7175 0a04 9AB2     		uxth	r2, r3
 7176              		.loc 1 2947 13
 7177 0a06 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 7178 0a08 1343     		orrs	r3, r3, r2
 7179 0a0a FB84     		strh	r3, [r7, #38]	@ movhi
2948:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->Instance->BRR = brrtemp;
 7180              		.loc 1 2948 11
 7181 0a0c 7B68     		ldr	r3, [r7, #4]
 7182 0a0e 1B68     		ldr	r3, [r3]
 7183              		.loc 1 2948 27
 7184 0a10 FA8C     		ldrh	r2, [r7, #38]
 7185 0a12 DA60     		str	r2, [r3, #12]
 7186 0a14 02E0     		b	.L535
 7187              	.L534:
2949:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2950:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
2951:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2952:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     ret = HAL_ERROR;
 7188              		.loc 1 2952 9
 7189 0a16 0123     		movs	r3, #1
 7190 0a18 87F83630 		strb	r3, [r7, #54]
 7191              	.L535:
2953:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2954:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2955:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
2956:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->NbTxDataToProcess = 1U;
 7192              		.loc 1 2956 29
 7193 0a1c 7B68     		ldr	r3, [r7, #4]
 7194 0a1e 0122     		movs	r2, #1
 7195 0a20 9A87     		strh	r2, [r3, #60]	@ movhi
2957:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->NbRxDataToProcess = 1U;
 7196              		.loc 1 2957 29
 7197 0a22 7B68     		ldr	r3, [r7, #4]
 7198 0a24 0122     		movs	r2, #1
 7199 0a26 5A87     		strh	r2, [r3, #58]	@ movhi
2958:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2959:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear ISR function pointers */
2960:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->RxISR   = NULL;
 7200              		.loc 1 2960 19
 7201 0a28 7B68     		ldr	r3, [r7, #4]
 7202 0a2a 0022     		movs	r2, #0
 7203 0a2c 9A64     		str	r2, [r3, #72]
ARM GAS  /tmp/ccUeuQwq.s 			page 179


2961:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxISR   = NULL;
 7204              		.loc 1 2961 19
 7205 0a2e 7B68     		ldr	r3, [r7, #4]
 7206 0a30 0022     		movs	r2, #0
 7207 0a32 DA64     		str	r2, [r3, #76]
2962:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2963:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return ret;
 7208              		.loc 1 2963 10
 7209 0a34 97F83630 		ldrb	r3, [r7, #54]	@ zero_extendqisi2
2964:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7210              		.loc 1 2964 1
 7211 0a38 1846     		mov	r0, r3
 7212 0a3a 3837     		adds	r7, r7, #56
 7213              	.LCFI210:
 7214              		.cfi_def_cfa_offset 8
 7215 0a3c BD46     		mov	sp, r7
 7216              	.LCFI211:
 7217              		.cfi_def_cfa_register 13
 7218              		@ sp needed
 7219 0a3e 80BD     		pop	{r7, pc}
 7220              		.cfi_endproc
 7221              	.LFE369:
 7223              		.section	.text.USART_CheckIdleState,"ax",%progbits
 7224              		.align	1
 7225              		.syntax unified
 7226              		.thumb
 7227              		.thumb_func
 7228              		.fpu fpv5-d16
 7230              	USART_CheckIdleState:
 7231              	.LFB370:
2965:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2966:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
2967:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief Check the USART Idle State.
2968:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param husart USART handle.
2969:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval HAL status
2970:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
2971:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static HAL_StatusTypeDef USART_CheckIdleState(USART_HandleTypeDef *husart)
2972:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7232              		.loc 1 2972 1
 7233              		.cfi_startproc
 7234              		@ args = 0, pretend = 0, frame = 16
 7235              		@ frame_needed = 1, uses_anonymous_args = 0
 7236 0000 80B5     		push	{r7, lr}
 7237              	.LCFI212:
 7238              		.cfi_def_cfa_offset 8
 7239              		.cfi_offset 7, -8
 7240              		.cfi_offset 14, -4
 7241 0002 86B0     		sub	sp, sp, #24
 7242              	.LCFI213:
 7243              		.cfi_def_cfa_offset 32
 7244 0004 02AF     		add	r7, sp, #8
 7245              	.LCFI214:
 7246              		.cfi_def_cfa 7, 24
 7247 0006 7860     		str	r0, [r7, #4]
2973:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t tickstart;
2974:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2975:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Initialize the USART ErrorCode */
ARM GAS  /tmp/ccUeuQwq.s 			page 180


2976:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->ErrorCode = HAL_USART_ERROR_NONE;
 7248              		.loc 1 2976 21
 7249 0008 7B68     		ldr	r3, [r7, #4]
 7250 000a 0022     		movs	r2, #0
 7251 000c DA65     		str	r2, [r3, #92]
2977:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2978:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Init tickstart for timeout management */
2979:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   tickstart = HAL_GetTick();
 7252              		.loc 1 2979 15
 7253 000e FFF7FEFF 		bl	HAL_GetTick
 7254 0012 F860     		str	r0, [r7, #12]
2980:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
2981:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check if the Transmitter is enabled */
2982:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((husart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 7255              		.loc 1 2982 14
 7256 0014 7B68     		ldr	r3, [r7, #4]
 7257 0016 1B68     		ldr	r3, [r3]
 7258              		.loc 1 2982 24
 7259 0018 1B68     		ldr	r3, [r3]
 7260              		.loc 1 2982 30
 7261 001a 03F00803 		and	r3, r3, #8
 7262              		.loc 1 2982 6
 7263 001e 082B     		cmp	r3, #8
 7264 0020 0ED1     		bne	.L542
2983:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2984:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Wait until TEACK flag is set */
2985:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (USART_WaitOnFlagUntilTimeout(husart, USART_ISR_TEACK, RESET, tickstart, USART_TEACK_REACK_T
 7265              		.loc 1 2985 9
 7266 0022 4FF47A73 		mov	r3, #1000
 7267 0026 0093     		str	r3, [sp]
 7268 0028 FB68     		ldr	r3, [r7, #12]
 7269 002a 0022     		movs	r2, #0
 7270 002c 4FF40011 		mov	r1, #2097152
 7271 0030 7868     		ldr	r0, [r7, #4]
 7272 0032 FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 7273 0036 0346     		mov	r3, r0
 7274              		.loc 1 2985 8
 7275 0038 002B     		cmp	r3, #0
 7276 003a 01D0     		beq	.L542
2986:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2987:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Timeout occurred */
2988:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_TIMEOUT;
 7277              		.loc 1 2988 14
 7278 003c 0323     		movs	r3, #3
 7279 003e 1EE0     		b	.L543
 7280              	.L542:
2989:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
2990:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
2991:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check if the Receiver is enabled */
2992:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((husart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 7281              		.loc 1 2992 14
 7282 0040 7B68     		ldr	r3, [r7, #4]
 7283 0042 1B68     		ldr	r3, [r3]
 7284              		.loc 1 2992 24
 7285 0044 1B68     		ldr	r3, [r3]
 7286              		.loc 1 2992 30
 7287 0046 03F00403 		and	r3, r3, #4
ARM GAS  /tmp/ccUeuQwq.s 			page 181


 7288              		.loc 1 2992 6
 7289 004a 042B     		cmp	r3, #4
 7290 004c 0ED1     		bne	.L544
2993:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
2994:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Wait until REACK flag is set */
2995:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (USART_WaitOnFlagUntilTimeout(husart, USART_ISR_REACK, RESET, tickstart, USART_TEACK_REACK_T
 7291              		.loc 1 2995 9
 7292 004e 4FF47A73 		mov	r3, #1000
 7293 0052 0093     		str	r3, [sp]
 7294 0054 FB68     		ldr	r3, [r7, #12]
 7295 0056 0022     		movs	r2, #0
 7296 0058 4FF48001 		mov	r1, #4194304
 7297 005c 7868     		ldr	r0, [r7, #4]
 7298 005e FFF7FEFF 		bl	USART_WaitOnFlagUntilTimeout
 7299 0062 0346     		mov	r3, r0
 7300              		.loc 1 2995 8
 7301 0064 002B     		cmp	r3, #0
 7302 0066 01D0     		beq	.L544
2996:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
2997:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Timeout occurred */
2998:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       return HAL_TIMEOUT;
 7303              		.loc 1 2998 14
 7304 0068 0323     		movs	r3, #3
 7305 006a 08E0     		b	.L543
 7306              	.L544:
2999:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3000:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3001:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3002:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Initialize the USART state*/
3003:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->State = HAL_USART_STATE_READY;
 7307              		.loc 1 3003 17
 7308 006c 7B68     		ldr	r3, [r7, #4]
 7309 006e 0122     		movs	r2, #1
 7310 0070 83F85920 		strb	r2, [r3, #89]
3004:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3005:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Process Unlocked */
3006:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_UNLOCK(husart);
 7311              		.loc 1 3006 3
 7312 0074 7B68     		ldr	r3, [r7, #4]
 7313 0076 0022     		movs	r2, #0
 7314 0078 83F85820 		strb	r2, [r3, #88]
3007:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3008:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   return HAL_OK;
 7315              		.loc 1 3008 10
 7316 007c 0023     		movs	r3, #0
 7317              	.L543:
3009:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7318              		.loc 1 3009 1
 7319 007e 1846     		mov	r0, r3
 7320 0080 1037     		adds	r7, r7, #16
 7321              	.LCFI215:
 7322              		.cfi_def_cfa_offset 8
 7323 0082 BD46     		mov	sp, r7
 7324              	.LCFI216:
 7325              		.cfi_def_cfa_register 13
 7326              		@ sp needed
 7327 0084 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccUeuQwq.s 			page 182


 7328              		.cfi_endproc
 7329              	.LFE370:
 7331              		.section	.text.USART_TxISR_8BIT,"ax",%progbits
 7332              		.align	1
 7333              		.syntax unified
 7334              		.thumb
 7335              		.thumb_func
 7336              		.fpu fpv5-d16
 7338              	USART_TxISR_8BIT:
 7339              	.LFB371:
3010:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3011:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3012:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex send an amount of data in non-blocking mode.
3013:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3014:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Transmit_IT().
3015:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
3016:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is disabled and when the
3017:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is less than 9 bits long.
3018:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
3019:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3020:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3021:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_8BIT(USART_HandleTypeDef *husart)
3022:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7340              		.loc 1 3022 1
 7341              		.cfi_startproc
 7342              		@ args = 0, pretend = 0, frame = 16
 7343              		@ frame_needed = 1, uses_anonymous_args = 0
 7344              		@ link register save eliminated.
 7345 0000 80B4     		push	{r7}
 7346              	.LCFI217:
 7347              		.cfi_def_cfa_offset 4
 7348              		.cfi_offset 7, -4
 7349 0002 85B0     		sub	sp, sp, #20
 7350              	.LCFI218:
 7351              		.cfi_def_cfa_offset 24
 7352 0004 00AF     		add	r7, sp, #0
 7353              	.LCFI219:
 7354              		.cfi_def_cfa_register 7
 7355 0006 7860     		str	r0, [r7, #4]
3023:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 7356              		.loc 1 3023 32
 7357 0008 7B68     		ldr	r3, [r7, #4]
 7358 000a 93F85930 		ldrb	r3, [r3, #89]
 7359 000e FB73     		strb	r3, [r7, #15]
3024:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3025:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Tx process is ongoing */
3026:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_TX) ||
 7360              		.loc 1 3026 6
 7361 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7362 0012 122B     		cmp	r3, #18
 7363 0014 02D0     		beq	.L546
 7364              		.loc 1 3026 42 discriminator 1
 7365 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7366 0018 322B     		cmp	r3, #50
 7367 001a 27D1     		bne	.L549
 7368              	.L546:
3027:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
ARM GAS  /tmp/ccUeuQwq.s 			page 183


3028:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3029:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->TxXferCount == 0U)
 7369              		.loc 1 3029 15
 7370 001c 7B68     		ldr	r3, [r7, #4]
 7371 001e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7372 0020 9BB2     		uxth	r3, r3
 7373              		.loc 1 3029 8
 7374 0022 002B     		cmp	r3, #0
 7375 0024 10D1     		bne	.L548
3030:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3031:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Transmit data register empty interrupt */
3032:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 7376              		.loc 1 3032 7
 7377 0026 7B68     		ldr	r3, [r7, #4]
 7378 0028 1B68     		ldr	r3, [r3]
 7379 002a 1A68     		ldr	r2, [r3]
 7380 002c 7B68     		ldr	r3, [r7, #4]
 7381 002e 1B68     		ldr	r3, [r3]
 7382 0030 22F08002 		bic	r2, r2, #128
 7383 0034 1A60     		str	r2, [r3]
3033:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3034:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
3035:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 7384              		.loc 1 3035 7
 7385 0036 7B68     		ldr	r3, [r7, #4]
 7386 0038 1B68     		ldr	r3, [r3]
 7387 003a 1A68     		ldr	r2, [r3]
 7388 003c 7B68     		ldr	r3, [r7, #4]
 7389 003e 1B68     		ldr	r3, [r3]
 7390 0040 42F04002 		orr	r2, r2, #64
 7391 0044 1A60     		str	r2, [r3]
3036:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3037:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
3038:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->Instance->TDR = (uint8_t)(*husart->pTxBuffPtr & (uint8_t)0xFF);
3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr++;
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
3042:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3043:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3044:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7392              		.loc 1 3044 1
 7393 0046 11E0     		b	.L549
 7394              	.L548:
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr++;
 7395              		.loc 1 3039 48
 7396 0048 7B68     		ldr	r3, [r7, #4]
 7397 004a 9B6A     		ldr	r3, [r3, #40]
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr++;
 7398              		.loc 1 3039 41
 7399 004c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr++;
 7400              		.loc 1 3039 13
 7401 004e 7B68     		ldr	r3, [r7, #4]
 7402 0050 1B68     		ldr	r3, [r3]
3039:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr++;
 7403              		.loc 1 3039 29
 7404 0052 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/ccUeuQwq.s 			page 184


3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
 7405              		.loc 1 3040 13
 7406 0054 7B68     		ldr	r3, [r7, #4]
 7407 0056 9B6A     		ldr	r3, [r3, #40]
3040:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
 7408              		.loc 1 3040 25
 7409 0058 5A1C     		adds	r2, r3, #1
 7410 005a 7B68     		ldr	r3, [r7, #4]
 7411 005c 9A62     		str	r2, [r3, #40]
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 7412              		.loc 1 3041 13
 7413 005e 7B68     		ldr	r3, [r7, #4]
 7414 0060 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7415 0062 9BB2     		uxth	r3, r3
3041:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 7416              		.loc 1 3041 26
 7417 0064 013B     		subs	r3, r3, #1
 7418 0066 9AB2     		uxth	r2, r3
 7419 0068 7B68     		ldr	r3, [r7, #4]
 7420 006a DA85     		strh	r2, [r3, #46]	@ movhi
 7421              	.L549:
 7422              		.loc 1 3044 1
 7423 006c 00BF     		nop
 7424 006e 1437     		adds	r7, r7, #20
 7425              	.LCFI220:
 7426              		.cfi_def_cfa_offset 4
 7427 0070 BD46     		mov	sp, r7
 7428              	.LCFI221:
 7429              		.cfi_def_cfa_register 13
 7430              		@ sp needed
 7431 0072 5DF8047B 		ldr	r7, [sp], #4
 7432              	.LCFI222:
 7433              		.cfi_restore 7
 7434              		.cfi_def_cfa_offset 0
 7435 0076 7047     		bx	lr
 7436              		.cfi_endproc
 7437              	.LFE371:
 7439              		.section	.text.USART_TxISR_16BIT,"ax",%progbits
 7440              		.align	1
 7441              		.syntax unified
 7442              		.thumb
 7443              		.thumb_func
 7444              		.fpu fpv5-d16
 7446              	USART_TxISR_16BIT:
 7447              	.LFB372:
3045:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3046:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3047:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex send an amount of data in non-blocking mode.
3048:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3049:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Transmit_IT().
3050:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
3051:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is disabled and when the
3052:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is 9 bits long.
3053:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
3054:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3055:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3056:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_16BIT(USART_HandleTypeDef *husart)
ARM GAS  /tmp/ccUeuQwq.s 			page 185


3057:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7448              		.loc 1 3057 1
 7449              		.cfi_startproc
 7450              		@ args = 0, pretend = 0, frame = 16
 7451              		@ frame_needed = 1, uses_anonymous_args = 0
 7452              		@ link register save eliminated.
 7453 0000 80B4     		push	{r7}
 7454              	.LCFI223:
 7455              		.cfi_def_cfa_offset 4
 7456              		.cfi_offset 7, -4
 7457 0002 85B0     		sub	sp, sp, #20
 7458              	.LCFI224:
 7459              		.cfi_def_cfa_offset 24
 7460 0004 00AF     		add	r7, sp, #0
 7461              	.LCFI225:
 7462              		.cfi_def_cfa_register 7
 7463 0006 7860     		str	r0, [r7, #4]
3058:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 7464              		.loc 1 3058 32
 7465 0008 7B68     		ldr	r3, [r7, #4]
 7466 000a 93F85930 		ldrb	r3, [r3, #89]
 7467 000e FB73     		strb	r3, [r7, #15]
3059:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *tmp;
3060:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3061:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_TX) ||
 7468              		.loc 1 3061 6
 7469 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7470 0012 122B     		cmp	r3, #18
 7471 0014 02D0     		beq	.L551
 7472              		.loc 1 3061 42 discriminator 1
 7473 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7474 0018 322B     		cmp	r3, #50
 7475 001a 2CD1     		bne	.L554
 7476              	.L551:
3062:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3063:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3064:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->TxXferCount == 0U)
 7477              		.loc 1 3064 15
 7478 001c 7B68     		ldr	r3, [r7, #4]
 7479 001e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7480 0020 9BB2     		uxth	r3, r3
 7481              		.loc 1 3064 8
 7482 0022 002B     		cmp	r3, #0
 7483 0024 10D1     		bne	.L553
3065:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3066:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Transmit data register empty interrupt */
3067:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_DISABLE_IT(husart, USART_IT_TXE);
 7484              		.loc 1 3067 7
 7485 0026 7B68     		ldr	r3, [r7, #4]
 7486 0028 1B68     		ldr	r3, [r3]
 7487 002a 1A68     		ldr	r2, [r3]
 7488 002c 7B68     		ldr	r3, [r7, #4]
 7489 002e 1B68     		ldr	r3, [r3]
 7490 0030 22F08002 		bic	r2, r2, #128
 7491 0034 1A60     		str	r2, [r3]
3068:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3069:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Transmit Complete Interrupt */
ARM GAS  /tmp/ccUeuQwq.s 			page 186


3070:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 7492              		.loc 1 3070 7
 7493 0036 7B68     		ldr	r3, [r7, #4]
 7494 0038 1B68     		ldr	r3, [r3]
 7495 003a 1A68     		ldr	r2, [r3]
 7496 003c 7B68     		ldr	r3, [r7, #4]
 7497 003e 1B68     		ldr	r3, [r3]
 7498 0040 42F04002 		orr	r2, r2, #64
 7499 0044 1A60     		str	r2, [r3]
3071:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3072:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
3073:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       tmp = (uint16_t *) husart->pTxBuffPtr;
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->Instance->TDR = (uint16_t)(*tmp & 0x01FFU);
3076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
3078:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3079:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3080:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7500              		.loc 1 3080 1
 7501 0046 16E0     		b	.L554
 7502              	.L553:
3074:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->Instance->TDR = (uint16_t)(*tmp & 0x01FFU);
 7503              		.loc 1 3074 11
 7504 0048 7B68     		ldr	r3, [r7, #4]
 7505 004a 9B6A     		ldr	r3, [r3, #40]
 7506 004c BB60     		str	r3, [r7, #8]
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
 7507              		.loc 1 3075 42
 7508 004e BB68     		ldr	r3, [r7, #8]
 7509 0050 1B88     		ldrh	r3, [r3]
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
 7510              		.loc 1 3075 31
 7511 0052 1A46     		mov	r2, r3
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
 7512              		.loc 1 3075 13
 7513 0054 7B68     		ldr	r3, [r7, #4]
 7514 0056 1B68     		ldr	r3, [r3]
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
 7515              		.loc 1 3075 31
 7516 0058 C2F30802 		ubfx	r2, r2, #0, #9
3075:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->pTxBuffPtr += 2U;
 7517              		.loc 1 3075 29
 7518 005c 9A62     		str	r2, [r3, #40]
3076:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->TxXferCount--;
 7519              		.loc 1 3076 26
 7520 005e 7B68     		ldr	r3, [r7, #4]
 7521 0060 9B6A     		ldr	r3, [r3, #40]
 7522 0062 9A1C     		adds	r2, r3, #2
 7523 0064 7B68     		ldr	r3, [r7, #4]
 7524 0066 9A62     		str	r2, [r3, #40]
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 7525              		.loc 1 3077 13
 7526 0068 7B68     		ldr	r3, [r7, #4]
 7527 006a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7528 006c 9BB2     		uxth	r3, r3
3077:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 187


 7529              		.loc 1 3077 26
 7530 006e 013B     		subs	r3, r3, #1
 7531 0070 9AB2     		uxth	r2, r3
 7532 0072 7B68     		ldr	r3, [r7, #4]
 7533 0074 DA85     		strh	r2, [r3, #46]	@ movhi
 7534              	.L554:
 7535              		.loc 1 3080 1
 7536 0076 00BF     		nop
 7537 0078 1437     		adds	r7, r7, #20
 7538              	.LCFI226:
 7539              		.cfi_def_cfa_offset 4
 7540 007a BD46     		mov	sp, r7
 7541              	.LCFI227:
 7542              		.cfi_def_cfa_register 13
 7543              		@ sp needed
 7544 007c 5DF8047B 		ldr	r7, [sp], #4
 7545              	.LCFI228:
 7546              		.cfi_restore 7
 7547              		.cfi_def_cfa_offset 0
 7548 0080 7047     		bx	lr
 7549              		.cfi_endproc
 7550              	.LFE372:
 7552              		.section	.text.USART_TxISR_8BIT_FIFOEN,"ax",%progbits
 7553              		.align	1
 7554              		.syntax unified
 7555              		.thumb
 7556              		.thumb_func
 7557              		.fpu fpv5-d16
 7559              	USART_TxISR_8BIT_FIFOEN:
 7560              	.LFB373:
3081:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3082:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3083:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex send an amount of data in non-blocking mode.
3084:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3085:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Transmit_IT().
3086:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
3087:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is enabled and when the
3088:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is less than 9 bits long.
3089:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
3090:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3091:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3092:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_8BIT_FIFOEN(USART_HandleTypeDef *husart)
3093:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7561              		.loc 1 3093 1
 7562              		.cfi_startproc
 7563              		@ args = 0, pretend = 0, frame = 16
 7564              		@ frame_needed = 1, uses_anonymous_args = 0
 7565              		@ link register save eliminated.
 7566 0000 80B4     		push	{r7}
 7567              	.LCFI229:
 7568              		.cfi_def_cfa_offset 4
 7569              		.cfi_offset 7, -4
 7570 0002 85B0     		sub	sp, sp, #20
 7571              	.LCFI230:
 7572              		.cfi_def_cfa_offset 24
 7573 0004 00AF     		add	r7, sp, #0
 7574              	.LCFI231:
ARM GAS  /tmp/ccUeuQwq.s 			page 188


 7575              		.cfi_def_cfa_register 7
 7576 0006 7860     		str	r0, [r7, #4]
3094:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 7577              		.loc 1 3094 32
 7578 0008 7B68     		ldr	r3, [r7, #4]
 7579 000a 93F85930 		ldrb	r3, [r3, #89]
 7580 000e 7B73     		strb	r3, [r7, #13]
3095:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t  nb_tx_data;
3096:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3097:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Tx process is ongoing */
3098:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_TX) ||
 7581              		.loc 1 3098 6
 7582 0010 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 7583 0012 122B     		cmp	r3, #18
 7584 0014 02D0     		beq	.L556
 7585              		.loc 1 3098 42 discriminator 1
 7586 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 7587 0018 322B     		cmp	r3, #50
 7588 001a 39D1     		bne	.L562
 7589              	.L556:
3099:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3100:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     for (nb_tx_data = husart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 7590              		.loc 1 3101 21
 7591 001c 7B68     		ldr	r3, [r7, #4]
 7592 001e 9B8F     		ldrh	r3, [r3, #60]	@ movhi
 7593 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 7594              		.loc 1 3101 5
 7595 0022 32E0     		b	.L558
 7596              	.L561:
3102:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3103:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->TxXferCount == 0U)
 7597              		.loc 1 3103 17
 7598 0024 7B68     		ldr	r3, [r7, #4]
 7599 0026 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7600 0028 9BB2     		uxth	r3, r3
 7601              		.loc 1 3103 10
 7602 002a 002B     		cmp	r3, #0
 7603 002c 11D1     		bne	.L559
3104:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3105:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Disable the TX FIFO threshold interrupt */
3106:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_DISABLE_IT(husart, USART_IT_TXFT);
 7604              		.loc 1 3106 9
 7605 002e 7B68     		ldr	r3, [r7, #4]
 7606 0030 1B68     		ldr	r3, [r3]
 7607 0032 9A68     		ldr	r2, [r3, #8]
 7608 0034 7B68     		ldr	r3, [r7, #4]
 7609 0036 1B68     		ldr	r3, [r3]
 7610 0038 22F40002 		bic	r2, r2, #8388608
 7611 003c 9A60     		str	r2, [r3, #8]
3107:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3108:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Enable the USART Transmit Complete Interrupt */
3109:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 7612              		.loc 1 3109 9
 7613 003e 7B68     		ldr	r3, [r7, #4]
 7614 0040 1B68     		ldr	r3, [r3]
 7615 0042 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccUeuQwq.s 			page 189


 7616 0044 7B68     		ldr	r3, [r7, #4]
 7617 0046 1B68     		ldr	r3, [r3]
 7618 0048 42F04002 		orr	r2, r2, #64
 7619 004c 1A60     		str	r2, [r3]
3110:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3111:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break; /* force exit loop */
 7620              		.loc 1 3111 9
 7621 004e 00BF     		nop
3112:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else if (__HAL_USART_GET_FLAG(husart, USART_FLAG_TXFNF) == SET)
3114:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint8_t)(*husart->pTxBuffPtr & (uint8_t)0xFF);
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr++;
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
3118:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3119:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
3120:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3121:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Nothing to do */
3122:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3123:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3124:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3125:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7622              		.loc 1 3125 1
 7623 0050 1EE0     		b	.L562
 7624              	.L559:
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 7625              		.loc 1 3113 16
 7626 0052 7B68     		ldr	r3, [r7, #4]
 7627 0054 1B68     		ldr	r3, [r3]
 7628 0056 DB69     		ldr	r3, [r3, #28]
 7629 0058 03F08003 		and	r3, r3, #128
3113:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 7630              		.loc 1 3113 15
 7631 005c 802B     		cmp	r3, #128
 7632 005e 11D1     		bne	.L560
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr++;
 7633              		.loc 1 3115 50
 7634 0060 7B68     		ldr	r3, [r7, #4]
 7635 0062 9B6A     		ldr	r3, [r3, #40]
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr++;
 7636              		.loc 1 3115 43
 7637 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr++;
 7638              		.loc 1 3115 15
 7639 0066 7B68     		ldr	r3, [r7, #4]
 7640 0068 1B68     		ldr	r3, [r3]
3115:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr++;
 7641              		.loc 1 3115 31
 7642 006a 9A62     		str	r2, [r3, #40]
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
 7643              		.loc 1 3116 15
 7644 006c 7B68     		ldr	r3, [r7, #4]
 7645 006e 9B6A     		ldr	r3, [r3, #40]
3116:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
 7646              		.loc 1 3116 27
 7647 0070 5A1C     		adds	r2, r3, #1
 7648 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 190


 7649 0074 9A62     		str	r2, [r3, #40]
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 7650              		.loc 1 3117 15
 7651 0076 7B68     		ldr	r3, [r7, #4]
 7652 0078 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7653 007a 9BB2     		uxth	r3, r3
3117:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 7654              		.loc 1 3117 28
 7655 007c 013B     		subs	r3, r3, #1
 7656 007e 9AB2     		uxth	r2, r3
 7657 0080 7B68     		ldr	r3, [r7, #4]
 7658 0082 DA85     		strh	r2, [r3, #46]	@ movhi
 7659              	.L560:
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 7660              		.loc 1 3101 79 discriminator 2
 7661 0084 FB89     		ldrh	r3, [r7, #14]
 7662 0086 013B     		subs	r3, r3, #1
 7663 0088 FB81     		strh	r3, [r7, #14]	@ movhi
 7664              	.L558:
3101:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 7665              		.loc 1 3101 5 discriminator 1
 7666 008a FB89     		ldrh	r3, [r7, #14]
 7667 008c 002B     		cmp	r3, #0
 7668 008e C9D1     		bne	.L561
 7669              	.L562:
 7670              		.loc 1 3125 1
 7671 0090 00BF     		nop
 7672 0092 1437     		adds	r7, r7, #20
 7673              	.LCFI232:
 7674              		.cfi_def_cfa_offset 4
 7675 0094 BD46     		mov	sp, r7
 7676              	.LCFI233:
 7677              		.cfi_def_cfa_register 13
 7678              		@ sp needed
 7679 0096 5DF8047B 		ldr	r7, [sp], #4
 7680              	.LCFI234:
 7681              		.cfi_restore 7
 7682              		.cfi_def_cfa_offset 0
 7683 009a 7047     		bx	lr
 7684              		.cfi_endproc
 7685              	.LFE373:
 7687              		.section	.text.USART_TxISR_16BIT_FIFOEN,"ax",%progbits
 7688              		.align	1
 7689              		.syntax unified
 7690              		.thumb
 7691              		.thumb_func
 7692              		.fpu fpv5-d16
 7694              	USART_TxISR_16BIT_FIFOEN:
 7695              	.LFB374:
3126:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3127:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3128:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex send an amount of data in non-blocking mode.
3129:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3130:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Transmit_IT().
3131:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   The USART errors are not managed to avoid the overrun error.
3132:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is enabled and when the
3133:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is 9 bits long.
ARM GAS  /tmp/ccUeuQwq.s 			page 191


3134:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle.
3135:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3136:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3137:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_TxISR_16BIT_FIFOEN(USART_HandleTypeDef *husart)
3138:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7696              		.loc 1 3138 1
 7697              		.cfi_startproc
 7698              		@ args = 0, pretend = 0, frame = 16
 7699              		@ frame_needed = 1, uses_anonymous_args = 0
 7700              		@ link register save eliminated.
 7701 0000 80B4     		push	{r7}
 7702              	.LCFI235:
 7703              		.cfi_def_cfa_offset 4
 7704              		.cfi_offset 7, -4
 7705 0002 85B0     		sub	sp, sp, #20
 7706              	.LCFI236:
 7707              		.cfi_def_cfa_offset 24
 7708 0004 00AF     		add	r7, sp, #0
 7709              	.LCFI237:
 7710              		.cfi_def_cfa_register 7
 7711 0006 7860     		str	r0, [r7, #4]
3139:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 7712              		.loc 1 3139 32
 7713 0008 7B68     		ldr	r3, [r7, #4]
 7714 000a 93F85930 		ldrb	r3, [r3, #89]
 7715 000e 7B73     		strb	r3, [r7, #13]
3140:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *tmp;
3141:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t  nb_tx_data;
3142:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3143:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Tx process is ongoing */
3144:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_TX) ||
 7716              		.loc 1 3144 6
 7717 0010 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 7718 0012 122B     		cmp	r3, #18
 7719 0014 02D0     		beq	.L564
 7720              		.loc 1 3144 42 discriminator 1
 7721 0016 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 7722 0018 322B     		cmp	r3, #50
 7723 001a 3ED1     		bne	.L570
 7724              	.L564:
3145:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3146:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     for (nb_tx_data = husart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
 7725              		.loc 1 3147 21
 7726 001c 7B68     		ldr	r3, [r7, #4]
 7727 001e 9B8F     		ldrh	r3, [r3, #60]	@ movhi
 7728 0020 FB81     		strh	r3, [r7, #14]	@ movhi
 7729              		.loc 1 3147 5
 7730 0022 37E0     		b	.L566
 7731              	.L569:
3148:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3149:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (husart->TxXferCount == 0U)
 7732              		.loc 1 3149 17
 7733 0024 7B68     		ldr	r3, [r7, #4]
 7734 0026 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7735 0028 9BB2     		uxth	r3, r3
 7736              		.loc 1 3149 10
ARM GAS  /tmp/ccUeuQwq.s 			page 192


 7737 002a 002B     		cmp	r3, #0
 7738 002c 11D1     		bne	.L567
3150:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3151:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Disable the TX FIFO threshold interrupt */
3152:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_DISABLE_IT(husart, USART_IT_TXFT);
 7739              		.loc 1 3152 9
 7740 002e 7B68     		ldr	r3, [r7, #4]
 7741 0030 1B68     		ldr	r3, [r3]
 7742 0032 9A68     		ldr	r2, [r3, #8]
 7743 0034 7B68     		ldr	r3, [r7, #4]
 7744 0036 1B68     		ldr	r3, [r3]
 7745 0038 22F40002 		bic	r2, r2, #8388608
 7746 003c 9A60     		str	r2, [r3, #8]
3153:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3154:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Enable the USART Transmit Complete Interrupt */
3155:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         __HAL_USART_ENABLE_IT(husart, USART_IT_TC);
 7747              		.loc 1 3155 9
 7748 003e 7B68     		ldr	r3, [r7, #4]
 7749 0040 1B68     		ldr	r3, [r3]
 7750 0042 1A68     		ldr	r2, [r3]
 7751 0044 7B68     		ldr	r3, [r7, #4]
 7752 0046 1B68     		ldr	r3, [r3]
 7753 0048 42F04002 		orr	r2, r2, #64
 7754 004c 1A60     		str	r2, [r3]
3156:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3157:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         break; /* force exit loop */
 7755              		.loc 1 3157 9
 7756 004e 00BF     		nop
3158:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else if (__HAL_USART_GET_FLAG(husart, USART_FLAG_TXFNF) == SET)
3160:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         tmp = (uint16_t *) husart->pTxBuffPtr;
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint16_t)(*tmp & 0x01FFU);
3163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
3165:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3166:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
3167:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3168:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Nothing to do */
3169:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3170:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3171:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3172:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7757              		.loc 1 3172 1
 7758 0050 23E0     		b	.L570
 7759              	.L567:
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 7760              		.loc 1 3159 16
 7761 0052 7B68     		ldr	r3, [r7, #4]
 7762 0054 1B68     		ldr	r3, [r3]
 7763 0056 DB69     		ldr	r3, [r3, #28]
 7764 0058 03F08003 		and	r3, r3, #128
3159:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
 7765              		.loc 1 3159 15
 7766 005c 802B     		cmp	r3, #128
 7767 005e 16D1     		bne	.L568
3161:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (uint16_t)(*tmp & 0x01FFU);
ARM GAS  /tmp/ccUeuQwq.s 			page 193


 7768              		.loc 1 3161 13
 7769 0060 7B68     		ldr	r3, [r7, #4]
 7770 0062 9B6A     		ldr	r3, [r3, #40]
 7771 0064 BB60     		str	r3, [r7, #8]
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 7772              		.loc 1 3162 44
 7773 0066 BB68     		ldr	r3, [r7, #8]
 7774 0068 1B88     		ldrh	r3, [r3]
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 7775              		.loc 1 3162 33
 7776 006a 1A46     		mov	r2, r3
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 7777              		.loc 1 3162 15
 7778 006c 7B68     		ldr	r3, [r7, #4]
 7779 006e 1B68     		ldr	r3, [r3]
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 7780              		.loc 1 3162 33
 7781 0070 C2F30802 		ubfx	r2, r2, #0, #9
3162:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pTxBuffPtr += 2U;
 7782              		.loc 1 3162 31
 7783 0074 9A62     		str	r2, [r3, #40]
3163:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxXferCount--;
 7784              		.loc 1 3163 28
 7785 0076 7B68     		ldr	r3, [r7, #4]
 7786 0078 9B6A     		ldr	r3, [r3, #40]
 7787 007a 9A1C     		adds	r2, r3, #2
 7788 007c 7B68     		ldr	r3, [r7, #4]
 7789 007e 9A62     		str	r2, [r3, #40]
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 7790              		.loc 1 3164 15
 7791 0080 7B68     		ldr	r3, [r7, #4]
 7792 0082 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 7793 0084 9BB2     		uxth	r3, r3
3164:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
 7794              		.loc 1 3164 28
 7795 0086 013B     		subs	r3, r3, #1
 7796 0088 9AB2     		uxth	r2, r3
 7797 008a 7B68     		ldr	r3, [r7, #4]
 7798 008c DA85     		strh	r2, [r3, #46]	@ movhi
 7799              	.L568:
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 7800              		.loc 1 3147 79 discriminator 2
 7801 008e FB89     		ldrh	r3, [r7, #14]
 7802 0090 013B     		subs	r3, r3, #1
 7803 0092 FB81     		strh	r3, [r7, #14]	@ movhi
 7804              	.L566:
3147:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 7805              		.loc 1 3147 5 discriminator 1
 7806 0094 FB89     		ldrh	r3, [r7, #14]
 7807 0096 002B     		cmp	r3, #0
 7808 0098 C4D1     		bne	.L569
 7809              	.L570:
 7810              		.loc 1 3172 1
 7811 009a 00BF     		nop
 7812 009c 1437     		adds	r7, r7, #20
 7813              	.LCFI238:
 7814              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccUeuQwq.s 			page 194


 7815 009e BD46     		mov	sp, r7
 7816              	.LCFI239:
 7817              		.cfi_def_cfa_register 13
 7818              		@ sp needed
 7819 00a0 5DF8047B 		ldr	r7, [sp], #4
 7820              	.LCFI240:
 7821              		.cfi_restore 7
 7822              		.cfi_def_cfa_offset 0
 7823 00a4 7047     		bx	lr
 7824              		.cfi_endproc
 7825              	.LFE374:
 7827              		.section	.text.USART_EndTransmit_IT,"ax",%progbits
 7828              		.align	1
 7829              		.syntax unified
 7830              		.thumb
 7831              		.thumb_func
 7832              		.fpu fpv5-d16
 7834              	USART_EndTransmit_IT:
 7835              	.LFB375:
3173:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3174:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3175:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Wraps up transmission in non-blocking mode.
3176:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart Pointer to a USART_HandleTypeDef structure that contains
3177:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *                the configuration information for the specified USART module.
3178:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3179:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3180:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_EndTransmit_IT(USART_HandleTypeDef *husart)
3181:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7836              		.loc 1 3181 1
 7837              		.cfi_startproc
 7838              		@ args = 0, pretend = 0, frame = 8
 7839              		@ frame_needed = 1, uses_anonymous_args = 0
 7840 0000 80B5     		push	{r7, lr}
 7841              	.LCFI241:
 7842              		.cfi_def_cfa_offset 8
 7843              		.cfi_offset 7, -8
 7844              		.cfi_offset 14, -4
 7845 0002 82B0     		sub	sp, sp, #8
 7846              	.LCFI242:
 7847              		.cfi_def_cfa_offset 16
 7848 0004 00AF     		add	r7, sp, #0
 7849              	.LCFI243:
 7850              		.cfi_def_cfa_register 7
 7851 0006 7860     		str	r0, [r7, #4]
3182:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART Transmit Complete Interrupt */
3183:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_DISABLE_IT(husart, USART_IT_TC);
 7852              		.loc 1 3183 3
 7853 0008 7B68     		ldr	r3, [r7, #4]
 7854 000a 1B68     		ldr	r3, [r3]
 7855 000c 1A68     		ldr	r2, [r3]
 7856 000e 7B68     		ldr	r3, [r7, #4]
 7857 0010 1B68     		ldr	r3, [r3]
 7858 0012 22F04002 		bic	r2, r2, #64
 7859 0016 1A60     		str	r2, [r3]
3184:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3185:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
3186:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   __HAL_USART_DISABLE_IT(husart, USART_IT_ERR);
ARM GAS  /tmp/ccUeuQwq.s 			page 195


 7860              		.loc 1 3186 3
 7861 0018 7B68     		ldr	r3, [r7, #4]
 7862 001a 1B68     		ldr	r3, [r3]
 7863 001c 9A68     		ldr	r2, [r3, #8]
 7864 001e 7B68     		ldr	r3, [r7, #4]
 7865 0020 1B68     		ldr	r3, [r3]
 7866 0022 22F00102 		bic	r2, r2, #1
 7867 0026 9A60     		str	r2, [r3, #8]
3187:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3188:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Clear TxISR function pointer */
3189:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   husart->TxISR = NULL;
 7868              		.loc 1 3189 17
 7869 0028 7B68     		ldr	r3, [r7, #4]
 7870 002a 0022     		movs	r2, #0
 7871 002c DA64     		str	r2, [r3, #76]
3190:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3191:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if (husart->State == HAL_USART_STATE_BUSY_TX)
 7872              		.loc 1 3191 13
 7873 002e 7B68     		ldr	r3, [r7, #4]
 7874 0030 93F85930 		ldrb	r3, [r3, #89]
 7875 0034 DBB2     		uxtb	r3, r3
 7876              		.loc 1 3191 6
 7877 0036 122B     		cmp	r3, #18
 7878 0038 13D1     		bne	.L572
3192:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3193:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear overrun flag and discard the received data */
3194:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_CLEAR_OREFLAG(husart);
 7879              		.loc 1 3194 5
 7880 003a 7B68     		ldr	r3, [r7, #4]
 7881 003c 1B68     		ldr	r3, [r3]
 7882 003e 0822     		movs	r2, #8
 7883 0040 1A62     		str	r2, [r3, #32]
3195:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 7884              		.loc 1 3195 5
 7885 0042 7B68     		ldr	r3, [r7, #4]
 7886 0044 1B68     		ldr	r3, [r3]
 7887 0046 9A69     		ldr	r2, [r3, #24]
 7888 0048 7B68     		ldr	r3, [r7, #4]
 7889 004a 1B68     		ldr	r3, [r3]
 7890 004c 42F00802 		orr	r2, r2, #8
 7891 0050 9A61     		str	r2, [r3, #24]
3196:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3197:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Tx process is completed, restore husart->State to Ready */
3198:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
 7892              		.loc 1 3198 19
 7893 0052 7B68     		ldr	r3, [r7, #4]
 7894 0054 0122     		movs	r2, #1
 7895 0056 83F85920 		strb	r2, [r3, #89]
3199:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3200:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3201:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call registered Tx Complete Callback */
3202:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxCpltCallback(husart);
3203:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3204:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call legacy weak Tx Complete Callback */
3205:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USART_TxCpltCallback(husart);
 7896              		.loc 1 3205 5
 7897 005a 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 196


 7898 005c FFF7FEFF 		bl	HAL_USART_TxCpltCallback
3206:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3207:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else if (husart->RxXferCount == 0U)
3209:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3210:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* TxRx process is completed, restore husart->State to Ready */
3211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->State = HAL_USART_STATE_READY;
3212:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3213:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3214:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call registered Tx Rx Complete Callback */
3215:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->TxRxCpltCallback(husart);
3216:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3217:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Call legacy weak Tx Rx Complete Callback */
3218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     HAL_USART_TxRxCpltCallback(husart);
3219:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3220:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3221:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
3222:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3223:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Nothing to do */
3224:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3225:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 7899              		.loc 1 3225 1
 7900 0060 0BE0     		b	.L574
 7901              	.L572:
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 7902              		.loc 1 3208 18
 7903 0062 7B68     		ldr	r3, [r7, #4]
 7904 0064 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 7905 0066 9BB2     		uxth	r3, r3
3208:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
 7906              		.loc 1 3208 11
 7907 0068 002B     		cmp	r3, #0
 7908 006a 06D1     		bne	.L574
3211:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 7909              		.loc 1 3211 19
 7910 006c 7B68     		ldr	r3, [r7, #4]
 7911 006e 0122     		movs	r2, #1
 7912 0070 83F85920 		strb	r2, [r3, #89]
3218:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 7913              		.loc 1 3218 5
 7914 0074 7868     		ldr	r0, [r7, #4]
 7915 0076 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 7916              	.L574:
 7917              		.loc 1 3225 1
 7918 007a 00BF     		nop
 7919 007c 0837     		adds	r7, r7, #8
 7920              	.LCFI244:
 7921              		.cfi_def_cfa_offset 8
 7922 007e BD46     		mov	sp, r7
 7923              	.LCFI245:
 7924              		.cfi_def_cfa_register 13
 7925              		@ sp needed
 7926 0080 80BD     		pop	{r7, pc}
 7927              		.cfi_endproc
 7928              	.LFE375:
 7930              		.section	.text.USART_RxISR_8BIT,"ax",%progbits
 7931              		.align	1
ARM GAS  /tmp/ccUeuQwq.s 			page 197


 7932              		.syntax unified
 7933              		.thumb
 7934              		.thumb_func
 7935              		.fpu fpv5-d16
 7937              	USART_RxISR_8BIT:
 7938              	.LFB376:
3226:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3227:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3228:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3229:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex receive an amount of data in non-blocking mode.
3230:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3231:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Receive_IT().
3232:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is disabled and when the
3233:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is less than 9 bits long.
3234:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle
3235:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3236:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3237:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_8BIT(USART_HandleTypeDef *husart)
3238:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 7939              		.loc 1 3238 1
 7940              		.cfi_startproc
 7941              		@ args = 0, pretend = 0, frame = 24
 7942              		@ frame_needed = 1, uses_anonymous_args = 0
 7943 0000 80B5     		push	{r7, lr}
 7944              	.LCFI246:
 7945              		.cfi_def_cfa_offset 8
 7946              		.cfi_offset 7, -8
 7947              		.cfi_offset 14, -4
 7948 0002 86B0     		sub	sp, sp, #24
 7949              	.LCFI247:
 7950              		.cfi_def_cfa_offset 32
 7951 0004 00AF     		add	r7, sp, #0
 7952              	.LCFI248:
 7953              		.cfi_def_cfa_register 7
 7954 0006 7860     		str	r0, [r7, #4]
3239:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 7955              		.loc 1 3239 32
 7956 0008 7B68     		ldr	r3, [r7, #4]
 7957 000a 93F85930 		ldrb	r3, [r3, #89]
 7958 000e FB75     		strb	r3, [r7, #23]
3240:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t txdatacount;
3241:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 7959              		.loc 1 3241 12
 7960 0010 7B68     		ldr	r3, [r7, #4]
 7961 0012 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 7962 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3242:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t txftie;
3243:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3244:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_RX) ||
 7963              		.loc 1 3244 6
 7964 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7965 0018 222B     		cmp	r3, #34
 7966 001a 02D0     		beq	.L576
 7967              		.loc 1 3244 42 discriminator 1
 7968 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7969 001e 322B     		cmp	r3, #50
 7970 0020 74D1     		bne	.L581
ARM GAS  /tmp/ccUeuQwq.s 			page 198


 7971              	.L576:
3245:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3246:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3247:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     *husart->pRxBuffPtr = (uint8_t)(husart->Instance->RDR & (uint8_t)uhMask);
 7972              		.loc 1 3247 43
 7973 0022 7B68     		ldr	r3, [r7, #4]
 7974 0024 1B68     		ldr	r3, [r3]
 7975              		.loc 1 3247 53
 7976 0026 5B6A     		ldr	r3, [r3, #36]
 7977              		.loc 1 3247 27
 7978 0028 D9B2     		uxtb	r1, r3
 7979              		.loc 1 3247 61
 7980 002a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 7981 002c DAB2     		uxtb	r2, r3
 7982              		.loc 1 3247 12
 7983 002e 7B68     		ldr	r3, [r7, #4]
 7984 0030 1B6B     		ldr	r3, [r3, #48]
 7985              		.loc 1 3247 27
 7986 0032 0A40     		ands	r2, r2, r1
 7987 0034 D2B2     		uxtb	r2, r2
 7988              		.loc 1 3247 25
 7989 0036 1A70     		strb	r2, [r3]
3248:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr++;
 7990              		.loc 1 3248 11
 7991 0038 7B68     		ldr	r3, [r7, #4]
 7992 003a 1B6B     		ldr	r3, [r3, #48]
 7993              		.loc 1 3248 23
 7994 003c 5A1C     		adds	r2, r3, #1
 7995 003e 7B68     		ldr	r3, [r7, #4]
 7996 0040 1A63     		str	r2, [r3, #48]
3249:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount--;
 7997              		.loc 1 3249 11
 7998 0042 7B68     		ldr	r3, [r7, #4]
 7999 0044 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8000 0046 9BB2     		uxth	r3, r3
 8001              		.loc 1 3249 24
 8002 0048 013B     		subs	r3, r3, #1
 8003 004a 9AB2     		uxth	r2, r3
 8004 004c 7B68     		ldr	r3, [r7, #4]
 8005 004e DA86     		strh	r2, [r3, #54]	@ movhi
3250:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3251:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->RxXferCount == 0U)
 8006              		.loc 1 3251 15
 8007 0050 7B68     		ldr	r3, [r7, #4]
 8008 0052 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8009 0054 9BB2     		uxth	r3, r3
 8010              		.loc 1 3251 8
 8011 0056 002B     		cmp	r3, #0
 8012 0058 4DD1     		bne	.L578
3252:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3253:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt and RXNE interrupt*/
3254:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8013              		.loc 1 3254 7
 8014 005a 7B68     		ldr	r3, [r7, #4]
 8015 005c 1B68     		ldr	r3, [r3]
 8016 005e 1A68     		ldr	r2, [r3]
 8017 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 199


 8018 0062 1B68     		ldr	r3, [r3]
 8019 0064 22F49072 		bic	r2, r2, #288
 8020 0068 1A60     		str	r2, [r3]
3255:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3256:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
3257:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 8021              		.loc 1 3257 7
 8022 006a 7B68     		ldr	r3, [r7, #4]
 8023 006c 1B68     		ldr	r3, [r3]
 8024 006e 9A68     		ldr	r2, [r3, #8]
 8025 0070 7B68     		ldr	r3, [r7, #4]
 8026 0072 1B68     		ldr	r3, [r3]
 8027 0074 22F00102 		bic	r2, r2, #1
 8028 0078 9A60     		str	r2, [r3, #8]
3258:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3259:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Clear RxISR function pointer */
3260:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxISR = NULL;
 8029              		.loc 1 3260 21
 8030 007a 7B68     		ldr	r3, [r7, #4]
 8031 007c 0022     		movs	r2, #0
 8032 007e 9A64     		str	r2, [r3, #72]
3261:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3262:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* txftie and txdatacount are temporary variables for MISRAC2012-Rule-13.5 */
3263:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       txftie = READ_BIT(husart->Instance->CR3, USART_CR3_TXFTIE);
 8033              		.loc 1 3263 16
 8034 0080 7B68     		ldr	r3, [r7, #4]
 8035 0082 1B68     		ldr	r3, [r3]
 8036 0084 9B68     		ldr	r3, [r3, #8]
 8037              		.loc 1 3263 14
 8038 0086 03F40003 		and	r3, r3, #8388608
 8039 008a 3B61     		str	r3, [r7, #16]
3264:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       txdatacount = husart->TxXferCount;
 8040              		.loc 1 3264 19
 8041 008c 7B68     		ldr	r3, [r7, #4]
 8042 008e DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8043 0090 FB81     		strh	r3, [r7, #14]	@ movhi
3265:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3266:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (state == HAL_USART_STATE_BUSY_RX)
 8044              		.loc 1 3266 10
 8045 0092 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8046 0094 222B     		cmp	r3, #34
 8047 0096 18D1     		bne	.L579
3267:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3268:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Clear SPI slave underrun flag and discard transmit data */
3269:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (husart->SlaveMode == USART_SLAVEMODE_ENABLE)
 8048              		.loc 1 3269 19
 8049 0098 7B68     		ldr	r3, [r7, #4]
 8050 009a 1B6C     		ldr	r3, [r3, #64]
 8051              		.loc 1 3269 12
 8052 009c 012B     		cmp	r3, #1
 8053 009e 0CD1     		bne	.L580
3270:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3271:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           __HAL_USART_CLEAR_UDRFLAG(husart);
 8054              		.loc 1 3271 11
 8055 00a0 7B68     		ldr	r3, [r7, #4]
 8056 00a2 1B68     		ldr	r3, [r3]
 8057 00a4 4FF40052 		mov	r2, #8192
ARM GAS  /tmp/ccUeuQwq.s 			page 200


 8058 00a8 1A62     		str	r2, [r3, #32]
3272:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 8059              		.loc 1 3272 11
 8060 00aa 7B68     		ldr	r3, [r7, #4]
 8061 00ac 1B68     		ldr	r3, [r3]
 8062 00ae 9A69     		ldr	r2, [r3, #24]
 8063 00b0 7B68     		ldr	r3, [r7, #4]
 8064 00b2 1B68     		ldr	r3, [r3]
 8065 00b4 42F01002 		orr	r2, r2, #16
 8066 00b8 9A61     		str	r2, [r3, #24]
 8067              	.L580:
3273:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3274:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3275:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Rx process is completed, restore husart->State to Ready */
3276:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
 8068              		.loc 1 3276 23
 8069 00ba 7B68     		ldr	r3, [r7, #4]
 8070 00bc 0122     		movs	r2, #1
 8071 00be 83F85920 		strb	r2, [r3, #89]
3277:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3278:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3279:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call registered Rx Complete Callback */
3280:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxCpltCallback(husart);
3281:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3282:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call legacy weak Rx Complete Callback */
3283:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_USART_RxCpltCallback(husart);
 8072              		.loc 1 3283 9
 8073 00c2 7868     		ldr	r0, [r7, #4]
 8074 00c4 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
3284:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3285:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else if ((READ_BIT(husart->Instance->CR1, USART_CR1_TCIE) != USART_CR1_TCIE) &&
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
3288:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txdatacount == 0U))
3289:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3290:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* TxRx process is completed, restore husart->State to Ready */
3291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
3292:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3293:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3294:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call registered Tx Rx Complete Callback */
3295:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxRxCpltCallback(husart);
3296:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3297:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call legacy weak Tx Rx Complete Callback */
3298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_USART_TxRxCpltCallback(husart);
3299:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3300:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3301:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
3302:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3303:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Nothing to do */
3304:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3305:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else if ((state == HAL_USART_STATE_BUSY_RX) &&
3307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
3308:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3309:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
3311:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
ARM GAS  /tmp/ccUeuQwq.s 			page 201


3312:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
3313:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3314:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Nothing to do */
3315:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3316:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3317:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 8075              		.loc 1 3317 1
 8076 00c8 20E0     		b	.L581
 8077              	.L579:
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8078              		.loc 1 3286 17
 8079 00ca 7B68     		ldr	r3, [r7, #4]
 8080 00cc 1B68     		ldr	r3, [r3]
 8081 00ce 1B68     		ldr	r3, [r3]
 8082 00d0 03F04003 		and	r3, r3, #64
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8083              		.loc 1 3286 15
 8084 00d4 402B     		cmp	r3, #64
 8085 00d6 19D0     		beq	.L581
3286:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8086              		.loc 1 3286 84 discriminator 1
 8087 00d8 3B69     		ldr	r3, [r7, #16]
 8088 00da B3F5000F 		cmp	r3, #8388608
 8089 00de 15D0     		beq	.L581
3287:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txdatacount == 0U))
 8090              		.loc 1 3287 45
 8091 00e0 FB89     		ldrh	r3, [r7, #14]
 8092 00e2 002B     		cmp	r3, #0
 8093 00e4 12D1     		bne	.L581
3291:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 8094              		.loc 1 3291 23
 8095 00e6 7B68     		ldr	r3, [r7, #4]
 8096 00e8 0122     		movs	r2, #1
 8097 00ea 83F85920 		strb	r2, [r3, #89]
3298:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 8098              		.loc 1 3298 9
 8099 00ee 7868     		ldr	r0, [r7, #4]
 8100 00f0 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 8101              		.loc 1 3317 1
 8102 00f4 0AE0     		b	.L581
 8103              	.L578:
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8104              		.loc 1 3306 13
 8105 00f6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8106 00f8 222B     		cmp	r3, #34
 8107 00fa 07D1     		bne	.L581
3307:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8108              		.loc 1 3307 21 discriminator 1
 8109 00fc 7B68     		ldr	r3, [r7, #4]
 8110 00fe 1B6C     		ldr	r3, [r3, #64]
3306:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8111              		.loc 1 3306 49 discriminator 1
 8112 0100 002B     		cmp	r3, #0
 8113 0102 03D1     		bne	.L581
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 8114              		.loc 1 3310 13
 8115 0104 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 202


 8116 0106 1B68     		ldr	r3, [r3]
3310:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 8117              		.loc 1 3310 29
 8118 0108 FF22     		movs	r2, #255
 8119 010a 9A62     		str	r2, [r3, #40]
 8120              	.L581:
 8121              		.loc 1 3317 1
 8122 010c 00BF     		nop
 8123 010e 1837     		adds	r7, r7, #24
 8124              	.LCFI249:
 8125              		.cfi_def_cfa_offset 8
 8126 0110 BD46     		mov	sp, r7
 8127              	.LCFI250:
 8128              		.cfi_def_cfa_register 13
 8129              		@ sp needed
 8130 0112 80BD     		pop	{r7, pc}
 8131              		.cfi_endproc
 8132              	.LFE376:
 8134              		.section	.text.USART_RxISR_16BIT,"ax",%progbits
 8135              		.align	1
 8136              		.syntax unified
 8137              		.thumb
 8138              		.thumb_func
 8139              		.fpu fpv5-d16
 8141              	USART_RxISR_16BIT:
 8142              	.LFB377:
3318:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3319:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3320:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex receive an amount of data in non-blocking mode.
3321:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3322:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Receive_IT().
3323:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is disabled and when the
3324:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is 9 bits long.
3325:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle
3326:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3327:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3328:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_16BIT(USART_HandleTypeDef *husart)
3329:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 8143              		.loc 1 3329 1
 8144              		.cfi_startproc
 8145              		@ args = 0, pretend = 0, frame = 24
 8146              		@ frame_needed = 1, uses_anonymous_args = 0
 8147 0000 80B5     		push	{r7, lr}
 8148              	.LCFI251:
 8149              		.cfi_def_cfa_offset 8
 8150              		.cfi_offset 7, -8
 8151              		.cfi_offset 14, -4
 8152 0002 86B0     		sub	sp, sp, #24
 8153              	.LCFI252:
 8154              		.cfi_def_cfa_offset 32
 8155 0004 00AF     		add	r7, sp, #0
 8156              	.LCFI253:
 8157              		.cfi_def_cfa_register 7
 8158 0006 7860     		str	r0, [r7, #4]
3330:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   const HAL_USART_StateTypeDef state = husart->State;
 8159              		.loc 1 3330 32
 8160 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 203


 8161 000a 93F85930 		ldrb	r3, [r3, #89]
 8162 000e FB75     		strb	r3, [r7, #23]
3331:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t txdatacount;
3332:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *tmp;
3333:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 8163              		.loc 1 3333 12
 8164 0010 7B68     		ldr	r3, [r7, #4]
 8165 0012 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 8166 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3334:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t txftie;
3335:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3336:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_RX) ||
 8167              		.loc 1 3336 6
 8168 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8169 0018 222B     		cmp	r3, #34
 8170 001a 02D0     		beq	.L583
 8171              		.loc 1 3336 42 discriminator 1
 8172 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8173 001e 322B     		cmp	r3, #50
 8174 0020 75D1     		bne	.L588
 8175              	.L583:
3337:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3338:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3339:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     tmp = (uint16_t *) husart->pRxBuffPtr;
 8176              		.loc 1 3339 9
 8177 0022 7B68     		ldr	r3, [r7, #4]
 8178 0024 1B6B     		ldr	r3, [r3, #48]
 8179 0026 3B61     		str	r3, [r7, #16]
3340:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 8180              		.loc 1 3340 29
 8181 0028 7B68     		ldr	r3, [r7, #4]
 8182 002a 1B68     		ldr	r3, [r3]
 8183              		.loc 1 3340 39
 8184 002c 5B6A     		ldr	r3, [r3, #36]
 8185              		.loc 1 3340 12
 8186 002e 9AB2     		uxth	r2, r3
 8187 0030 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 8188 0032 1340     		ands	r3, r3, r2
 8189 0034 9AB2     		uxth	r2, r3
 8190              		.loc 1 3340 10
 8191 0036 3B69     		ldr	r3, [r7, #16]
 8192 0038 1A80     		strh	r2, [r3]	@ movhi
3341:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->pRxBuffPtr += 2U;
 8193              		.loc 1 3341 24
 8194 003a 7B68     		ldr	r3, [r7, #4]
 8195 003c 1B6B     		ldr	r3, [r3, #48]
 8196 003e 9A1C     		adds	r2, r3, #2
 8197 0040 7B68     		ldr	r3, [r7, #4]
 8198 0042 1A63     		str	r2, [r3, #48]
3342:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     husart->RxXferCount--;
 8199              		.loc 1 3342 11
 8200 0044 7B68     		ldr	r3, [r7, #4]
 8201 0046 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8202 0048 9BB2     		uxth	r3, r3
 8203              		.loc 1 3342 24
 8204 004a 013B     		subs	r3, r3, #1
 8205 004c 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccUeuQwq.s 			page 204


 8206 004e 7B68     		ldr	r3, [r7, #4]
 8207 0050 DA86     		strh	r2, [r3, #54]	@ movhi
3343:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3344:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (husart->RxXferCount == 0U)
 8208              		.loc 1 3344 15
 8209 0052 7B68     		ldr	r3, [r7, #4]
 8210 0054 DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8211 0056 9BB2     		uxth	r3, r3
 8212              		.loc 1 3344 8
 8213 0058 002B     		cmp	r3, #0
 8214 005a 4DD1     		bne	.L585
3345:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3346:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Parity Error Interrupt and RXNE interrupt*/
3347:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 8215              		.loc 1 3347 7
 8216 005c 7B68     		ldr	r3, [r7, #4]
 8217 005e 1B68     		ldr	r3, [r3]
 8218 0060 1A68     		ldr	r2, [r3]
 8219 0062 7B68     		ldr	r3, [r7, #4]
 8220 0064 1B68     		ldr	r3, [r3]
 8221 0066 22F49072 		bic	r2, r2, #288
 8222 006a 1A60     		str	r2, [r3]
3348:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3349:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error) */
3350:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_EIE);
 8223              		.loc 1 3350 7
 8224 006c 7B68     		ldr	r3, [r7, #4]
 8225 006e 1B68     		ldr	r3, [r3]
 8226 0070 9A68     		ldr	r2, [r3, #8]
 8227 0072 7B68     		ldr	r3, [r7, #4]
 8228 0074 1B68     		ldr	r3, [r3]
 8229 0076 22F00102 		bic	r2, r2, #1
 8230 007a 9A60     		str	r2, [r3, #8]
3351:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3352:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Clear RxISR function pointer */
3353:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxISR = NULL;
 8231              		.loc 1 3353 21
 8232 007c 7B68     		ldr	r3, [r7, #4]
 8233 007e 0022     		movs	r2, #0
 8234 0080 9A64     		str	r2, [r3, #72]
3354:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3355:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* txftie and txdatacount are temporary variables for MISRAC2012-Rule-13.5 */
3356:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       txftie = READ_BIT(husart->Instance->CR3, USART_CR3_TXFTIE);
 8235              		.loc 1 3356 16
 8236 0082 7B68     		ldr	r3, [r7, #4]
 8237 0084 1B68     		ldr	r3, [r3]
 8238 0086 9B68     		ldr	r3, [r3, #8]
 8239              		.loc 1 3356 14
 8240 0088 03F40003 		and	r3, r3, #8388608
 8241 008c FB60     		str	r3, [r7, #12]
3357:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       txdatacount = husart->TxXferCount;
 8242              		.loc 1 3357 19
 8243 008e 7B68     		ldr	r3, [r7, #4]
 8244 0090 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8245 0092 7B81     		strh	r3, [r7, #10]	@ movhi
3358:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3359:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (state == HAL_USART_STATE_BUSY_RX)
ARM GAS  /tmp/ccUeuQwq.s 			page 205


 8246              		.loc 1 3359 10
 8247 0094 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8248 0096 222B     		cmp	r3, #34
 8249 0098 18D1     		bne	.L586
3360:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3361:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Clear SPI slave underrun flag and discard transmit data */
3362:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (husart->SlaveMode == USART_SLAVEMODE_ENABLE)
 8250              		.loc 1 3362 19
 8251 009a 7B68     		ldr	r3, [r7, #4]
 8252 009c 1B6C     		ldr	r3, [r3, #64]
 8253              		.loc 1 3362 12
 8254 009e 012B     		cmp	r3, #1
 8255 00a0 0CD1     		bne	.L587
3363:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3364:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           __HAL_USART_CLEAR_UDRFLAG(husart);
 8256              		.loc 1 3364 11
 8257 00a2 7B68     		ldr	r3, [r7, #4]
 8258 00a4 1B68     		ldr	r3, [r3]
 8259 00a6 4FF40052 		mov	r2, #8192
 8260 00aa 1A62     		str	r2, [r3, #32]
3365:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 8261              		.loc 1 3365 11
 8262 00ac 7B68     		ldr	r3, [r7, #4]
 8263 00ae 1B68     		ldr	r3, [r3]
 8264 00b0 9A69     		ldr	r2, [r3, #24]
 8265 00b2 7B68     		ldr	r3, [r7, #4]
 8266 00b4 1B68     		ldr	r3, [r3]
 8267 00b6 42F01002 		orr	r2, r2, #16
 8268 00ba 9A61     		str	r2, [r3, #24]
 8269              	.L587:
3366:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3367:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3368:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Rx process is completed, restore husart->State to Ready */
3369:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
 8270              		.loc 1 3369 23
 8271 00bc 7B68     		ldr	r3, [r7, #4]
 8272 00be 0122     		movs	r2, #1
 8273 00c0 83F85920 		strb	r2, [r3, #89]
3370:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3371:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3372:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call registered Rx Complete Callback */
3373:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxCpltCallback(husart);
3374:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3375:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call legacy weak Rx Complete Callback */
3376:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_USART_RxCpltCallback(husart);
 8274              		.loc 1 3376 9
 8275 00c4 7868     		ldr	r0, [r7, #4]
 8276 00c6 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
3377:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3378:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else if ((READ_BIT(husart->Instance->CR1, USART_CR1_TCIE) != USART_CR1_TCIE) &&
3380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
3381:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txdatacount == 0U))
3382:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3383:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* TxRx process is completed, restore husart->State to Ready */
3384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->State = HAL_USART_STATE_READY;
3385:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
ARM GAS  /tmp/ccUeuQwq.s 			page 206


3386:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3387:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call registered Tx Rx Complete Callback */
3388:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->TxRxCpltCallback(husart);
3389:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3390:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Call legacy weak Tx Rx Complete Callback */
3391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         HAL_USART_TxRxCpltCallback(husart);
3392:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3393:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3394:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       else
3395:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3396:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Nothing to do */
3397:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3398:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else if ((state == HAL_USART_STATE_BUSY_RX) &&
3400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
3401:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3402:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
3404:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3405:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     else
3406:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3407:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Nothing to do */
3408:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3409:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3410:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 8277              		.loc 1 3410 1
 8278 00ca 20E0     		b	.L588
 8279              	.L586:
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8280              		.loc 1 3379 17
 8281 00cc 7B68     		ldr	r3, [r7, #4]
 8282 00ce 1B68     		ldr	r3, [r3]
 8283 00d0 1B68     		ldr	r3, [r3]
 8284 00d2 03F04003 		and	r3, r3, #64
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8285              		.loc 1 3379 15
 8286 00d6 402B     		cmp	r3, #64
 8287 00d8 19D0     		beq	.L588
3379:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txftie != USART_CR3_TXFTIE) &&
 8288              		.loc 1 3379 84 discriminator 1
 8289 00da FB68     		ldr	r3, [r7, #12]
 8290 00dc B3F5000F 		cmp	r3, #8388608
 8291 00e0 15D0     		beq	.L588
3380:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                (txdatacount == 0U))
 8292              		.loc 1 3380 45
 8293 00e2 7B89     		ldrh	r3, [r7, #10]
 8294 00e4 002B     		cmp	r3, #0
 8295 00e6 12D1     		bne	.L588
3384:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
 8296              		.loc 1 3384 23
 8297 00e8 7B68     		ldr	r3, [r7, #4]
 8298 00ea 0122     		movs	r2, #1
 8299 00ec 83F85920 		strb	r2, [r3, #89]
3391:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
 8300              		.loc 1 3391 9
 8301 00f0 7868     		ldr	r0, [r7, #4]
 8302 00f2 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
ARM GAS  /tmp/ccUeuQwq.s 			page 207


 8303              		.loc 1 3410 1
 8304 00f6 0AE0     		b	.L588
 8305              	.L585:
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8306              		.loc 1 3399 13
 8307 00f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8308 00fa 222B     		cmp	r3, #34
 8309 00fc 07D1     		bne	.L588
3400:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8310              		.loc 1 3400 21 discriminator 1
 8311 00fe 7B68     		ldr	r3, [r7, #4]
 8312 0100 1B6C     		ldr	r3, [r3, #64]
3399:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8313              		.loc 1 3399 49 discriminator 1
 8314 0102 002B     		cmp	r3, #0
 8315 0104 03D1     		bne	.L588
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 8316              		.loc 1 3403 13
 8317 0106 7B68     		ldr	r3, [r7, #4]
 8318 0108 1B68     		ldr	r3, [r3]
3403:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
 8319              		.loc 1 3403 29
 8320 010a FF22     		movs	r2, #255
 8321 010c 9A62     		str	r2, [r3, #40]
 8322              	.L588:
 8323              		.loc 1 3410 1
 8324 010e 00BF     		nop
 8325 0110 1837     		adds	r7, r7, #24
 8326              	.LCFI254:
 8327              		.cfi_def_cfa_offset 8
 8328 0112 BD46     		mov	sp, r7
 8329              	.LCFI255:
 8330              		.cfi_def_cfa_register 13
 8331              		@ sp needed
 8332 0114 80BD     		pop	{r7, pc}
 8333              		.cfi_endproc
 8334              	.LFE377:
 8336              		.section	.text.USART_RxISR_8BIT_FIFOEN,"ax",%progbits
 8337              		.align	1
 8338              		.syntax unified
 8339              		.thumb
 8340              		.thumb_func
 8341              		.fpu fpv5-d16
 8343              	USART_RxISR_8BIT_FIFOEN:
 8344              	.LFB378:
3411:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3412:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3413:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex receive an amount of data in non-blocking mode.
3414:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3415:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Receive_IT().
3416:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is enabled and when the
3417:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is less than 9 bits long.
3418:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle
3419:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3420:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3421:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_8BIT_FIFOEN(USART_HandleTypeDef *husart)
3422:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
ARM GAS  /tmp/ccUeuQwq.s 			page 208


 8345              		.loc 1 3422 1
 8346              		.cfi_startproc
 8347              		@ args = 0, pretend = 0, frame = 24
 8348              		@ frame_needed = 1, uses_anonymous_args = 0
 8349 0000 80B5     		push	{r7, lr}
 8350              	.LCFI256:
 8351              		.cfi_def_cfa_offset 8
 8352              		.cfi_offset 7, -8
 8353              		.cfi_offset 14, -4
 8354 0002 86B0     		sub	sp, sp, #24
 8355              	.LCFI257:
 8356              		.cfi_def_cfa_offset 32
 8357 0004 00AF     		add	r7, sp, #0
 8358              	.LCFI258:
 8359              		.cfi_def_cfa_register 7
 8360 0006 7860     		str	r0, [r7, #4]
3423:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_StateTypeDef state = husart->State;
 8361              		.loc 1 3423 26
 8362 0008 7B68     		ldr	r3, [r7, #4]
 8363 000a 93F85930 		ldrb	r3, [r3, #89]
 8364 000e FB75     		strb	r3, [r7, #23]
3424:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t txdatacount;
3425:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t rxdatacount;
3426:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 8365              		.loc 1 3426 12
 8366 0010 7B68     		ldr	r3, [r7, #4]
 8367 0012 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 8368 0014 7B82     		strh	r3, [r7, #18]	@ movhi
3427:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t nb_rx_data;
3428:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t txftie;
3429:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3430:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Rx process is ongoing */
3431:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_RX) ||
 8369              		.loc 1 3431 6
 8370 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8371 0018 222B     		cmp	r3, #34
 8372 001a 03D0     		beq	.L590
 8373              		.loc 1 3431 42 discriminator 1
 8374 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8375 001e 322B     		cmp	r3, #50
 8376 0020 40F0BA80 		bne	.L591
 8377              	.L590:
3432:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3433:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     for (nb_rx_data = husart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 8378              		.loc 1 3434 21
 8379 0024 7B68     		ldr	r3, [r7, #4]
 8380 0026 5B8F     		ldrh	r3, [r3, #58]	@ movhi
 8381 0028 BB82     		strh	r3, [r7, #20]	@ movhi
 8382              		.loc 1 3434 5
 8383 002a 82E0     		b	.L592
 8384              	.L597:
3435:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3436:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (__HAL_USART_GET_FLAG(husart, USART_FLAG_RXFNE) == SET)
 8385              		.loc 1 3436 11
 8386 002c 7B68     		ldr	r3, [r7, #4]
 8387 002e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUeuQwq.s 			page 209


 8388 0030 DB69     		ldr	r3, [r3, #28]
 8389 0032 03F02003 		and	r3, r3, #32
 8390              		.loc 1 3436 10
 8391 0036 202B     		cmp	r3, #32
 8392 0038 78D1     		bne	.L593
3437:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3438:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         *husart->pRxBuffPtr = (uint8_t)(husart->Instance->RDR & (uint8_t)(uhMask & 0xFFU));
 8393              		.loc 1 3438 47
 8394 003a 7B68     		ldr	r3, [r7, #4]
 8395 003c 1B68     		ldr	r3, [r3]
 8396              		.loc 1 3438 57
 8397 003e 5B6A     		ldr	r3, [r3, #36]
 8398              		.loc 1 3438 31
 8399 0040 D9B2     		uxtb	r1, r3
 8400              		.loc 1 3438 65
 8401 0042 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 8402 0044 DAB2     		uxtb	r2, r3
 8403              		.loc 1 3438 16
 8404 0046 7B68     		ldr	r3, [r7, #4]
 8405 0048 1B6B     		ldr	r3, [r3, #48]
 8406              		.loc 1 3438 31
 8407 004a 0A40     		ands	r2, r2, r1
 8408 004c D2B2     		uxtb	r2, r2
 8409              		.loc 1 3438 29
 8410 004e 1A70     		strb	r2, [r3]
3439:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pRxBuffPtr++;
 8411              		.loc 1 3439 15
 8412 0050 7B68     		ldr	r3, [r7, #4]
 8413 0052 1B6B     		ldr	r3, [r3, #48]
 8414              		.loc 1 3439 27
 8415 0054 5A1C     		adds	r2, r3, #1
 8416 0056 7B68     		ldr	r3, [r7, #4]
 8417 0058 1A63     		str	r2, [r3, #48]
3440:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxXferCount--;
 8418              		.loc 1 3440 15
 8419 005a 7B68     		ldr	r3, [r7, #4]
 8420 005c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8421 005e 9BB2     		uxth	r3, r3
 8422              		.loc 1 3440 28
 8423 0060 013B     		subs	r3, r3, #1
 8424 0062 9AB2     		uxth	r2, r3
 8425 0064 7B68     		ldr	r3, [r7, #4]
 8426 0066 DA86     		strh	r2, [r3, #54]	@ movhi
3441:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3442:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (husart->RxXferCount == 0U)
 8427              		.loc 1 3442 19
 8428 0068 7B68     		ldr	r3, [r7, #4]
 8429 006a DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8430 006c 9BB2     		uxth	r3, r3
 8431              		.loc 1 3442 12
 8432 006e 002B     		cmp	r3, #0
 8433 0070 51D1     		bne	.L594
3443:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3444:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Disable the USART Parity Error Interrupt */
3445:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 8434              		.loc 1 3445 11
 8435 0072 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 210


 8436 0074 1B68     		ldr	r3, [r3]
 8437 0076 1A68     		ldr	r2, [r3]
 8438 0078 7B68     		ldr	r3, [r7, #4]
 8439 007a 1B68     		ldr	r3, [r3]
 8440 007c 22F48072 		bic	r2, r2, #256
 8441 0080 1A60     		str	r2, [r3]
3446:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3447:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error)
3448:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              and RX FIFO Threshold interrupt */
3449:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 8442              		.loc 1 3449 11
 8443 0082 7B68     		ldr	r3, [r7, #4]
 8444 0084 1B68     		ldr	r3, [r3]
 8445 0086 9968     		ldr	r1, [r3, #8]
 8446 0088 7B68     		ldr	r3, [r7, #4]
 8447 008a 1A68     		ldr	r2, [r3]
 8448 008c 494B     		ldr	r3, .L602
 8449 008e 0B40     		ands	r3, r3, r1
 8450 0090 9360     		str	r3, [r2, #8]
3450:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3451:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Clear RxISR function pointer */
3452:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->RxISR = NULL;
 8451              		.loc 1 3452 25
 8452 0092 7B68     		ldr	r3, [r7, #4]
 8453 0094 0022     		movs	r2, #0
 8454 0096 9A64     		str	r2, [r3, #72]
3453:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3454:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* txftie and txdatacount are temporary variables for MISRAC2012-Rule-13.5 */
3455:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           txftie = READ_BIT(husart->Instance->CR3, USART_CR3_TXFTIE);
 8455              		.loc 1 3455 20
 8456 0098 7B68     		ldr	r3, [r7, #4]
 8457 009a 1B68     		ldr	r3, [r3]
 8458 009c 9B68     		ldr	r3, [r3, #8]
 8459              		.loc 1 3455 18
 8460 009e 03F40003 		and	r3, r3, #8388608
 8461 00a2 FB60     		str	r3, [r7, #12]
3456:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           txdatacount = husart->TxXferCount;
 8462              		.loc 1 3456 23
 8463 00a4 7B68     		ldr	r3, [r7, #4]
 8464 00a6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8465 00a8 7B81     		strh	r3, [r7, #10]	@ movhi
3457:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3458:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           if (state == HAL_USART_STATE_BUSY_RX)
 8466              		.loc 1 3458 14
 8467 00aa FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8468 00ac 222B     		cmp	r3, #34
 8469 00ae 1AD1     		bne	.L595
3459:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3460:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Clear SPI slave underrun flag and discard transmit data */
3461:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             if (husart->SlaveMode == USART_SLAVEMODE_ENABLE)
 8470              		.loc 1 3461 23
 8471 00b0 7B68     		ldr	r3, [r7, #4]
 8472 00b2 1B6C     		ldr	r3, [r3, #64]
 8473              		.loc 1 3461 16
 8474 00b4 012B     		cmp	r3, #1
 8475 00b6 0CD1     		bne	.L596
3462:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             {
ARM GAS  /tmp/ccUeuQwq.s 			page 211


3463:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               __HAL_USART_CLEAR_UDRFLAG(husart);
 8476              		.loc 1 3463 15
 8477 00b8 7B68     		ldr	r3, [r7, #4]
 8478 00ba 1B68     		ldr	r3, [r3]
 8479 00bc 4FF40052 		mov	r2, #8192
 8480 00c0 1A62     		str	r2, [r3, #32]
3464:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 8481              		.loc 1 3464 15
 8482 00c2 7B68     		ldr	r3, [r7, #4]
 8483 00c4 1B68     		ldr	r3, [r3]
 8484 00c6 9A69     		ldr	r2, [r3, #24]
 8485 00c8 7B68     		ldr	r3, [r7, #4]
 8486 00ca 1B68     		ldr	r3, [r3]
 8487 00cc 42F01002 		orr	r2, r2, #16
 8488 00d0 9A61     		str	r2, [r3, #24]
 8489              	.L596:
3465:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             }
3466:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3467:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Rx process is completed, restore husart->State to Ready */
3468:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->State = HAL_USART_STATE_READY;
 8490              		.loc 1 3468 27
 8491 00d2 7B68     		ldr	r3, [r7, #4]
 8492 00d4 0122     		movs	r2, #1
 8493 00d6 83F85920 		strb	r2, [r3, #89]
3469:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             state = HAL_USART_STATE_READY;
 8494              		.loc 1 3469 19
 8495 00da 0123     		movs	r3, #1
 8496 00dc FB75     		strb	r3, [r7, #23]
3470:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3471:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3472:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call registered Rx Complete Callback */
3473:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->RxCpltCallback(husart);
3474:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3475:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call legacy weak Rx Complete Callback */
3476:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             HAL_USART_RxCpltCallback(husart);
 8497              		.loc 1 3476 13
 8498 00de 7868     		ldr	r0, [r7, #4]
 8499 00e0 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 8500 00e4 22E0     		b	.L593
 8501              	.L595:
3477:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3478:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3479:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           else if ((READ_BIT(husart->Instance->CR1, USART_CR1_TCIE) != USART_CR1_TCIE) &&
 8502              		.loc 1 3479 21
 8503 00e6 7B68     		ldr	r3, [r7, #4]
 8504 00e8 1B68     		ldr	r3, [r3]
 8505 00ea 1B68     		ldr	r3, [r3]
 8506 00ec 03F04003 		and	r3, r3, #64
 8507              		.loc 1 3479 19
 8508 00f0 402B     		cmp	r3, #64
 8509 00f2 1BD0     		beq	.L593
 8510              		.loc 1 3479 88 discriminator 1
 8511 00f4 FB68     		ldr	r3, [r7, #12]
 8512 00f6 B3F5000F 		cmp	r3, #8388608
 8513 00fa 17D0     		beq	.L593
3480:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                    (txftie != USART_CR3_TXFTIE) &&
 8514              		.loc 1 3480 49
ARM GAS  /tmp/ccUeuQwq.s 			page 212


 8515 00fc 7B89     		ldrh	r3, [r7, #10]
 8516 00fe 002B     		cmp	r3, #0
 8517 0100 14D1     		bne	.L593
3481:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                    (txdatacount == 0U))
3482:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3483:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* TxRx process is completed, restore husart->State to Ready */
3484:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->State = HAL_USART_STATE_READY;
 8518              		.loc 1 3484 27
 8519 0102 7B68     		ldr	r3, [r7, #4]
 8520 0104 0122     		movs	r2, #1
 8521 0106 83F85920 		strb	r2, [r3, #89]
3485:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             state = HAL_USART_STATE_READY;
 8522              		.loc 1 3485 19
 8523 010a 0123     		movs	r3, #1
 8524 010c FB75     		strb	r3, [r7, #23]
3486:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3487:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3488:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call registered Tx Rx Complete Callback */
3489:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->TxRxCpltCallback(husart);
3490:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3491:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call legacy weak Tx Rx Complete Callback */
3492:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             HAL_USART_TxRxCpltCallback(husart);
 8525              		.loc 1 3492 13
 8526 010e 7868     		ldr	r0, [r7, #4]
 8527 0110 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 8528 0114 0AE0     		b	.L593
 8529              	.L594:
3493:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3494:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3495:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           else
3496:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3497:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Nothing to do */
3498:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3499:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else if ((state == HAL_USART_STATE_BUSY_RX) &&
 8530              		.loc 1 3500 17
 8531 0116 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8532 0118 222B     		cmp	r3, #34
 8533 011a 07D1     		bne	.L593
3501:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                  (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8534              		.loc 1 3501 25 discriminator 1
 8535 011c 7B68     		ldr	r3, [r7, #4]
 8536 011e 1B6C     		ldr	r3, [r3, #64]
3500:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                  (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8537              		.loc 1 3500 53 discriminator 1
 8538 0120 002B     		cmp	r3, #0
 8539 0122 03D1     		bne	.L593
3502:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3503:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3504:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 8540              		.loc 1 3504 17
 8541 0124 7B68     		ldr	r3, [r7, #4]
 8542 0126 1B68     		ldr	r3, [r3]
 8543              		.loc 1 3504 33
 8544 0128 FF22     		movs	r2, #255
 8545 012a 9A62     		str	r2, [r3, #40]
 8546              	.L593:
ARM GAS  /tmp/ccUeuQwq.s 			page 213


3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8547              		.loc 1 3434 79 discriminator 2
 8548 012c BB8A     		ldrh	r3, [r7, #20]
 8549 012e 013B     		subs	r3, r3, #1
 8550 0130 BB82     		strh	r3, [r7, #20]	@ movhi
 8551              	.L592:
3434:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8552              		.loc 1 3434 5 discriminator 1
 8553 0132 BB8A     		ldrh	r3, [r7, #20]
 8554 0134 002B     		cmp	r3, #0
 8555 0136 7FF479AF 		bne	.L597
3505:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3506:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else
3507:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3508:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Nothing to do */
3509:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3510:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3511:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3512:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3513:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3514:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3515:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     disabled (i.e. one interrupt per received frame).
3516:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     */
3517:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     rxdatacount = husart->RxXferCount;
 8556              		.loc 1 3517 17
 8557 013a 7B68     		ldr	r3, [r7, #4]
 8558 013c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8559 013e 3B82     		strh	r3, [r7, #16]	@ movhi
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((rxdatacount != 0U)) && (rxdatacount < husart->NbRxDataToProcess))
 8560              		.loc 1 3518 8
 8561 0140 3B8A     		ldrh	r3, [r7, #16]
 8562 0142 002B     		cmp	r3, #0
 8563 0144 31D0     		beq	.L600
 8564              		.loc 1 3518 55 discriminator 1
 8565 0146 7B68     		ldr	r3, [r7, #4]
 8566 0148 5B8F     		ldrh	r3, [r3, #58]
 8567              		.loc 1 3518 31 discriminator 1
 8568 014a 3A8A     		ldrh	r2, [r7, #16]
 8569 014c 9A42     		cmp	r2, r3
 8570 014e 2CD2     		bcs	.L600
3519:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3520:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART RXFT interrupt*/
3521:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_RXFTIE);
 8571              		.loc 1 3521 7
 8572 0150 7B68     		ldr	r3, [r7, #4]
 8573 0152 1B68     		ldr	r3, [r3]
 8574 0154 9A68     		ldr	r2, [r3, #8]
 8575 0156 7B68     		ldr	r3, [r7, #4]
 8576 0158 1B68     		ldr	r3, [r3]
 8577 015a 22F08052 		bic	r2, r2, #268435456
 8578 015e 9A60     		str	r2, [r3, #8]
3522:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3523:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Update the RxISR function pointer */
3524:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxISR = USART_RxISR_8BIT;
 8579              		.loc 1 3524 21
 8580 0160 7B68     		ldr	r3, [r7, #4]
 8581 0162 154A     		ldr	r2, .L602+4
ARM GAS  /tmp/ccUeuQwq.s 			page 214


 8582 0164 9A64     		str	r2, [r3, #72]
3525:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3526:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Data Register Not Empty interrupt */
3527:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8583              		.loc 1 3527 7
 8584 0166 7B68     		ldr	r3, [r7, #4]
 8585 0168 1B68     		ldr	r3, [r3]
 8586 016a 1A68     		ldr	r2, [r3]
 8587 016c 7B68     		ldr	r3, [r7, #4]
 8588 016e 1B68     		ldr	r3, [r3]
 8589 0170 42F02002 		orr	r2, r2, #32
 8590 0174 1A60     		str	r2, [r3]
3528:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3529:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->TxXferCount == 0U) &&
 8591              		.loc 1 3529 18
 8592 0176 7B68     		ldr	r3, [r7, #4]
 8593 0178 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8594 017a 9BB2     		uxth	r3, r3
 8595              		.loc 1 3529 10
 8596 017c 002B     		cmp	r3, #0
 8597 017e 14D1     		bne	.L600
 8598              		.loc 1 3529 39 discriminator 1
 8599 0180 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8600 0182 322B     		cmp	r3, #50
 8601 0184 11D1     		bne	.L600
3530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (state == HAL_USART_STATE_BUSY_TX_RX) &&
3531:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8602              		.loc 1 3531 18
 8603 0186 7B68     		ldr	r3, [r7, #4]
 8604 0188 1B6C     		ldr	r3, [r3, #64]
3530:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (state == HAL_USART_STATE_BUSY_TX_RX) &&
 8605              		.loc 1 3530 49
 8606 018a 002B     		cmp	r3, #0
 8607 018c 0DD1     		bne	.L600
3532:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3533:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3534:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 8608              		.loc 1 3534 15
 8609 018e 7B68     		ldr	r3, [r7, #4]
 8610 0190 1B68     		ldr	r3, [r3]
 8611              		.loc 1 3534 31
 8612 0192 FF22     		movs	r2, #255
 8613 0194 9A62     		str	r2, [r3, #40]
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8614              		.loc 1 3518 8
 8615 0196 08E0     		b	.L600
 8616              	.L591:
3535:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3536:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3537:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3538:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
3539:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3540:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear RXNE interrupt flag */
3541:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 8617              		.loc 1 3541 5
 8618 0198 7B68     		ldr	r3, [r7, #4]
 8619 019a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccUeuQwq.s 			page 215


 8620 019c 9A69     		ldr	r2, [r3, #24]
 8621 019e 7B68     		ldr	r3, [r7, #4]
 8622 01a0 1B68     		ldr	r3, [r3]
 8623 01a2 42F00802 		orr	r2, r2, #8
 8624 01a6 9A61     		str	r2, [r3, #24]
3542:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3543:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 8625              		.loc 1 3543 1
 8626 01a8 00E0     		b	.L601
 8627              	.L600:
3518:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8628              		.loc 1 3518 8
 8629 01aa 00BF     		nop
 8630              	.L601:
 8631              		.loc 1 3543 1
 8632 01ac 00BF     		nop
 8633 01ae 1837     		adds	r7, r7, #24
 8634              	.LCFI259:
 8635              		.cfi_def_cfa_offset 8
 8636 01b0 BD46     		mov	sp, r7
 8637              	.LCFI260:
 8638              		.cfi_def_cfa_register 13
 8639              		@ sp needed
 8640 01b2 80BD     		pop	{r7, pc}
 8641              	.L603:
 8642              		.align	2
 8643              	.L602:
 8644 01b4 FEFFFFEF 		.word	-268435458
 8645 01b8 00000000 		.word	USART_RxISR_8BIT
 8646              		.cfi_endproc
 8647              	.LFE378:
 8649              		.section	.text.USART_RxISR_16BIT_FIFOEN,"ax",%progbits
 8650              		.align	1
 8651              		.syntax unified
 8652              		.thumb
 8653              		.thumb_func
 8654              		.fpu fpv5-d16
 8656              	USART_RxISR_16BIT_FIFOEN:
 8657              	.LFB379:
3544:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3545:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** /**
3546:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @brief  Simplex receive an amount of data in non-blocking mode.
3547:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   Function called under interruption only, once
3548:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         interruptions have been enabled by HAL_USART_Receive_IT().
3549:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @note   ISR function executed when FIFO mode is enabled and when the
3550:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   *         data word length is 9 bits long.
3551:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @param  husart USART handle
3552:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   * @retval None
3553:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   */
3554:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** static void USART_RxISR_16BIT_FIFOEN(USART_HandleTypeDef *husart)
3555:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** {
 8658              		.loc 1 3555 1
 8659              		.cfi_startproc
 8660              		@ args = 0, pretend = 0, frame = 32
 8661              		@ frame_needed = 1, uses_anonymous_args = 0
 8662 0000 80B5     		push	{r7, lr}
 8663              	.LCFI261:
ARM GAS  /tmp/ccUeuQwq.s 			page 216


 8664              		.cfi_def_cfa_offset 8
 8665              		.cfi_offset 7, -8
 8666              		.cfi_offset 14, -4
 8667 0002 88B0     		sub	sp, sp, #32
 8668              	.LCFI262:
 8669              		.cfi_def_cfa_offset 40
 8670 0004 00AF     		add	r7, sp, #0
 8671              	.LCFI263:
 8672              		.cfi_def_cfa_register 7
 8673 0006 7860     		str	r0, [r7, #4]
3556:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   HAL_USART_StateTypeDef state = husart->State;
 8674              		.loc 1 3556 26
 8675 0008 7B68     		ldr	r3, [r7, #4]
 8676 000a 93F85930 		ldrb	r3, [r3, #89]
 8677 000e FB77     		strb	r3, [r7, #31]
3557:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t txdatacount;
3558:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t rxdatacount;
3559:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t *tmp;
3560:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t uhMask = husart->Mask;
 8678              		.loc 1 3560 12
 8679 0010 7B68     		ldr	r3, [r7, #4]
 8680 0012 1B8F     		ldrh	r3, [r3, #56]	@ movhi
 8681 0014 7B83     		strh	r3, [r7, #26]	@ movhi
3561:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint16_t nb_rx_data;
3562:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   uint32_t txftie;
3563:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3564:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   /* Check that a Tx process is ongoing */
3565:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   if ((state == HAL_USART_STATE_BUSY_RX) ||
 8682              		.loc 1 3565 6
 8683 0016 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8684 0018 222B     		cmp	r3, #34
 8685 001a 03D0     		beq	.L605
 8686              		.loc 1 3565 42 discriminator 1
 8687 001c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8688 001e 322B     		cmp	r3, #50
 8689 0020 40F0BB80 		bne	.L606
 8690              	.L605:
3566:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       (state == HAL_USART_STATE_BUSY_TX_RX))
3567:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     for (nb_rx_data = husart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
 8691              		.loc 1 3568 21
 8692 0024 7B68     		ldr	r3, [r7, #4]
 8693 0026 5B8F     		ldrh	r3, [r3, #58]	@ movhi
 8694 0028 BB83     		strh	r3, [r7, #28]	@ movhi
 8695              		.loc 1 3568 5
 8696 002a 83E0     		b	.L607
 8697              	.L612:
3569:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3570:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if (__HAL_USART_GET_FLAG(husart, USART_FLAG_RXFNE) == SET)
 8698              		.loc 1 3570 11
 8699 002c 7B68     		ldr	r3, [r7, #4]
 8700 002e 1B68     		ldr	r3, [r3]
 8701 0030 DB69     		ldr	r3, [r3, #28]
 8702 0032 03F02003 		and	r3, r3, #32
 8703              		.loc 1 3570 10
 8704 0036 202B     		cmp	r3, #32
 8705 0038 79D1     		bne	.L608
ARM GAS  /tmp/ccUeuQwq.s 			page 217


3571:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3572:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         tmp = (uint16_t *) husart->pRxBuffPtr;
 8706              		.loc 1 3572 13
 8707 003a 7B68     		ldr	r3, [r7, #4]
 8708 003c 1B6B     		ldr	r3, [r3, #48]
 8709 003e 7B61     		str	r3, [r7, #20]
3573:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         *tmp = (uint16_t)(husart->Instance->RDR & uhMask);
 8710              		.loc 1 3573 33
 8711 0040 7B68     		ldr	r3, [r7, #4]
 8712 0042 1B68     		ldr	r3, [r3]
 8713              		.loc 1 3573 43
 8714 0044 5B6A     		ldr	r3, [r3, #36]
 8715              		.loc 1 3573 16
 8716 0046 9AB2     		uxth	r2, r3
 8717 0048 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 8718 004a 1340     		ands	r3, r3, r2
 8719 004c 9AB2     		uxth	r2, r3
 8720              		.loc 1 3573 14
 8721 004e 7B69     		ldr	r3, [r7, #20]
 8722 0050 1A80     		strh	r2, [r3]	@ movhi
3574:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->pRxBuffPtr += 2U;
 8723              		.loc 1 3574 28
 8724 0052 7B68     		ldr	r3, [r7, #4]
 8725 0054 1B6B     		ldr	r3, [r3, #48]
 8726 0056 9A1C     		adds	r2, r3, #2
 8727 0058 7B68     		ldr	r3, [r7, #4]
 8728 005a 1A63     		str	r2, [r3, #48]
3575:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->RxXferCount--;
 8729              		.loc 1 3575 15
 8730 005c 7B68     		ldr	r3, [r7, #4]
 8731 005e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8732 0060 9BB2     		uxth	r3, r3
 8733              		.loc 1 3575 28
 8734 0062 013B     		subs	r3, r3, #1
 8735 0064 9AB2     		uxth	r2, r3
 8736 0066 7B68     		ldr	r3, [r7, #4]
 8737 0068 DA86     		strh	r2, [r3, #54]	@ movhi
3576:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3577:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         if (husart->RxXferCount == 0U)
 8738              		.loc 1 3577 19
 8739 006a 7B68     		ldr	r3, [r7, #4]
 8740 006c DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8741 006e 9BB2     		uxth	r3, r3
 8742              		.loc 1 3577 12
 8743 0070 002B     		cmp	r3, #0
 8744 0072 51D1     		bne	.L609
3578:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3579:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Disable the USART Parity Error Interrupt */
3580:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR1, USART_CR1_PEIE);
 8745              		.loc 1 3580 11
 8746 0074 7B68     		ldr	r3, [r7, #4]
 8747 0076 1B68     		ldr	r3, [r3]
 8748 0078 1A68     		ldr	r2, [r3]
 8749 007a 7B68     		ldr	r3, [r7, #4]
 8750 007c 1B68     		ldr	r3, [r3]
 8751 007e 22F48072 		bic	r2, r2, #256
 8752 0082 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccUeuQwq.s 			page 218


3581:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3582:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Disable the USART Error Interrupt: (Frame error, noise error, overrun error)
3583:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****              and RX FIFO Threshold interrupt */
3584:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           CLEAR_BIT(husart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 8753              		.loc 1 3584 11
 8754 0084 7B68     		ldr	r3, [r7, #4]
 8755 0086 1B68     		ldr	r3, [r3]
 8756 0088 9968     		ldr	r1, [r3, #8]
 8757 008a 7B68     		ldr	r3, [r7, #4]
 8758 008c 1A68     		ldr	r2, [r3]
 8759 008e 4A4B     		ldr	r3, .L617
 8760 0090 0B40     		ands	r3, r3, r1
 8761 0092 9360     		str	r3, [r2, #8]
3585:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3586:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Clear RxISR function pointer */
3587:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->RxISR = NULL;
 8762              		.loc 1 3587 25
 8763 0094 7B68     		ldr	r3, [r7, #4]
 8764 0096 0022     		movs	r2, #0
 8765 0098 9A64     		str	r2, [r3, #72]
3588:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3589:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* txftie and txdatacount are temporary variables for MISRAC2012-Rule-13.5 */
3590:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           txftie = READ_BIT(husart->Instance->CR3, USART_CR3_TXFTIE);
 8766              		.loc 1 3590 20
 8767 009a 7B68     		ldr	r3, [r7, #4]
 8768 009c 1B68     		ldr	r3, [r3]
 8769 009e 9B68     		ldr	r3, [r3, #8]
 8770              		.loc 1 3590 18
 8771 00a0 03F40003 		and	r3, r3, #8388608
 8772 00a4 3B61     		str	r3, [r7, #16]
3591:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           txdatacount = husart->TxXferCount;
 8773              		.loc 1 3591 23
 8774 00a6 7B68     		ldr	r3, [r7, #4]
 8775 00a8 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8776 00aa FB81     		strh	r3, [r7, #14]	@ movhi
3592:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3593:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           if (state == HAL_USART_STATE_BUSY_RX)
 8777              		.loc 1 3593 14
 8778 00ac FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8779 00ae 222B     		cmp	r3, #34
 8780 00b0 1AD1     		bne	.L610
3594:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3595:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Clear SPI slave underrun flag and discard transmit data */
3596:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             if (husart->SlaveMode == USART_SLAVEMODE_ENABLE)
 8781              		.loc 1 3596 23
 8782 00b2 7B68     		ldr	r3, [r7, #4]
 8783 00b4 1B6C     		ldr	r3, [r3, #64]
 8784              		.loc 1 3596 16
 8785 00b6 012B     		cmp	r3, #1
 8786 00b8 0CD1     		bne	.L611
3597:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             {
3598:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               __HAL_USART_CLEAR_UDRFLAG(husart);
 8787              		.loc 1 3598 15
 8788 00ba 7B68     		ldr	r3, [r7, #4]
 8789 00bc 1B68     		ldr	r3, [r3]
 8790 00be 4FF40052 		mov	r2, #8192
 8791 00c2 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccUeuQwq.s 			page 219


3599:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****               __HAL_USART_SEND_REQ(husart, USART_TXDATA_FLUSH_REQUEST);
 8792              		.loc 1 3599 15
 8793 00c4 7B68     		ldr	r3, [r7, #4]
 8794 00c6 1B68     		ldr	r3, [r3]
 8795 00c8 9A69     		ldr	r2, [r3, #24]
 8796 00ca 7B68     		ldr	r3, [r7, #4]
 8797 00cc 1B68     		ldr	r3, [r3]
 8798 00ce 42F01002 		orr	r2, r2, #16
 8799 00d2 9A61     		str	r2, [r3, #24]
 8800              	.L611:
3600:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             }
3601:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3602:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Rx process is completed, restore husart->State to Ready */
3603:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->State = HAL_USART_STATE_READY;
 8801              		.loc 1 3603 27
 8802 00d4 7B68     		ldr	r3, [r7, #4]
 8803 00d6 0122     		movs	r2, #1
 8804 00d8 83F85920 		strb	r2, [r3, #89]
3604:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             state = HAL_USART_STATE_READY;
 8805              		.loc 1 3604 19
 8806 00dc 0123     		movs	r3, #1
 8807 00de FB77     		strb	r3, [r7, #31]
3605:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3606:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3607:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call registered Rx Complete Callback */
3608:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->RxCpltCallback(husart);
3609:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3610:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call legacy weak Rx Complete Callback */
3611:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             HAL_USART_RxCpltCallback(husart);
 8808              		.loc 1 3611 13
 8809 00e0 7868     		ldr	r0, [r7, #4]
 8810 00e2 FFF7FEFF 		bl	HAL_USART_RxCpltCallback
 8811 00e6 22E0     		b	.L608
 8812              	.L610:
3612:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3613:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3614:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           else if ((READ_BIT(husart->Instance->CR1, USART_CR1_TCIE) != USART_CR1_TCIE) &&
 8813              		.loc 1 3614 21
 8814 00e8 7B68     		ldr	r3, [r7, #4]
 8815 00ea 1B68     		ldr	r3, [r3]
 8816 00ec 1B68     		ldr	r3, [r3]
 8817 00ee 03F04003 		and	r3, r3, #64
 8818              		.loc 1 3614 19
 8819 00f2 402B     		cmp	r3, #64
 8820 00f4 1BD0     		beq	.L608
 8821              		.loc 1 3614 88 discriminator 1
 8822 00f6 3B69     		ldr	r3, [r7, #16]
 8823 00f8 B3F5000F 		cmp	r3, #8388608
 8824 00fc 17D0     		beq	.L608
3615:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                    (txftie != USART_CR3_TXFTIE) &&
 8825              		.loc 1 3615 49
 8826 00fe FB89     		ldrh	r3, [r7, #14]
 8827 0100 002B     		cmp	r3, #0
 8828 0102 14D1     		bne	.L608
3616:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                    (txdatacount == 0U))
3617:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3618:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* TxRx process is completed, restore husart->State to Ready */
ARM GAS  /tmp/ccUeuQwq.s 			page 220


3619:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->State = HAL_USART_STATE_READY;
 8829              		.loc 1 3619 27
 8830 0104 7B68     		ldr	r3, [r7, #4]
 8831 0106 0122     		movs	r2, #1
 8832 0108 83F85920 		strb	r2, [r3, #89]
3620:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             state = HAL_USART_STATE_READY;
 8833              		.loc 1 3620 19
 8834 010c 0123     		movs	r3, #1
 8835 010e FB77     		strb	r3, [r7, #31]
3621:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3622:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #if (USE_HAL_USART_REGISTER_CALLBACKS == 1)
3623:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call registered Tx Rx Complete Callback */
3624:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             husart->TxRxCpltCallback(husart);
3625:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #else
3626:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Call legacy weak Tx Rx Complete Callback */
3627:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             HAL_USART_TxRxCpltCallback(husart);
 8836              		.loc 1 3627 13
 8837 0110 7868     		ldr	r0, [r7, #4]
 8838 0112 FFF7FEFF 		bl	HAL_USART_TxRxCpltCallback
 8839 0116 0AE0     		b	.L608
 8840              	.L609:
3628:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** #endif /* USE_HAL_USART_REGISTER_CALLBACKS */
3629:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3630:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           else
3631:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           {
3632:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****             /* Nothing to do */
3633:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           }
3634:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else if ((state == HAL_USART_STATE_BUSY_RX) &&
 8841              		.loc 1 3635 17
 8842 0118 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8843 011a 222B     		cmp	r3, #34
 8844 011c 07D1     		bne	.L608
3636:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                  (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8845              		.loc 1 3636 25 discriminator 1
 8846 011e 7B68     		ldr	r3, [r7, #4]
 8847 0120 1B6C     		ldr	r3, [r3, #64]
3635:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****                  (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8848              		.loc 1 3635 53 discriminator 1
 8849 0122 002B     		cmp	r3, #0
 8850 0124 03D1     		bne	.L608
3637:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3638:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3639:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 8851              		.loc 1 3639 17
 8852 0126 7B68     		ldr	r3, [r7, #4]
 8853 0128 1B68     		ldr	r3, [r3]
 8854              		.loc 1 3639 33
 8855 012a FF22     		movs	r2, #255
 8856 012c 9A62     		str	r2, [r3, #40]
 8857              	.L608:
3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8858              		.loc 1 3568 79 discriminator 2
 8859 012e BB8B     		ldrh	r3, [r7, #28]
 8860 0130 013B     		subs	r3, r3, #1
 8861 0132 BB83     		strh	r3, [r7, #28]	@ movhi
 8862              	.L607:
ARM GAS  /tmp/ccUeuQwq.s 			page 221


3568:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8863              		.loc 1 3568 5 discriminator 1
 8864 0134 BB8B     		ldrh	r3, [r7, #28]
 8865 0136 002B     		cmp	r3, #0
 8866 0138 7FF478AF 		bne	.L612
3640:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3641:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         else
3642:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         {
3643:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           /* Nothing to do */
3644:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         }
3645:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3646:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3647:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3648:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3649:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3650:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     disabled (i.e. one interrupt per received frame).
3651:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     */
3652:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     rxdatacount = husart->RxXferCount;
 8867              		.loc 1 3652 17
 8868 013c 7B68     		ldr	r3, [r7, #4]
 8869 013e DB8E     		ldrh	r3, [r3, #54]	@ movhi
 8870 0140 3B83     		strh	r3, [r7, #24]	@ movhi
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     if (((rxdatacount != 0U)) && (rxdatacount < husart->NbRxDataToProcess))
 8871              		.loc 1 3653 8
 8872 0142 3B8B     		ldrh	r3, [r7, #24]
 8873 0144 002B     		cmp	r3, #0
 8874 0146 31D0     		beq	.L615
 8875              		.loc 1 3653 55 discriminator 1
 8876 0148 7B68     		ldr	r3, [r7, #4]
 8877 014a 5B8F     		ldrh	r3, [r3, #58]
 8878              		.loc 1 3653 31 discriminator 1
 8879 014c 3A8B     		ldrh	r2, [r7, #24]
 8880 014e 9A42     		cmp	r2, r3
 8881 0150 2CD2     		bcs	.L615
3654:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
3655:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Disable the USART RXFT interrupt*/
3656:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       CLEAR_BIT(husart->Instance->CR3, USART_CR3_RXFTIE);
 8882              		.loc 1 3656 7
 8883 0152 7B68     		ldr	r3, [r7, #4]
 8884 0154 1B68     		ldr	r3, [r3]
 8885 0156 9A68     		ldr	r2, [r3, #8]
 8886 0158 7B68     		ldr	r3, [r7, #4]
 8887 015a 1B68     		ldr	r3, [r3]
 8888 015c 22F08052 		bic	r2, r2, #268435456
 8889 0160 9A60     		str	r2, [r3, #8]
3657:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3658:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Update the RxISR function pointer */
3659:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       husart->RxISR = USART_RxISR_16BIT;
 8890              		.loc 1 3659 21
 8891 0162 7B68     		ldr	r3, [r7, #4]
 8892 0164 154A     		ldr	r2, .L617+4
 8893 0166 9A64     		str	r2, [r3, #72]
3660:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3661:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       /* Enable the USART Data Register Not Empty interrupt */
3662:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       SET_BIT(husart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
 8894              		.loc 1 3662 7
 8895 0168 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccUeuQwq.s 			page 222


 8896 016a 1B68     		ldr	r3, [r3]
 8897 016c 1A68     		ldr	r2, [r3]
 8898 016e 7B68     		ldr	r3, [r7, #4]
 8899 0170 1B68     		ldr	r3, [r3]
 8900 0172 42F02002 		orr	r2, r2, #32
 8901 0176 1A60     		str	r2, [r3]
3663:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** 
3664:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       if ((husart->TxXferCount == 0U) &&
 8902              		.loc 1 3664 18
 8903 0178 7B68     		ldr	r3, [r7, #4]
 8904 017a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 8905 017c 9BB2     		uxth	r3, r3
 8906              		.loc 1 3664 10
 8907 017e 002B     		cmp	r3, #0
 8908 0180 14D1     		bne	.L615
 8909              		.loc 1 3664 39 discriminator 1
 8910 0182 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8911 0184 322B     		cmp	r3, #50
 8912 0186 11D1     		bne	.L615
3665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (state == HAL_USART_STATE_BUSY_TX_RX) &&
3666:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (husart->SlaveMode == USART_SLAVEMODE_DISABLE))
 8913              		.loc 1 3666 18
 8914 0188 7B68     		ldr	r3, [r7, #4]
 8915 018a 1B6C     		ldr	r3, [r3, #64]
3665:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****           (state == HAL_USART_STATE_BUSY_TX_RX) &&
 8916              		.loc 1 3665 49
 8917 018c 002B     		cmp	r3, #0
 8918 018e 0DD1     		bne	.L615
3667:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       {
3668:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         /* Send dummy byte in order to generate the clock for the Slave to Send the next data */
3669:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****         husart->Instance->TDR = (USART_DUMMY_DATA & (uint16_t)0x00FF);
 8919              		.loc 1 3669 15
 8920 0190 7B68     		ldr	r3, [r7, #4]
 8921 0192 1B68     		ldr	r3, [r3]
 8922              		.loc 1 3669 31
 8923 0194 FF22     		movs	r2, #255
 8924 0196 9A62     		str	r2, [r3, #40]
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8925              		.loc 1 3653 8
 8926 0198 08E0     		b	.L615
 8927              	.L606:
3670:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****       }
3671:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     }
3672:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
3673:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   else
3674:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   {
3675:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     /* Clear RXNE interrupt flag */
3676:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     __HAL_USART_SEND_REQ(husart, USART_RXDATA_FLUSH_REQUEST);
 8928              		.loc 1 3676 5
 8929 019a 7B68     		ldr	r3, [r7, #4]
 8930 019c 1B68     		ldr	r3, [r3]
 8931 019e 9A69     		ldr	r2, [r3, #24]
 8932 01a0 7B68     		ldr	r3, [r7, #4]
 8933 01a2 1B68     		ldr	r3, [r3]
 8934 01a4 42F00802 		orr	r2, r2, #8
 8935 01a8 9A61     		str	r2, [r3, #24]
3677:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****   }
ARM GAS  /tmp/ccUeuQwq.s 			page 223


3678:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c **** }
 8936              		.loc 1 3678 1
 8937 01aa 00E0     		b	.L616
 8938              	.L615:
3653:./Libraries/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_usart.c ****     {
 8939              		.loc 1 3653 8
 8940 01ac 00BF     		nop
 8941              	.L616:
 8942              		.loc 1 3678 1
 8943 01ae 00BF     		nop
 8944 01b0 2037     		adds	r7, r7, #32
 8945              	.LCFI264:
 8946              		.cfi_def_cfa_offset 8
 8947 01b2 BD46     		mov	sp, r7
 8948              	.LCFI265:
 8949              		.cfi_def_cfa_register 13
 8950              		@ sp needed
 8951 01b4 80BD     		pop	{r7, pc}
 8952              	.L618:
 8953 01b6 00BF     		.align	2
 8954              	.L617:
 8955 01b8 FEFFFFEF 		.word	-268435458
 8956 01bc 00000000 		.word	USART_RxISR_16BIT
 8957              		.cfi_endproc
 8958              	.LFE379:
 8960              		.text
 8961              	.Letext0:
 8962              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 8963              		.file 3 "./Libraries/CMSIS/Core/Include/core_cm7.h"
 8964              		.file 4 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 8965              		.file 5 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h747xx.h"
 8966              		.file 6 "./Libraries/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 8967              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 8968              		.file 8 "/usr/include/newlib/sys/_types.h"
 8969              		.file 9 "/usr/include/newlib/sys/reent.h"
 8970              		.file 10 "/usr/include/newlib/sys/lock.h"
 8971              		.file 11 "/usr/include/newlib/math.h"
 8972              		.file 12 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 8973              		.file 13 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 8974              		.file 14 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 8975              		.file 15 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 8976              		.file 16 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 8977              		.file 17 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_usart.h"
 8978              		.file 18 "./Libraries/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/ccUeuQwq.s 			page 224


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32h7xx_hal_usart.c
     /tmp/ccUeuQwq.s:17     .text.HAL_USART_Init:0000000000000000 $t
     /tmp/ccUeuQwq.s:25     .text.HAL_USART_Init:0000000000000000 HAL_USART_Init
     /tmp/ccUeuQwq.s:233    .text.HAL_USART_MspInit:0000000000000000 HAL_USART_MspInit
     /tmp/ccUeuQwq.s:5636   .text.USART_SetConfig:0000000000000000 USART_SetConfig
     /tmp/ccUeuQwq.s:7230   .text.USART_CheckIdleState:0000000000000000 USART_CheckIdleState
     /tmp/ccUeuQwq.s:139    .text.HAL_USART_DeInit:0000000000000000 $t
     /tmp/ccUeuQwq.s:146    .text.HAL_USART_DeInit:0000000000000000 HAL_USART_DeInit
     /tmp/ccUeuQwq.s:276    .text.HAL_USART_MspDeInit:0000000000000000 HAL_USART_MspDeInit
     /tmp/ccUeuQwq.s:226    .text.HAL_USART_MspInit:0000000000000000 $t
     /tmp/ccUeuQwq.s:269    .text.HAL_USART_MspDeInit:0000000000000000 $t
     /tmp/ccUeuQwq.s:312    .text.HAL_USART_Transmit:0000000000000000 $t
     /tmp/ccUeuQwq.s:319    .text.HAL_USART_Transmit:0000000000000000 HAL_USART_Transmit
     /tmp/ccUeuQwq.s:5538   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 USART_WaitOnFlagUntilTimeout
     /tmp/ccUeuQwq.s:562    .text.HAL_USART_Receive:0000000000000000 $t
     /tmp/ccUeuQwq.s:569    .text.HAL_USART_Receive:0000000000000000 HAL_USART_Receive
     /tmp/ccUeuQwq.s:903    .text.HAL_USART_TransmitReceive:0000000000000000 $t
     /tmp/ccUeuQwq.s:910    .text.HAL_USART_TransmitReceive:0000000000000000 HAL_USART_TransmitReceive
     /tmp/ccUeuQwq.s:1393   .text.HAL_USART_Transmit_IT:0000000000000000 $t
     /tmp/ccUeuQwq.s:1400   .text.HAL_USART_Transmit_IT:0000000000000000 HAL_USART_Transmit_IT
     /tmp/ccUeuQwq.s:1581   .text.HAL_USART_Transmit_IT:00000000000000f4 $d
     /tmp/ccUeuQwq.s:7694   .text.USART_TxISR_16BIT_FIFOEN:0000000000000000 USART_TxISR_16BIT_FIFOEN
     /tmp/ccUeuQwq.s:7559   .text.USART_TxISR_8BIT_FIFOEN:0000000000000000 USART_TxISR_8BIT_FIFOEN
     /tmp/ccUeuQwq.s:7446   .text.USART_TxISR_16BIT:0000000000000000 USART_TxISR_16BIT
     /tmp/ccUeuQwq.s:7338   .text.USART_TxISR_8BIT:0000000000000000 USART_TxISR_8BIT
     /tmp/ccUeuQwq.s:1589   .text.HAL_USART_Receive_IT:0000000000000000 $t
     /tmp/ccUeuQwq.s:1596   .text.HAL_USART_Receive_IT:0000000000000000 HAL_USART_Receive_IT
     /tmp/ccUeuQwq.s:1922   .text.HAL_USART_Receive_IT:00000000000001d0 $d
     /tmp/ccUeuQwq.s:8656   .text.USART_RxISR_16BIT_FIFOEN:0000000000000000 USART_RxISR_16BIT_FIFOEN
     /tmp/ccUeuQwq.s:8343   .text.USART_RxISR_8BIT_FIFOEN:0000000000000000 USART_RxISR_8BIT_FIFOEN
     /tmp/ccUeuQwq.s:8141   .text.USART_RxISR_16BIT:0000000000000000 USART_RxISR_16BIT
     /tmp/ccUeuQwq.s:7937   .text.USART_RxISR_8BIT:0000000000000000 USART_RxISR_8BIT
     /tmp/ccUeuQwq.s:1930   .text.HAL_USART_TransmitReceive_IT:0000000000000000 $t
     /tmp/ccUeuQwq.s:1937   .text.HAL_USART_TransmitReceive_IT:0000000000000000 HAL_USART_TransmitReceive_IT
     /tmp/ccUeuQwq.s:2256   .text.HAL_USART_TransmitReceive_IT:00000000000001d8 $d
     /tmp/ccUeuQwq.s:2268   .text.HAL_USART_Transmit_DMA:0000000000000000 $t
     /tmp/ccUeuQwq.s:2275   .text.HAL_USART_Transmit_DMA:0000000000000000 HAL_USART_Transmit_DMA
     /tmp/ccUeuQwq.s:2454   .text.HAL_USART_Transmit_DMA:00000000000000f4 $d
     /tmp/ccUeuQwq.s:4934   .text.USART_DMATransmitCplt:0000000000000000 USART_DMATransmitCplt
     /tmp/ccUeuQwq.s:5023   .text.USART_DMATxHalfCplt:0000000000000000 USART_DMATxHalfCplt
     /tmp/ccUeuQwq.s:5237   .text.USART_DMAError:0000000000000000 USART_DMAError
     /tmp/ccUeuQwq.s:2461   .text.HAL_USART_Receive_DMA:0000000000000000 $t
     /tmp/ccUeuQwq.s:2468   .text.HAL_USART_Receive_DMA:0000000000000000 HAL_USART_Receive_DMA
     /tmp/ccUeuQwq.s:2735   .text.HAL_USART_Receive_DMA:0000000000000180 $d
     /tmp/ccUeuQwq.s:5068   .text.USART_DMAReceiveCplt:0000000000000000 USART_DMAReceiveCplt
     /tmp/ccUeuQwq.s:5192   .text.USART_DMARxHalfCplt:0000000000000000 USART_DMARxHalfCplt
     /tmp/ccUeuQwq.s:2742   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 $t
     /tmp/ccUeuQwq.s:2749   .text.HAL_USART_TransmitReceive_DMA:0000000000000000 HAL_USART_TransmitReceive_DMA
     /tmp/ccUeuQwq.s:3025   .text.HAL_USART_TransmitReceive_DMA:000000000000018c $d
     /tmp/ccUeuQwq.s:3034   .text.HAL_USART_DMAPause:0000000000000000 $t
     /tmp/ccUeuQwq.s:3041   .text.HAL_USART_DMAPause:0000000000000000 HAL_USART_DMAPause
     /tmp/ccUeuQwq.s:3182   .text.HAL_USART_DMAResume:0000000000000000 $t
     /tmp/ccUeuQwq.s:3189   .text.HAL_USART_DMAResume:0000000000000000 HAL_USART_DMAResume
     /tmp/ccUeuQwq.s:3310   .text.HAL_USART_DMAStop:0000000000000000 $t
     /tmp/ccUeuQwq.s:3317   .text.HAL_USART_DMAStop:0000000000000000 HAL_USART_DMAStop
     /tmp/ccUeuQwq.s:4867   .text.USART_EndTransfer:0000000000000000 USART_EndTransfer
ARM GAS  /tmp/ccUeuQwq.s 			page 225


     /tmp/ccUeuQwq.s:3439   .text.HAL_USART_Abort:0000000000000000 $t
     /tmp/ccUeuQwq.s:3446   .text.HAL_USART_Abort:0000000000000000 HAL_USART_Abort
     /tmp/ccUeuQwq.s:3649   .text.HAL_USART_Abort:0000000000000130 $d
     /tmp/ccUeuQwq.s:3654   .text.HAL_USART_Abort_IT:0000000000000000 $t
     /tmp/ccUeuQwq.s:3661   .text.HAL_USART_Abort_IT:0000000000000000 HAL_USART_Abort_IT
     /tmp/ccUeuQwq.s:4732   .text.HAL_USART_AbortCpltCallback:0000000000000000 HAL_USART_AbortCpltCallback
     /tmp/ccUeuQwq.s:3913   .text.HAL_USART_Abort_IT:000000000000016c $d
     /tmp/ccUeuQwq.s:5356   .text.USART_DMATxAbortCallback:0000000000000000 USART_DMATxAbortCallback
     /tmp/ccUeuQwq.s:5447   .text.USART_DMARxAbortCallback:0000000000000000 USART_DMARxAbortCallback
     /tmp/ccUeuQwq.s:3920   .text.HAL_USART_IRQHandler:0000000000000000 $t
     /tmp/ccUeuQwq.s:3927   .text.HAL_USART_IRQHandler:0000000000000000 HAL_USART_IRQHandler
     /tmp/ccUeuQwq.s:4689   .text.HAL_USART_ErrorCallback:0000000000000000 HAL_USART_ErrorCallback
     /tmp/ccUeuQwq.s:7834   .text.USART_EndTransmit_IT:0000000000000000 USART_EndTransmit_IT
     /tmp/ccUeuQwq.s:4440   .text.HAL_USART_IRQHandler:00000000000002fc $d
     /tmp/ccUeuQwq.s:5303   .text.USART_DMAAbortOnError:0000000000000000 USART_DMAAbortOnError
     /tmp/ccUeuQwq.s:4444   .text.HAL_USART_IRQHandler:0000000000000304 $t
     /tmp/ccUeuQwq.s:4467   .text.HAL_USART_TxCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4474   .text.HAL_USART_TxCpltCallback:0000000000000000 HAL_USART_TxCpltCallback
     /tmp/ccUeuQwq.s:4510   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4517   .text.HAL_USART_TxHalfCpltCallback:0000000000000000 HAL_USART_TxHalfCpltCallback
     /tmp/ccUeuQwq.s:4553   .text.HAL_USART_RxCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4560   .text.HAL_USART_RxCpltCallback:0000000000000000 HAL_USART_RxCpltCallback
     /tmp/ccUeuQwq.s:4596   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4603   .text.HAL_USART_RxHalfCpltCallback:0000000000000000 HAL_USART_RxHalfCpltCallback
     /tmp/ccUeuQwq.s:4639   .text.HAL_USART_TxRxCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4646   .text.HAL_USART_TxRxCpltCallback:0000000000000000 HAL_USART_TxRxCpltCallback
     /tmp/ccUeuQwq.s:4682   .text.HAL_USART_ErrorCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4725   .text.HAL_USART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:4768   .text.HAL_USART_GetState:0000000000000000 $t
     /tmp/ccUeuQwq.s:4775   .text.HAL_USART_GetState:0000000000000000 HAL_USART_GetState
     /tmp/ccUeuQwq.s:4815   .text.HAL_USART_GetError:0000000000000000 $t
     /tmp/ccUeuQwq.s:4822   .text.HAL_USART_GetError:0000000000000000 HAL_USART_GetError
     /tmp/ccUeuQwq.s:4861   .text.USART_EndTransfer:0000000000000000 $t
     /tmp/ccUeuQwq.s:4923   .text.USART_EndTransfer:000000000000003c $d
     /tmp/ccUeuQwq.s:4928   .text.USART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccUeuQwq.s:5017   .text.USART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccUeuQwq.s:5062   .text.USART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccUeuQwq.s:5186   .text.USART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccUeuQwq.s:5231   .text.USART_DMAError:0000000000000000 $t
     /tmp/ccUeuQwq.s:5297   .text.USART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccUeuQwq.s:5350   .text.USART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:5441   .text.USART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccUeuQwq.s:5532   .text.USART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccUeuQwq.s:5630   .text.USART_SetConfig:0000000000000000 $t
     /tmp/ccUeuQwq.s:5754   .text.USART_SetConfig:00000000000000ac $d
     /tmp/ccUeuQwq.s:5795   .text.USART_SetConfig:0000000000000150 $t
     /tmp/ccUeuQwq.s:5848   .text.USART_SetConfig:00000000000001a4 $d
     /tmp/ccUeuQwq.s:5854   .text.USART_SetConfig:00000000000001bc $t
     /tmp/ccUeuQwq.s:5907   .text.USART_SetConfig:0000000000000210 $d
     /tmp/ccUeuQwq.s:5913   .text.USART_SetConfig:0000000000000228 $t
     /tmp/ccUeuQwq.s:5966   .text.USART_SetConfig:0000000000000280 $d
     /tmp/ccUeuQwq.s:6007   .text.USART_SetConfig:0000000000000324 $t
     /tmp/ccUeuQwq.s:6041   .text.USART_SetConfig:0000000000000354 $d
     /tmp/ccUeuQwq.s:6050   .text.USART_SetConfig:0000000000000370 $t
     /tmp/ccUeuQwq.s:6066   .text.USART_SetConfig:0000000000000390 $d
     /tmp/ccUeuQwq.s:6099   .text.USART_SetConfig:0000000000000414 $t
     /tmp/ccUeuQwq.s:7018   .text.USART_SetConfig:000000000000091c $d
ARM GAS  /tmp/ccUeuQwq.s 			page 226


     /tmp/ccUeuQwq.s:7023   .text.USART_SetConfig:0000000000000928 $t
     /tmp/ccUeuQwq.s:7224   .text.USART_CheckIdleState:0000000000000000 $t
     /tmp/ccUeuQwq.s:7332   .text.USART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccUeuQwq.s:7440   .text.USART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccUeuQwq.s:7553   .text.USART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccUeuQwq.s:7688   .text.USART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccUeuQwq.s:7828   .text.USART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccUeuQwq.s:7931   .text.USART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccUeuQwq.s:8135   .text.USART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccUeuQwq.s:8337   .text.USART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccUeuQwq.s:8644   .text.USART_RxISR_8BIT_FIFOEN:00000000000001b4 $d
     /tmp/ccUeuQwq.s:8650   .text.USART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccUeuQwq.s:8955   .text.USART_RxISR_16BIT_FIFOEN:00000000000001b8 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_USARTEx_TxFifoEmptyCallback
HAL_USARTEx_RxFifoFullCallback
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCCEx_GetPLL2ClockFreq
HAL_RCCEx_GetPLL3ClockFreq
